INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/local/opt/python@3.9/bin/python3.9 /Users/htrappmann/workspace/planner/downward/builds/release/bin/translate/translate.py /Users/htrappmann/workspace/slide_puzzle_gen/sokoban2-domain.pddl /Users/htrappmann/workspace/slide_puzzle_gen/sokoban2/sokoban2-01-problem.pddl --sas-file /Users/htrappmann/workspace/slide_puzzle_gen/solve-downward/sokoban2/sokoban2-01.sas
Parsing...
Parsing: [0.000s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 49 rules.
Computing model... [0.030s CPU, 0.017s wall-clock]
584 relevant atoms
1280 auxiliary atoms
1864 final queue length
2062 total queue pushes
Completing instantiation... [0.010s CPU, 0.005s wall-clock]
Instantiating: [0.040s CPU, 0.028s wall-clock]
Computing fact groups...
Finding invariants...
4 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
41 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.003s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.010s CPU, 0.007s wall-clock]
72 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
1 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.003s wall-clock]
Reordering and filtering variables...
42 of 42 variables necessary.
0 of 1 mutex groups necessary.
216 of 216 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.002s wall-clock]
Translator variables: 42
Translator derived variables: 0
Translator facts: 138
Translator goal facts: 6
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 216
Translator axioms: 0
Translator task size: 1230
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.002s wall-clock]
Done! [0.050s CPU, 0.049s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /Users/htrappmann/workspace/slide_puzzle_gen/solve-downward/sokoban2/sokoban2-01.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /Users/htrappmann/workspace/planner/downward/builds/release/bin/downward --if-unit-cost --evaluator 'hlm=lmcount(lm_reasonable_orders_hps(lm_rhw()),pref=true)' --evaluator 'hff=ff()' --search 'iterated([lazy_greedy([hff,hlm],preferred=[hff,hlm]),lazy_wastar([hff,hlm],preferred=[hff,hlm],w=5),lazy_wastar([hff,hlm],preferred=[hff,hlm],w=3),lazy_wastar([hff,hlm],preferred=[hff,hlm],w=2),lazy_wastar([hff,hlm],preferred=[hff,hlm],w=1)],repeat_last=true,continue_on_fail=true)' --if-non-unit-cost --evaluator 'hlm1=lmcount(lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=true)' --evaluator 'hff1=ff(transform=adapt_costs(one))' --evaluator 'hlm2=lmcount(lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(plusone),pref=true)' --evaluator 'hff2=ff(transform=adapt_costs(plusone))' --search 'iterated([lazy_greedy([hff1,hlm1],preferred=[hff1,hlm1],cost_type=one,reopen_closed=false),lazy_greedy([hff2,hlm2],preferred=[hff2,hlm2],reopen_closed=false),lazy_wastar([hff2,hlm2],preferred=[hff2,hlm2],w=5),lazy_wastar([hff2,hlm2],preferred=[hff2,hlm2],w=3),lazy_wastar([hff2,hlm2],preferred=[hff2,hlm2],w=2),lazy_wastar([hff2,hlm2],preferred=[hff2,hlm2],w=1)],repeat_last=true,continue_on_fail=true)' --always --internal-plan-file /Users/htrappmann/workspace/slide_puzzle_gen/solve-downward/sokoban2/sokoban2-01.txt < /Users/htrappmann/workspace/slide_puzzle_gen/solve-downward/sokoban2/sokoban2-01.sas
[t=0.00322371s, 4311876 KB] reading input...
[t=0.00881568s, 4312900 KB] done reading input!
[t=0.0110285s, 4321092 KB] Initializing landmark count heuristic...
[t=0.011047s, 4321092 KB] Generating landmark graph...
[t=0.0110893s, 4321092 KB] Building a landmark graph with reasonable orders.
[t=0.0115251s, 4321092 KB] Initializing Exploration...
[t=0.0118559s, 4321092 KB] Generating landmarks using the RPG/SAS+ approach
Removed 0 reasonable or obedient reasonable orders
[t=0.0174714s, 4322116 KB] Landmarks generation time: 0.00638885s
[t=0.0174881s, 4322116 KB] Discovered 50 landmarks, of which 4 are disjunctive and 0 are conjunctive.
[t=0.0174936s, 4322116 KB] 309 edges
[t=0.0175041s, 4322116 KB] approx. reasonable orders
[t=0.0177027s, 4322116 KB] approx. obedient reasonable orders
[t=0.0179016s, 4322116 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.017912s, 4322116 KB] Landmarks generation time: 0.00686293s
[t=0.017917s, 4322116 KB] Discovered 50 landmarks, of which 4 are disjunctive and 0 are conjunctive.
[t=0.0179217s, 4322116 KB] 309 edges
[t=0.0179256s, 4322116 KB] Landmark graph generation time: 0.00688317s
[t=0.0179329s, 4322116 KB] Landmark graph contains 50 landmarks, of which 4 are disjunctive and 0 are conjunctive.
[t=0.0179377s, 4322116 KB] Landmark graph contains 309 orderings.
[t=0.0183604s, 4322116 KB] Simplifying 360 unary operators... done! [360 unary operators]
[t=0.0186964s, 4322116 KB] time to simplify: 0.000340068s
[t=0.0187707s, 4322116 KB] Initializing additive heuristic...
[t=0.018776s, 4322116 KB] Initializing FF heuristic...
[t=0.0189566s, 4322116 KB] Building successor generator...done!
[t=0.0191702s, 4322116 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0191776s, 4322116 KB] time for successor generation creation: 0.000200659s
[t=0.01919s, 4322116 KB] Variables: 42
[t=0.0191953s, 4322116 KB] FactPairs: 138
[t=0.0191992s, 4322116 KB] Bytes per state: 8
[t=0.0201109s, 4322116 KB] Building successor generator...done!
[t=0.0201286s, 4322116 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0201334s, 4322116 KB] time for successor generation creation: 2.26e-07s
[t=0.02014s, 4322116 KB] Variables: 42
[t=0.0201444s, 4322116 KB] FactPairs: 138
[t=0.020148s, 4322116 KB] Bytes per state: 8
[t=0.0201818s, 4322116 KB] Starting search: lazy_greedy(list(hff, hlm), preferred = list(hff, hlm))
[t=0.0201926s, 4322116 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0202064s, 4322116 KB] 18 initial landmarks, 6 goal landmarks
[t=0.020266s, 4322116 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 32
[t=0.020275s, 4322116 KB] New best heuristic value for ff: 33
[t=0.0202791s, 4322116 KB] g=0, 1 evaluated, 0 expanded
[t=0.0202982s, 4322116 KB] Initial heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 32
[t=0.0203031s, 4322116 KB] Initial heuristic value for ff: 33
[t=0.020338s, 4322116 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 31
[t=0.0203439s, 4322116 KB] New best heuristic value for ff: 32
[t=0.0203477s, 4322116 KB] g=1, 2 evaluated, 1 expanded
[t=0.0438557s, 4331332 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 29
[t=0.043876s, 4331332 KB] g=21, 840 evaluated, 832 expanded
[t=0.0439139s, 4331332 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 27
[t=0.0439199s, 4331332 KB] New best heuristic value for ff: 27
[t=0.043924s, 4331332 KB] g=22, 841 evaluated, 833 expanded
[t=0.0439652s, 4331332 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 25
[t=0.0439715s, 4331332 KB] New best heuristic value for ff: 26
[t=0.043975s, 4331332 KB] g=23, 842 evaluated, 834 expanded
[t=0.0440136s, 4331332 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 23
[t=0.044019s, 4331332 KB] g=24, 843 evaluated, 835 expanded
[t=0.0440579s, 4331332 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 21
[t=0.0440631s, 4331332 KB] New best heuristic value for ff: 22
[t=0.0440665s, 4331332 KB] g=25, 844 evaluated, 836 expanded
[t=0.0441057s, 4331332 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 19
[t=0.0441103s, 4331332 KB] New best heuristic value for ff: 20
[t=0.0441137s, 4331332 KB] g=26, 845 evaluated, 837 expanded
[t=0.0441521s, 4331332 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 17
[t=0.0441575s, 4331332 KB] New best heuristic value for ff: 19
[t=0.0441609s, 4331332 KB] g=27, 846 evaluated, 838 expanded
[t=0.0442006s, 4331332 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 15
[t=0.0442062s, 4331332 KB] New best heuristic value for ff: 16
[t=0.0442096s, 4331332 KB] g=28, 847 evaluated, 839 expanded
[t=0.0442479s, 4331332 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 13
[t=0.0442531s, 4331332 KB] New best heuristic value for ff: 13
[t=0.0442565s, 4331332 KB] g=29, 848 evaluated, 840 expanded
[t=0.0442938s, 4331332 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 11
[t=0.0442992s, 4331332 KB] g=30, 849 evaluated, 841 expanded
[t=0.0443662s, 4331332 KB] New best heuristic value for ff: 12
[t=0.0443715s, 4331332 KB] g=32, 851 evaluated, 843 expanded
[t=0.0444307s, 4331332 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 9
[t=0.0444365s, 4331332 KB] New best heuristic value for ff: 9
[t=0.04444s, 4331332 KB] g=31, 853 evaluated, 845 expanded
[t=0.0447899s, 4331332 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 8
[t=0.0448022s, 4331332 KB] g=33, 863 evaluated, 855 expanded
[t=0.0454002s, 4331332 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 7
[t=0.0454126s, 4331332 KB] g=37, 877 evaluated, 869 expanded
[t=0.156649s, 4358024 KB] New best heuristic value for ff: 8
[t=0.156667s, 4358024 KB] g=139, 4847 evaluated, 4786 expanded
[t=0.156704s, 4358024 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 6
[t=0.15671s, 4358024 KB] New best heuristic value for ff: 7
[t=0.156714s, 4358024 KB] g=140, 4848 evaluated, 4787 expanded
[t=0.347546s, 4374536 KB] New best heuristic value for ff: 6
[t=0.347568s, 4374536 KB] g=140, 11746 evaluated, 11594 expanded
[t=0.452117s, 4374792 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 5
[t=0.452137s, 4374792 KB] g=78, 15865 evaluated, 15520 expanded
[t=0.452611s, 4374792 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 4
[t=0.452626s, 4374792 KB] g=79, 15882 evaluated, 15537 expanded
[t=0.539364s, 4374792 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 3
[t=0.539384s, 4374792 KB] New best heuristic value for ff: 5
[t=0.539389s, 4374792 KB] g=119, 19006 evaluated, 18633 expanded
[t=0.71306s, 4374792 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 2
[t=0.713082s, 4374792 KB] g=157, 25297 evaluated, 24858 expanded
[t=0.906697s, 4375304 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 1
[t=0.906717s, 4375304 KB] g=203, 32294 evaluated, 31791 expanded
[t=0.970196s, 4375304 KB] New best heuristic value for ff: 3
[t=0.970216s, 4375304 KB] g=283, 34620 evaluated, 34096 expanded
[t=0.970249s, 4375304 KB] New best heuristic value for ff: 2
[t=0.970254s, 4375304 KB] g=284, 34621 evaluated, 34097 expanded
[t=0.970285s, 4375304 KB] New best heuristic value for ff: 1
[t=0.970291s, 4375304 KB] g=285, 34622 evaluated, 34098 expanded
[t=0.970306s, 4375304 KB] Solution found!
[t=0.970325s, 4375304 KB] Actual search time: 0.950114s
move-n xy-12-4 xy-12-5 (1)
move-w xy-12-5 xy-11-5 (1)
move-w xy-11-5 xy-10-5 (1)
move-w xy-10-5 xy-9-5 (1)
move-n xy-9-5 xy-9-6 (1)
move-n xy-9-6 xy-9-7 (1)
move-n xy-9-7 xy-9-8 (1)
push-w xy-9-8 xy-8-8 xy-7-8 (1)
push-n xy-8-8 xy-8-9 xy-8-10 (1)
move-w xy-8-9 xy-7-9 (1)
move-w xy-7-9 xy-6-9 (1)
push-s xy-6-9 xy-6-8 xy-6-7 (1)
push-s xy-6-8 xy-6-7 xy-6-6 (1)
move-n xy-6-7 xy-6-8 (1)
move-w xy-6-8 xy-5-8 (1)
move-w xy-5-8 xy-4-8 (1)
move-s xy-4-8 xy-4-7 (1)
move-s xy-4-7 xy-4-6 (1)
move-s xy-4-6 xy-4-5 (1)
move-e xy-4-5 xy-5-5 (1)
push-e xy-5-5 xy-6-5 xy-7-5 (1)
push-e xy-6-5 xy-7-5 xy-8-5 (1)
push-e xy-7-5 xy-8-5 xy-9-5 (1)
push-e xy-8-5 xy-9-5 xy-10-5 (1)
push-e xy-9-5 xy-10-5 xy-11-5 (1)
push-e xy-10-5 xy-11-5 xy-12-5 (1)
push-e xy-11-5 xy-12-5 xy-13-5 (1)
push-e xy-12-5 xy-13-5 xy-14-5 (1)
push-e xy-13-5 xy-14-5 xy-15-5 (1)
push-e xy-14-5 xy-15-5 xy-16-5 (1)
push-e xy-15-5 xy-16-5 xy-17-5 (1)
push-e xy-16-5 xy-17-5 xy-18-5 (1)
move-s xy-17-5 xy-17-4 (1)
move-e xy-17-4 xy-18-4 (1)
push-n xy-18-4 xy-18-5 xy-18-6 (1)
move-w xy-18-5 xy-17-5 (1)
move-s xy-17-5 xy-17-4 (1)
move-w xy-17-4 xy-16-4 (1)
move-w xy-16-4 xy-15-4 (1)
move-n xy-15-4 xy-15-5 (1)
move-w xy-15-5 xy-14-5 (1)
move-w xy-14-5 xy-13-5 (1)
move-w xy-13-5 xy-12-5 (1)
move-w xy-12-5 xy-11-5 (1)
move-w xy-11-5 xy-10-5 (1)
move-w xy-10-5 xy-9-5 (1)
move-w xy-9-5 xy-8-5 (1)
move-w xy-8-5 xy-7-5 (1)
move-w xy-7-5 xy-6-5 (1)
push-n xy-6-5 xy-6-6 xy-6-7 (1)
push-n xy-6-6 xy-6-7 xy-6-8 (1)
move-s xy-6-7 xy-6-6 (1)
move-s xy-6-6 xy-6-5 (1)
move-w xy-6-5 xy-5-5 (1)
move-w xy-5-5 xy-4-5 (1)
move-n xy-4-5 xy-4-6 (1)
move-w xy-4-6 xy-3-6 (1)
move-w xy-3-6 xy-2-6 (1)
move-s xy-2-6 xy-2-5 (1)
push-e xy-2-5 xy-3-5 xy-4-5 (1)
push-e xy-3-5 xy-4-5 xy-5-5 (1)
push-e xy-4-5 xy-5-5 xy-6-5 (1)
push-e xy-5-5 xy-6-5 xy-7-5 (1)
push-e xy-6-5 xy-7-5 xy-8-5 (1)
push-e xy-7-5 xy-8-5 xy-9-5 (1)
push-e xy-8-5 xy-9-5 xy-10-5 (1)
push-e xy-9-5 xy-10-5 xy-11-5 (1)
push-e xy-10-5 xy-11-5 xy-12-5 (1)
push-e xy-11-5 xy-12-5 xy-13-5 (1)
push-e xy-12-5 xy-13-5 xy-14-5 (1)
push-e xy-13-5 xy-14-5 xy-15-5 (1)
push-e xy-14-5 xy-15-5 xy-16-5 (1)
push-e xy-15-5 xy-16-5 xy-17-5 (1)
move-n xy-16-5 xy-16-6 (1)
move-e xy-16-6 xy-17-6 (1)
push-s xy-17-6 xy-17-5 xy-17-4 (1)
move-w xy-17-5 xy-16-5 (1)
move-s xy-16-5 xy-16-4 (1)
push-e xy-16-4 xy-17-4 xy-18-4 (1)
move-n xy-17-4 xy-17-5 (1)
move-w xy-17-5 xy-16-5 (1)
move-w xy-16-5 xy-15-5 (1)
move-w xy-15-5 xy-14-5 (1)
move-w xy-14-5 xy-13-5 (1)
move-w xy-13-5 xy-12-5 (1)
move-w xy-12-5 xy-11-5 (1)
move-w xy-11-5 xy-10-5 (1)
move-w xy-10-5 xy-9-5 (1)
move-n xy-9-5 xy-9-6 (1)
move-n xy-9-6 xy-9-7 (1)
move-n xy-9-7 xy-9-8 (1)
move-w xy-9-8 xy-8-8 (1)
move-n xy-8-8 xy-8-9 (1)
move-w xy-8-9 xy-7-9 (1)
move-w xy-7-9 xy-6-9 (1)
push-s xy-6-9 xy-6-8 xy-6-7 (1)
push-s xy-6-8 xy-6-7 xy-6-6 (1)
push-s xy-6-7 xy-6-6 xy-6-5 (1)
move-n xy-6-6 xy-6-7 (1)
move-n xy-6-7 xy-6-8 (1)
move-w xy-6-8 xy-5-8 (1)
move-w xy-5-8 xy-4-8 (1)
move-s xy-4-8 xy-4-7 (1)
move-s xy-4-7 xy-4-6 (1)
move-s xy-4-6 xy-4-5 (1)
move-e xy-4-5 xy-5-5 (1)
push-e xy-5-5 xy-6-5 xy-7-5 (1)
push-e xy-6-5 xy-7-5 xy-8-5 (1)
push-e xy-7-5 xy-8-5 xy-9-5 (1)
push-e xy-8-5 xy-9-5 xy-10-5 (1)
push-e xy-9-5 xy-10-5 xy-11-5 (1)
push-e xy-10-5 xy-11-5 xy-12-5 (1)
push-e xy-11-5 xy-12-5 xy-13-5 (1)
push-e xy-12-5 xy-13-5 xy-14-5 (1)
push-e xy-13-5 xy-14-5 xy-15-5 (1)
push-e xy-14-5 xy-15-5 xy-16-5 (1)
push-e xy-15-5 xy-16-5 xy-17-5 (1)
move-s xy-16-5 xy-16-4 (1)
move-e xy-16-4 xy-17-4 (1)
push-n xy-17-4 xy-17-5 xy-17-6 (1)
move-w xy-17-5 xy-16-5 (1)
move-w xy-16-5 xy-15-5 (1)
move-w xy-15-5 xy-14-5 (1)
move-w xy-14-5 xy-13-5 (1)
move-w xy-13-5 xy-12-5 (1)
move-w xy-12-5 xy-11-5 (1)
move-w xy-11-5 xy-10-5 (1)
move-w xy-10-5 xy-9-5 (1)
move-n xy-9-5 xy-9-6 (1)
move-n xy-9-6 xy-9-7 (1)
move-n xy-9-7 xy-9-8 (1)
move-w xy-9-8 xy-8-8 (1)
push-w xy-8-8 xy-7-8 xy-6-8 (1)
move-n xy-7-8 xy-7-9 (1)
move-w xy-7-9 xy-6-9 (1)
push-s xy-6-9 xy-6-8 xy-6-7 (1)
push-s xy-6-8 xy-6-7 xy-6-6 (1)
push-s xy-6-7 xy-6-6 xy-6-5 (1)
move-n xy-6-6 xy-6-7 (1)
move-n xy-6-7 xy-6-8 (1)
move-w xy-6-8 xy-5-8 (1)
move-w xy-5-8 xy-4-8 (1)
move-s xy-4-8 xy-4-7 (1)
move-s xy-4-7 xy-4-6 (1)
move-s xy-4-6 xy-4-5 (1)
move-e xy-4-5 xy-5-5 (1)
push-e xy-5-5 xy-6-5 xy-7-5 (1)
push-e xy-6-5 xy-7-5 xy-8-5 (1)
push-e xy-7-5 xy-8-5 xy-9-5 (1)
push-e xy-8-5 xy-9-5 xy-10-5 (1)
push-e xy-9-5 xy-10-5 xy-11-5 (1)
push-e xy-10-5 xy-11-5 xy-12-5 (1)
push-e xy-11-5 xy-12-5 xy-13-5 (1)
push-e xy-12-5 xy-13-5 xy-14-5 (1)
push-e xy-13-5 xy-14-5 xy-15-5 (1)
push-e xy-14-5 xy-15-5 xy-16-5 (1)
push-e xy-15-5 xy-16-5 xy-17-5 (1)
push-e xy-16-5 xy-17-5 xy-18-5 (1)
move-w xy-17-5 xy-16-5 (1)
move-w xy-16-5 xy-15-5 (1)
move-w xy-15-5 xy-14-5 (1)
move-w xy-14-5 xy-13-5 (1)
move-w xy-13-5 xy-12-5 (1)
move-w xy-12-5 xy-11-5 (1)
move-w xy-11-5 xy-10-5 (1)
move-w xy-10-5 xy-9-5 (1)
move-n xy-9-5 xy-9-6 (1)
move-n xy-9-6 xy-9-7 (1)
move-n xy-9-7 xy-9-8 (1)
move-w xy-9-8 xy-8-8 (1)
move-n xy-8-8 xy-8-9 (1)
move-w xy-8-9 xy-7-9 (1)
move-n xy-7-9 xy-7-10 (1)
move-n xy-7-10 xy-7-11 (1)
move-e xy-7-11 xy-8-11 (1)
push-s xy-8-11 xy-8-10 xy-8-9 (1)
move-w xy-8-10 xy-7-10 (1)
move-n xy-7-10 xy-7-11 (1)
move-w xy-7-11 xy-6-11 (1)
push-s xy-6-11 xy-6-10 xy-6-9 (1)
push-s xy-6-10 xy-6-9 xy-6-8 (1)
push-s xy-6-9 xy-6-8 xy-6-7 (1)
push-s xy-6-8 xy-6-7 xy-6-6 (1)
push-s xy-6-7 xy-6-6 xy-6-5 (1)
move-n xy-6-6 xy-6-7 (1)
move-n xy-6-7 xy-6-8 (1)
move-w xy-6-8 xy-5-8 (1)
move-w xy-5-8 xy-4-8 (1)
move-s xy-4-8 xy-4-7 (1)
move-s xy-4-7 xy-4-6 (1)
move-s xy-4-6 xy-4-5 (1)
move-e xy-4-5 xy-5-5 (1)
push-e xy-5-5 xy-6-5 xy-7-5 (1)
push-e xy-6-5 xy-7-5 xy-8-5 (1)
push-e xy-7-5 xy-8-5 xy-9-5 (1)
push-e xy-8-5 xy-9-5 xy-10-5 (1)
push-e xy-9-5 xy-10-5 xy-11-5 (1)
push-e xy-10-5 xy-11-5 xy-12-5 (1)
push-e xy-11-5 xy-12-5 xy-13-5 (1)
push-e xy-12-5 xy-13-5 xy-14-5 (1)
push-e xy-13-5 xy-14-5 xy-15-5 (1)
push-e xy-14-5 xy-15-5 xy-16-5 (1)
push-e xy-15-5 xy-16-5 xy-17-5 (1)
move-w xy-16-5 xy-15-5 (1)
move-w xy-15-5 xy-14-5 (1)
move-w xy-14-5 xy-13-5 (1)
move-w xy-13-5 xy-12-5 (1)
move-w xy-12-5 xy-11-5 (1)
move-w xy-11-5 xy-10-5 (1)
move-w xy-10-5 xy-9-5 (1)
move-n xy-9-5 xy-9-6 (1)
move-n xy-9-6 xy-9-7 (1)
move-n xy-9-7 xy-9-8 (1)
move-w xy-9-8 xy-8-8 (1)
move-w xy-8-8 xy-7-8 (1)
move-n xy-7-8 xy-7-9 (1)
move-n xy-7-9 xy-7-10 (1)
move-e xy-7-10 xy-8-10 (1)
push-s xy-8-10 xy-8-9 xy-8-8 (1)
move-w xy-8-9 xy-7-9 (1)
move-w xy-7-9 xy-6-9 (1)
move-s xy-6-9 xy-6-8 (1)
move-s xy-6-8 xy-6-7 (1)
move-s xy-6-7 xy-6-6 (1)
move-s xy-6-6 xy-6-5 (1)
move-e xy-6-5 xy-7-5 (1)
move-e xy-7-5 xy-8-5 (1)
move-e xy-8-5 xy-9-5 (1)
move-n xy-9-5 xy-9-6 (1)
move-n xy-9-6 xy-9-7 (1)
move-n xy-9-7 xy-9-8 (1)
push-w xy-9-8 xy-8-8 xy-7-8 (1)
push-w xy-8-8 xy-7-8 xy-6-8 (1)
move-n xy-7-8 xy-7-9 (1)
move-w xy-7-9 xy-6-9 (1)
push-s xy-6-9 xy-6-8 xy-6-7 (1)
push-s xy-6-8 xy-6-7 xy-6-6 (1)
push-s xy-6-7 xy-6-6 xy-6-5 (1)
push-s xy-6-6 xy-6-5 xy-6-4 (1)
move-e xy-6-5 xy-7-5 (1)
move-e xy-7-5 xy-8-5 (1)
move-e xy-8-5 xy-9-5 (1)
move-e xy-9-5 xy-10-5 (1)
move-s xy-10-5 xy-10-4 (1)
move-s xy-10-4 xy-10-3 (1)
move-w xy-10-3 xy-9-3 (1)
move-w xy-9-3 xy-8-3 (1)
move-w xy-8-3 xy-7-3 (1)
move-w xy-7-3 xy-6-3 (1)
push-n xy-6-3 xy-6-4 xy-6-5 (1)
move-s xy-6-4 xy-6-3 (1)
move-e xy-6-3 xy-7-3 (1)
move-e xy-7-3 xy-8-3 (1)
move-e xy-8-3 xy-9-3 (1)
move-e xy-9-3 xy-10-3 (1)
move-n xy-10-3 xy-10-4 (1)
move-n xy-10-4 xy-10-5 (1)
move-w xy-10-5 xy-9-5 (1)
move-w xy-9-5 xy-8-5 (1)
move-w xy-8-5 xy-7-5 (1)
push-w xy-7-5 xy-6-5 xy-5-5 (1)
push-w xy-6-5 xy-5-5 xy-4-5 (1)
push-w xy-5-5 xy-4-5 xy-3-5 (1)
move-n xy-4-5 xy-4-6 (1)
move-w xy-4-6 xy-3-6 (1)
move-w xy-3-6 xy-2-6 (1)
move-s xy-2-6 xy-2-5 (1)
push-e xy-2-5 xy-3-5 xy-4-5 (1)
push-e xy-3-5 xy-4-5 xy-5-5 (1)
push-e xy-4-5 xy-5-5 xy-6-5 (1)
push-e xy-5-5 xy-6-5 xy-7-5 (1)
push-e xy-6-5 xy-7-5 xy-8-5 (1)
push-e xy-7-5 xy-8-5 xy-9-5 (1)
push-e xy-8-5 xy-9-5 xy-10-5 (1)
push-e xy-9-5 xy-10-5 xy-11-5 (1)
push-e xy-10-5 xy-11-5 xy-12-5 (1)
push-e xy-11-5 xy-12-5 xy-13-5 (1)
push-e xy-12-5 xy-13-5 xy-14-5 (1)
push-e xy-13-5 xy-14-5 xy-15-5 (1)
push-e xy-14-5 xy-15-5 xy-16-5 (1)
move-n xy-15-5 xy-15-6 (1)
move-e xy-15-6 xy-16-6 (1)
push-s xy-16-6 xy-16-5 xy-16-4 (1)
move-w xy-16-5 xy-15-5 (1)
move-s xy-15-5 xy-15-4 (1)
push-e xy-15-4 xy-16-4 xy-17-4 (1)
[t=0.972629s, 4375304 KB] Plan length: 286 step(s).
[t=0.97264s, 4375304 KB] Plan cost: 286
[t=0.972646s, 4375304 KB] Expanded 34099 state(s).
[t=0.97265s, 4375304 KB] Reopened 0 state(s).
[t=0.972654s, 4375304 KB] Evaluated 34623 state(s).
[t=0.972658s, 4375304 KB] Evaluations: 68723
[t=0.972661s, 4375304 KB] Generated 87467 state(s).
[t=0.972665s, 4375304 KB] Dead ends: 523 state(s).
[t=0.972669s, 4375304 KB] Number of registered states: 34623
[t=0.972672s, 4375304 KB] Int hash set load factor: 34623/65536 = 0.528305
[t=0.972683s, 4375304 KB] Int hash set resizes: 16
[t=0.972687s, 4375304 KB] Best solution cost so far: 286
[t=0.972691s, 4375304 KB] Solution found - keep searching
[t=0.972959s, 4375304 KB] Building successor generator...done!
[t=0.972972s, 4375304 KB] peak memory difference for successor generator creation: 0 KB
[t=0.972976s, 4375304 KB] time for successor generation creation: 8.7e-07s
[t=0.972982s, 4375304 KB] Variables: 42
[t=0.972986s, 4375304 KB] FactPairs: 138
[t=0.97299s, 4375304 KB] Bytes per state: 8
[t=0.973006s, 4375304 KB] Starting search: lazy_wastar(list(hff, hlm), preferred = list(hff, hlm), w = 5)
[t=0.973015s, 4375304 KB] Conducting lazy best first search, (real) bound = 286
[t=0.973029s, 4375304 KB] 18 initial landmarks, 6 goal landmarks
[t=0.973065s, 4375304 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 32
[t=0.973071s, 4375304 KB] New best heuristic value for ff: 35
[t=0.973074s, 4375304 KB] g=0, 1 evaluated, 0 expanded
[t=0.973086s, 4375304 KB] Initial heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 32
[t=0.97309s, 4375304 KB] Initial heuristic value for ff: 35
[t=0.973122s, 4375304 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 31
[t=0.973127s, 4375304 KB] g=1, 2 evaluated, 1 expanded
[t=0.973166s, 4375304 KB] New best heuristic value for ff: 32
[t=0.973171s, 4375304 KB] g=2, 3 evaluated, 2 expanded
[t=1.01077s, 4375304 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 29
[t=1.01079s, 4375304 KB] New best heuristic value for ff: 30
[t=1.01079s, 4375304 KB] g=19, 1313 evaluated, 1294 expanded, 33 reopened
[t=1.01083s, 4375304 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 27
[t=1.01084s, 4375304 KB] New best heuristic value for ff: 28
[t=1.01084s, 4375304 KB] g=20, 1314 evaluated, 1295 expanded, 33 reopened
[t=1.01087s, 4375304 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 25
[t=1.01088s, 4375304 KB] New best heuristic value for ff: 26
[t=1.01088s, 4375304 KB] g=21, 1315 evaluated, 1296 expanded, 33 reopened
[t=1.01092s, 4375304 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 23
[t=1.01092s, 4375304 KB] New best heuristic value for ff: 25
[t=1.01093s, 4375304 KB] g=22, 1316 evaluated, 1297 expanded, 33 reopened
[t=1.01096s, 4375304 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 21
[t=1.01097s, 4375304 KB] New best heuristic value for ff: 22
[t=1.01097s, 4375304 KB] g=23, 1317 evaluated, 1298 expanded, 33 reopened
[t=1.01101s, 4375304 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 19
[t=1.01101s, 4375304 KB] New best heuristic value for ff: 20
[t=1.01102s, 4375304 KB] g=24, 1318 evaluated, 1299 expanded, 33 reopened
[t=1.01105s, 4375304 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 17
[t=1.01106s, 4375304 KB] New best heuristic value for ff: 19
[t=1.01106s, 4375304 KB] g=25, 1319 evaluated, 1300 expanded, 33 reopened
[t=1.0111s, 4375304 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 15
[t=1.0111s, 4375304 KB] New best heuristic value for ff: 16
[t=1.01111s, 4375304 KB] g=26, 1320 evaluated, 1301 expanded, 33 reopened
[t=1.01114s, 4375304 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 13
[t=1.01115s, 4375304 KB] New best heuristic value for ff: 13
[t=1.01115s, 4375304 KB] g=27, 1321 evaluated, 1302 expanded, 33 reopened
[t=1.01119s, 4375304 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 11
[t=1.0112s, 4375304 KB] g=28, 1322 evaluated, 1303 expanded, 33 reopened
[t=1.01128s, 4375304 KB] New best heuristic value for ff: 12
[t=1.01129s, 4375304 KB] g=30, 1324 evaluated, 1305 expanded, 33 reopened
[t=1.01135s, 4375304 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 9
[t=1.01135s, 4375304 KB] New best heuristic value for ff: 9
[t=1.01136s, 4375304 KB] g=29, 1326 evaluated, 1307 expanded, 33 reopened
[t=1.01166s, 4375304 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 8
[t=1.01167s, 4375304 KB] g=31, 1336 evaluated, 1317 expanded, 33 reopened
[t=1.0121s, 4375304 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 7
[t=1.01211s, 4375304 KB] g=35, 1350 evaluated, 1331 expanded, 33 reopened
[t=1.19846s, 4375304 KB] New best heuristic value for ff: 8
[t=1.19848s, 4375304 KB] g=77, 7546 evaluated, 7481 expanded, 445 reopened
[t=1.19859s, 4375304 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 6
[t=1.1986s, 4375304 KB] New best heuristic value for ff: 7
[t=1.19861s, 4375304 KB] g=78, 7547 evaluated, 7482 expanded, 445 reopened
[t=1.21906s, 4375304 KB] New best heuristic value for ff: 6
[t=1.21908s, 4375304 KB] g=75, 8211 evaluated, 8121 expanded, 457 reopened
[t=1.52301s, 4375304 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 5
[t=1.52303s, 4375304 KB] g=70, 18292 evaluated, 18129 expanded, 1290 reopened
[t=1.52337s, 4375304 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 4
[t=1.52337s, 4375304 KB] g=71, 18302 evaluated, 18139 expanded, 1291 reopened
[t=107.137s, 4669196 KB] New best heuristic value for ff: 5
[t=107.137s, 4669196 KB] g=101, 3638819 evaluated, 3623089 expanded, 742430 reopened
[t=107.137s, 4669196 KB] New best heuristic value for ff: 4
[t=107.137s, 4669196 KB] g=102, 3638820 evaluated, 3623090 expanded, 742430 reopened
[t=107.137s, 4669196 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 3
[t=107.137s, 4669196 KB] g=106, 3638825 evaluated, 3623095 expanded, 742430 reopened
