INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/bo198214/workspace/planner/downward/builds/release/bin/translate/translate.py /home/bo198214/workspace/slide_puzzle_gen/sokoban-domain.pddl /home/bo198214/workspace/slide_puzzle_gen/sokoban/sokoban01-problem.pddl --sas-file /home/bo198214/workspace/slide_puzzle_gen/solve-downward/sokoban/sokoban01.sas
Parsing...
Parsing: [0.000s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.010s CPU, 0.002s wall-clock]
Generated 57 rules.
Computing model... [0.030s CPU, 0.045s wall-clock]
2069 relevant atoms
3504 auxiliary atoms
5573 final queue length
7370 total queue pushes
Completing instantiation... [0.030s CPU, 0.036s wall-clock]
Instantiating: [0.090s CPU, 0.087s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
418 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.000s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.030s CPU, 0.043s wall-clock]
1463 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
131 operators removed
0 axioms removed
166 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.019s wall-clock]
Reordering and filtering variables...
335 of 335 variables necessary.
0 of 0 mutex groups necessary.
859 of 859 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.015s wall-clock]
Translator variables: 335
Translator derived variables: 0
Translator facts: 670
Translator goal facts: 6
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 859
Translator axioms: 0
Translator task size: 6371
Translator peak memory: 0 KB
Writing output... [0.020s CPU, 0.013s wall-clock]
Done! [0.180s CPU, 0.189s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /home/bo198214/workspace/slide_puzzle_gen/solve-downward/sokoban/sokoban01.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/bo198214/workspace/planner/downward/builds/release/bin/downward --if-unit-cost --evaluator 'hlm=lmcount(lm_reasonable_orders_hps(lm_rhw()),pref=true)' --evaluator 'hff=ff()' --search 'iterated([lazy_greedy([hff,hlm],preferred=[hff,hlm]),lazy_wastar([hff,hlm],preferred=[hff,hlm],w=5),lazy_wastar([hff,hlm],preferred=[hff,hlm],w=3),lazy_wastar([hff,hlm],preferred=[hff,hlm],w=2),lazy_wastar([hff,hlm],preferred=[hff,hlm],w=1)],repeat_last=true,continue_on_fail=true)' --if-non-unit-cost --evaluator 'hlm1=lmcount(lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=true)' --evaluator 'hff1=ff(transform=adapt_costs(one))' --evaluator 'hlm2=lmcount(lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(plusone),pref=true)' --evaluator 'hff2=ff(transform=adapt_costs(plusone))' --search 'iterated([lazy_greedy([hff1,hlm1],preferred=[hff1,hlm1],cost_type=one,reopen_closed=false),lazy_greedy([hff2,hlm2],preferred=[hff2,hlm2],reopen_closed=false),lazy_wastar([hff2,hlm2],preferred=[hff2,hlm2],w=5),lazy_wastar([hff2,hlm2],preferred=[hff2,hlm2],w=3),lazy_wastar([hff2,hlm2],preferred=[hff2,hlm2],w=2),lazy_wastar([hff2,hlm2],preferred=[hff2,hlm2],w=1)],repeat_last=true,continue_on_fail=true)' --always --internal-plan-file /home/bo198214/workspace/slide_puzzle_gen/solve-downward/sokoban/sokoban01.txt < /home/bo198214/workspace/slide_puzzle_gen/solve-downward/sokoban/sokoban01.sas
[t=0s, 0 KB] reading input...
[t=0.015625s, 0 KB] done reading input!
[t=0.015625s, 0 KB] Initializing landmark count heuristic...
[t=0.015625s, 0 KB] Generating landmark graph...
[t=0.015625s, 0 KB] Building a landmark graph with reasonable orders.
[t=0.015625s, 0 KB] Initializing Exploration...
[t=0.015625s, 0 KB] Generating landmarks using the RPG/SAS+ approach
Removed 0 reasonable or obedient reasonable orders
[t=0.03125s, 0 KB] Landmarks generation time: 0.015625s
[t=0.03125s, 0 KB] Discovered 62 landmarks, of which 4 are disjunctive and 0 are conjunctive.
[t=0.03125s, 0 KB] 310 edges
[t=0.03125s, 0 KB] approx. reasonable orders
[t=0.03125s, 0 KB] approx. obedient reasonable orders
[t=0.03125s, 0 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.03125s, 0 KB] Landmarks generation time: 0.015625s
[t=0.03125s, 0 KB] Discovered 62 landmarks, of which 4 are disjunctive and 0 are conjunctive.
[t=0.03125s, 0 KB] 310 edges
[t=0.03125s, 0 KB] Landmark graph generation time: 0.015625s
[t=0.03125s, 0 KB] Landmark graph contains 62 landmarks, of which 4 are disjunctive and 0 are conjunctive.
[t=0.03125s, 0 KB] Landmark graph contains 310 orderings.
[t=0.03125s, 0 KB] Simplifying 2428 unary operators... done! [2428 unary operators]
[t=0.03125s, 0 KB] time to simplify: 0s
[t=0.03125s, 0 KB] Initializing additive heuristic...
[t=0.03125s, 0 KB] Initializing FF heuristic...
[t=0.03125s, 0 KB] Building successor generator...done!
[t=0.03125s, 0 KB] peak memory difference for successor generator creation: 0 KB
[t=0.03125s, 0 KB] time for successor generation creation: 0s
[t=0.03125s, 0 KB] Variables: 335
[t=0.03125s, 0 KB] FactPairs: 670
[t=0.03125s, 0 KB] Bytes per state: 44
[t=0.03125s, 0 KB] Building successor generator...done!
[t=0.03125s, 0 KB] peak memory difference for successor generator creation: 0 KB
[t=0.03125s, 0 KB] time for successor generation creation: 0s
[t=0.03125s, 0 KB] Variables: 335
[t=0.03125s, 0 KB] FactPairs: 670
[t=0.03125s, 0 KB] Bytes per state: 44
[t=0.03125s, 0 KB] Starting search: lazy_greedy(list(hff, hlm), preferred = list(hff, hlm))
[t=0.03125s, 0 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.03125s, 0 KB] 30 initial landmarks, 6 goal landmarks
[t=0.03125s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 32
[t=0.03125s, 0 KB] New best heuristic value for ff: 33
[t=0.03125s, 0 KB] g=0, 1 evaluated, 0 expanded
[t=0.03125s, 0 KB] Initial heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 32
[t=0.03125s, 0 KB] Initial heuristic value for ff: 33
[t=0.03125s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 31
[t=0.03125s, 0 KB] New best heuristic value for ff: 32
[t=0.03125s, 0 KB] g=1, 2 evaluated, 1 expanded
[t=0.078125s, 0 KB] New best heuristic value for ff: 31
[t=0.078125s, 0 KB] g=24, 1271 evaluated, 1260 expanded
[t=0.078125s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 29
[t=0.078125s, 0 KB] New best heuristic value for ff: 29
[t=0.078125s, 0 KB] g=25, 1272 evaluated, 1261 expanded
[t=0.078125s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 27
[t=0.078125s, 0 KB] New best heuristic value for ff: 27
[t=0.078125s, 0 KB] g=26, 1273 evaluated, 1262 expanded
[t=0.078125s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 25
[t=0.078125s, 0 KB] New best heuristic value for ff: 25
[t=0.078125s, 0 KB] g=27, 1274 evaluated, 1263 expanded
[t=0.09375s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 23
[t=0.09375s, 0 KB] New best heuristic value for ff: 23
[t=0.09375s, 0 KB] g=28, 1275 evaluated, 1264 expanded
[t=0.09375s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 21
[t=0.09375s, 0 KB] New best heuristic value for ff: 21
[t=0.09375s, 0 KB] g=29, 1276 evaluated, 1265 expanded
[t=0.09375s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 19
[t=0.09375s, 0 KB] New best heuristic value for ff: 19
[t=0.09375s, 0 KB] g=30, 1277 evaluated, 1266 expanded
[t=0.09375s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 17
[t=0.09375s, 0 KB] New best heuristic value for ff: 17
[t=0.09375s, 0 KB] g=31, 1278 evaluated, 1267 expanded
[t=0.09375s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 15
[t=0.09375s, 0 KB] New best heuristic value for ff: 15
[t=0.09375s, 0 KB] g=32, 1279 evaluated, 1268 expanded
[t=0.09375s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 13
[t=0.09375s, 0 KB] New best heuristic value for ff: 13
[t=0.09375s, 0 KB] g=33, 1280 evaluated, 1269 expanded
[t=0.09375s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 11
[t=0.09375s, 0 KB] g=34, 1281 evaluated, 1270 expanded
[t=0.09375s, 0 KB] New best heuristic value for ff: 11
[t=0.09375s, 0 KB] g=35, 1282 evaluated, 1271 expanded
[t=0.09375s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 9
[t=0.09375s, 0 KB] New best heuristic value for ff: 9
[t=0.09375s, 0 KB] g=35, 1285 evaluated, 1274 expanded
[t=0.09375s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 8
[t=0.09375s, 0 KB] g=37, 1295 evaluated, 1284 expanded
[t=0.09375s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 7
[t=0.09375s, 0 KB] g=41, 1309 evaluated, 1298 expanded
[t=0.515625s, 0 KB] New best heuristic value for ff: 8
[t=0.515625s, 0 KB] g=193, 9457 evaluated, 9338 expanded
[t=0.515625s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 6
[t=0.515625s, 0 KB] New best heuristic value for ff: 7
[t=0.515625s, 0 KB] g=194, 9461 evaluated, 9341 expanded
[t=1.625s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 5
[t=1.625s, 0 KB] g=82, 30505 evaluated, 30241 expanded
[t=1.625s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 4
[t=1.625s, 0 KB] g=83, 30523 evaluated, 30259 expanded
[t=1.92188s, 0 KB] New best heuristic value for ff: 6
[t=1.92188s, 0 KB] g=132, 36560 evaluated, 36223 expanded
[t=1.92188s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 3
[t=1.92188s, 0 KB] g=133, 36565 evaluated, 36228 expanded
[t=2.0625s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 2
[t=2.0625s, 0 KB] g=177, 39265 evaluated, 38896 expanded
[t=3.09375s, 0 KB] New best heuristic value for ff: 4
[t=3.09375s, 0 KB] g=212, 59804 evaluated, 59182 expanded
[t=3.09375s, 0 KB] New best heuristic value for ff: 3
[t=3.09375s, 0 KB] g=213, 59805 evaluated, 59183 expanded
[t=10.1406s, 0 KB] New best heuristic value for ff: 2
[t=10.1406s, 0 KB] g=206, 196771 evaluated, 195059 expanded
[t=102.375s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 1
[t=102.375s, 0 KB] g=249, 1989103 evaluated, 1977495 expanded
[t=102.484s, 0 KB] New best heuristic value for ff: 1
[t=102.484s, 0 KB] g=353, 1991238 evaluated, 1979614 expanded
[t=102.484s, 0 KB] Solution found!
[t=102.484s, 0 KB] Actual search time: 102.453s
move-n h12 v4 v5 (1)
move-w h12 h11 v5 (1)
move-w h11 h10 v5 (1)
move-w h10 h9 v5 (1)
move-n h9 v5 v6 (1)
move-n h9 v6 v7 (1)
move-n h9 v7 v8 (1)
push-w h9 h8 h7 v8 (1)
push-n h8 v8 v9 v10 (1)
move-w h8 h7 v9 (1)
move-w h7 h6 v9 (1)
push-s h6 v9 v8 v7 (1)
push-s h6 v8 v7 v6 (1)
move-n h6 v7 v8 (1)
move-w h6 h5 v8 (1)
move-w h5 h4 v8 (1)
move-s h4 v8 v7 (1)
move-s h4 v7 v6 (1)
move-s h4 v6 v5 (1)
move-e h4 h5 v5 (1)
push-e h5 h6 h7 v5 (1)
push-e h6 h7 h8 v5 (1)
push-e h7 h8 h9 v5 (1)
push-e h8 h9 h10 v5 (1)
push-e h9 h10 h11 v5 (1)
push-e h10 h11 h12 v5 (1)
push-e h11 h12 h13 v5 (1)
push-e h12 h13 h14 v5 (1)
push-e h13 h14 h15 v5 (1)
move-w h14 h13 v5 (1)
move-w h13 h12 v5 (1)
move-w h12 h11 v5 (1)
move-w h11 h10 v5 (1)
move-w h10 h9 v5 (1)
move-n h9 v5 v6 (1)
move-n h9 v6 v7 (1)
move-n h9 v7 v8 (1)
move-w h9 h8 v8 (1)
move-n h8 v8 v9 (1)
move-w h8 h7 v9 (1)
move-w h7 h6 v9 (1)
move-s h6 v9 v8 (1)
move-s h6 v8 v7 (1)
push-s h6 v7 v6 v5 (1)
push-s h6 v6 v5 v4 (1)
move-e h6 h7 v5 (1)
move-e h7 h8 v5 (1)
move-e h8 h9 v5 (1)
move-n h9 v5 v6 (1)
move-n h9 v6 v7 (1)
move-n h9 v7 v8 (1)
move-w h9 h8 v8 (1)
push-w h8 h7 h6 v8 (1)
move-n h7 v8 v9 (1)
move-w h7 h6 v9 (1)
push-s h6 v9 v8 v7 (1)
push-s h6 v8 v7 v6 (1)
push-s h6 v7 v6 v5 (1)
move-n h6 v6 v7 (1)
move-n h6 v7 v8 (1)
move-w h6 h5 v8 (1)
move-w h5 h4 v8 (1)
move-s h4 v8 v7 (1)
move-s h4 v7 v6 (1)
move-s h4 v6 v5 (1)
move-e h4 h5 v5 (1)
push-e h5 h6 h7 v5 (1)
move-n h6 v5 v6 (1)
move-n h6 v6 v7 (1)
move-n h6 v7 v8 (1)
move-e h6 h7 v8 (1)
move-e h7 h8 v8 (1)
move-e h8 h9 v8 (1)
move-s h9 v8 v7 (1)
move-s h9 v7 v6 (1)
move-s h9 v6 v5 (1)
move-e h9 h10 v5 (1)
move-s h10 v5 v4 (1)
move-s h10 v4 v3 (1)
move-w h10 h9 v3 (1)
move-w h9 h8 v3 (1)
move-w h8 h7 v3 (1)
move-w h7 h6 v3 (1)
push-n h6 v3 v4 v5 (1)
move-s h6 v4 v3 (1)
move-e h6 h7 v3 (1)
move-e h7 h8 v3 (1)
move-e h8 h9 v3 (1)
move-e h9 h10 v3 (1)
move-n h10 v3 v4 (1)
move-n h10 v4 v5 (1)
move-e h10 h11 v5 (1)
move-e h11 h12 v5 (1)
move-e h12 h13 v5 (1)
move-e h13 h14 v5 (1)
push-e h14 h15 h16 v5 (1)
push-e h15 h16 h17 v5 (1)
push-e h16 h17 h18 v5 (1)
move-n h17 v5 v6 (1)
move-e h17 h18 v6 (1)
push-s h18 v6 v5 v4 (1)
move-w h18 h17 v5 (1)
move-n h17 v5 v6 (1)
move-w h17 h16 v6 (1)
move-w h16 h15 v6 (1)
move-s h15 v6 v5 (1)
move-w h15 h14 v5 (1)
move-w h14 h13 v5 (1)
move-w h13 h12 v5 (1)
move-w h12 h11 v5 (1)
move-w h11 h10 v5 (1)
move-s h10 v5 v4 (1)
move-s h10 v4 v3 (1)
move-w h10 h9 v3 (1)
move-w h9 h8 v3 (1)
move-w h8 h7 v3 (1)
move-w h7 h6 v3 (1)
move-n h6 v3 v4 (1)
push-n h6 v4 v5 v6 (1)
push-e h6 h7 h8 v5 (1)
push-e h7 h8 h9 v5 (1)
push-e h8 h9 h10 v5 (1)
push-e h9 h10 h11 v5 (1)
push-e h10 h11 h12 v5 (1)
push-e h11 h12 h13 v5 (1)
push-e h12 h13 h14 v5 (1)
push-e h13 h14 h15 v5 (1)
push-e h14 h15 h16 v5 (1)
push-e h15 h16 h17 v5 (1)
move-s h16 v5 v4 (1)
move-e h16 h17 v4 (1)
push-n h17 v4 v5 v6 (1)
move-w h17 h16 v5 (1)
move-n h16 v5 v6 (1)
push-e h16 h17 h18 v6 (1)
move-w h17 h16 v6 (1)
move-w h16 h15 v6 (1)
move-s h15 v6 v5 (1)
move-w h15 h14 v5 (1)
move-w h14 h13 v5 (1)
move-w h13 h12 v5 (1)
move-w h12 h11 v5 (1)
move-w h11 h10 v5 (1)
move-w h10 h9 v5 (1)
move-w h9 h8 v5 (1)
move-w h8 h7 v5 (1)
move-w h7 h6 v5 (1)
push-n h6 v5 v6 v7 (1)
move-s h6 v6 v5 (1)
move-w h6 h5 v5 (1)
move-w h5 h4 v5 (1)
move-n h4 v5 v6 (1)
move-w h4 h3 v6 (1)
move-w h3 h2 v6 (1)
move-s h2 v6 v5 (1)
push-e h2 h3 h4 v5 (1)
push-e h3 h4 h5 v5 (1)
push-e h4 h5 h6 v5 (1)
push-e h5 h6 h7 v5 (1)
push-e h6 h7 h8 v5 (1)
push-e h7 h8 h9 v5 (1)
push-e h8 h9 h10 v5 (1)
push-e h9 h10 h11 v5 (1)
push-e h10 h11 h12 v5 (1)
push-e h11 h12 h13 v5 (1)
push-e h12 h13 h14 v5 (1)
push-e h13 h14 h15 v5 (1)
push-e h14 h15 h16 v5 (1)
push-e h15 h16 h17 v5 (1)
move-n h16 v5 v6 (1)
move-e h16 h17 v6 (1)
push-s h17 v6 v5 v4 (1)
move-w h17 h16 v5 (1)
move-w h16 h15 v5 (1)
move-w h15 h14 v5 (1)
move-w h14 h13 v5 (1)
move-w h13 h12 v5 (1)
move-w h12 h11 v5 (1)
move-w h11 h10 v5 (1)
move-w h10 h9 v5 (1)
move-n h9 v5 v6 (1)
move-n h9 v6 v7 (1)
move-n h9 v7 v8 (1)
move-w h9 h8 v8 (1)
move-w h8 h7 v8 (1)
move-w h7 h6 v8 (1)
push-s h6 v8 v7 v6 (1)
push-s h6 v7 v6 v5 (1)
move-n h6 v6 v7 (1)
move-n h6 v7 v8 (1)
move-w h6 h5 v8 (1)
move-w h5 h4 v8 (1)
move-s h4 v8 v7 (1)
move-s h4 v7 v6 (1)
move-s h4 v6 v5 (1)
move-e h4 h5 v5 (1)
push-e h5 h6 h7 v5 (1)
push-e h6 h7 h8 v5 (1)
push-e h7 h8 h9 v5 (1)
push-e h8 h9 h10 v5 (1)
push-e h9 h10 h11 v5 (1)
push-e h10 h11 h12 v5 (1)
push-e h11 h12 h13 v5 (1)
push-e h12 h13 h14 v5 (1)
push-e h13 h14 h15 v5 (1)
push-e h14 h15 h16 v5 (1)
push-e h15 h16 h17 v5 (1)
push-e h16 h17 h18 v5 (1)
move-w h17 h16 v5 (1)
move-w h16 h15 v5 (1)
move-w h15 h14 v5 (1)
move-w h14 h13 v5 (1)
move-w h13 h12 v5 (1)
move-w h12 h11 v5 (1)
move-w h11 h10 v5 (1)
move-w h10 h9 v5 (1)
move-n h9 v5 v6 (1)
move-n h9 v6 v7 (1)
move-n h9 v7 v8 (1)
move-w h9 h8 v8 (1)
move-n h8 v8 v9 (1)
move-w h8 h7 v9 (1)
move-n h7 v9 v10 (1)
move-n h7 v10 v11 (1)
move-w h7 h6 v11 (1)
push-s h6 v11 v10 v9 (1)
push-s h6 v10 v9 v8 (1)
push-s h6 v9 v8 v7 (1)
push-s h6 v8 v7 v6 (1)
push-s h6 v7 v6 v5 (1)
move-n h6 v6 v7 (1)
move-n h6 v7 v8 (1)
move-w h6 h5 v8 (1)
move-w h5 h4 v8 (1)
move-s h4 v8 v7 (1)
move-s h4 v7 v6 (1)
move-s h4 v6 v5 (1)
move-e h4 h5 v5 (1)
push-e h5 h6 h7 v5 (1)
push-e h6 h7 h8 v5 (1)
push-e h7 h8 h9 v5 (1)
push-e h8 h9 h10 v5 (1)
push-e h9 h10 h11 v5 (1)
push-e h10 h11 h12 v5 (1)
push-e h11 h12 h13 v5 (1)
push-e h12 h13 h14 v5 (1)
push-e h13 h14 h15 v5 (1)
push-e h14 h15 h16 v5 (1)
push-e h15 h16 h17 v5 (1)
move-w h16 h15 v5 (1)
move-w h15 h14 v5 (1)
move-w h14 h13 v5 (1)
move-w h13 h12 v5 (1)
move-w h12 h11 v5 (1)
move-w h11 h10 v5 (1)
move-w h10 h9 v5 (1)
move-n h9 v5 v6 (1)
move-n h9 v6 v7 (1)
move-n h9 v7 v8 (1)
move-w h9 h8 v8 (1)
move-n h8 v8 v9 (1)
move-w h8 h7 v9 (1)
move-w h7 h6 v9 (1)
move-n h6 v9 v10 (1)
move-n h6 v10 v11 (1)
move-e h6 h7 v11 (1)
move-e h7 h8 v11 (1)
push-s h8 v11 v10 v9 (1)
push-s h8 v10 v9 v8 (1)
move-w h8 h7 v9 (1)
move-w h7 h6 v9 (1)
move-s h6 v9 v8 (1)
move-s h6 v8 v7 (1)
move-s h6 v7 v6 (1)
move-s h6 v6 v5 (1)
move-e h6 h7 v5 (1)
move-e h7 h8 v5 (1)
move-e h8 h9 v5 (1)
move-n h9 v5 v6 (1)
move-n h9 v6 v7 (1)
move-n h9 v7 v8 (1)
push-w h9 h8 h7 v8 (1)
push-w h8 h7 h6 v8 (1)
move-e h7 h8 v8 (1)
move-e h8 h9 v8 (1)
move-s h9 v8 v7 (1)
move-s h9 v7 v6 (1)
move-s h9 v6 v5 (1)
move-w h9 h8 v5 (1)
move-w h8 h7 v5 (1)
move-w h7 h6 v5 (1)
move-n h6 v5 v6 (1)
move-n h6 v6 v7 (1)
push-n h6 v7 v8 v9 (1)
push-n h6 v8 v9 v10 (1)
move-e h6 h7 v9 (1)
move-e h7 h8 v9 (1)
move-n h8 v9 v10 (1)
move-n h8 v10 v11 (1)
move-w h8 h7 v11 (1)
move-w h7 h6 v11 (1)
push-s h6 v11 v10 v9 (1)
push-s h6 v10 v9 v8 (1)
push-s h6 v9 v8 v7 (1)
push-s h6 v8 v7 v6 (1)
push-s h6 v7 v6 v5 (1)
push-s h6 v6 v5 v4 (1)
move-e h6 h7 v5 (1)
move-e h7 h8 v5 (1)
move-e h8 h9 v5 (1)
move-e h9 h10 v5 (1)
move-s h10 v5 v4 (1)
move-s h10 v4 v3 (1)
move-w h10 h9 v3 (1)
move-w h9 h8 v3 (1)
move-w h8 h7 v3 (1)
move-w h7 h6 v3 (1)
push-n h6 v3 v4 v5 (1)
move-s h6 v4 v3 (1)
move-e h6 h7 v3 (1)
move-e h7 h8 v3 (1)
move-e h8 h9 v3 (1)
move-e h9 h10 v3 (1)
move-n h10 v3 v4 (1)
move-n h10 v4 v5 (1)
move-w h10 h9 v5 (1)
move-w h9 h8 v5 (1)
move-w h8 h7 v5 (1)
push-w h7 h6 h5 v5 (1)
push-w h6 h5 h4 v5 (1)
push-w h5 h4 h3 v5 (1)
move-n h4 v5 v6 (1)
move-w h4 h3 v6 (1)
move-w h3 h2 v6 (1)
move-s h2 v6 v5 (1)
push-e h2 h3 h4 v5 (1)
push-e h3 h4 h5 v5 (1)
push-e h4 h5 h6 v5 (1)
push-e h5 h6 h7 v5 (1)
push-e h6 h7 h8 v5 (1)
push-e h7 h8 h9 v5 (1)
push-e h8 h9 h10 v5 (1)
push-e h9 h10 h11 v5 (1)
push-e h10 h11 h12 v5 (1)
push-e h11 h12 h13 v5 (1)
push-e h12 h13 h14 v5 (1)
push-e h13 h14 h15 v5 (1)
push-e h14 h15 h16 v5 (1)
move-s h15 v5 v4 (1)
move-e h15 h16 v4 (1)
push-n h16 v4 v5 v6 (1)
move-w h16 h15 v5 (1)
move-n h15 v5 v6 (1)
push-e h15 h16 h17 v6 (1)
[t=102.484s, 0 KB] Plan length: 354 step(s).
[t=102.484s, 0 KB] Plan cost: 354
[t=102.484s, 0 KB] Expanded 1979615 state(s).
[t=102.484s, 0 KB] Reopened 0 state(s).
[t=102.484s, 0 KB] Evaluated 1991239 state(s).
[t=102.484s, 0 KB] Evaluations: 3970855
[t=102.484s, 0 KB] Generated 4940389 state(s).
[t=102.484s, 0 KB] Dead ends: 11623 state(s).
[t=102.484s, 0 KB] Number of registered states: 1991239
[t=102.484s, 0 KB] Int hash set load factor: 1991239/4194304 = 0.474748
[t=102.484s, 0 KB] Int hash set resizes: 22
[t=102.484s, 0 KB] Best solution cost so far: 354
[t=102.484s, 0 KB] Solution found - keep searching
[t=102.5s, 0 KB] Building successor generator...done!
[t=102.5s, 0 KB] peak memory difference for successor generator creation: 0 KB
[t=102.5s, 0 KB] time for successor generation creation: 0s
[t=102.5s, 0 KB] Variables: 335
[t=102.5s, 0 KB] FactPairs: 670
[t=102.5s, 0 KB] Bytes per state: 44
[t=102.5s, 0 KB] Starting search: lazy_wastar(list(hff, hlm), preferred = list(hff, hlm), w = 5)
[t=102.5s, 0 KB] Conducting lazy best first search, (real) bound = 354
[t=102.5s, 0 KB] 30 initial landmarks, 6 goal landmarks
[t=102.5s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 32
[t=102.5s, 0 KB] New best heuristic value for ff: 33
[t=102.5s, 0 KB] g=0, 1 evaluated, 0 expanded
[t=102.5s, 0 KB] Initial heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 32
[t=102.5s, 0 KB] Initial heuristic value for ff: 33
[t=102.5s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 31
[t=102.5s, 0 KB] New best heuristic value for ff: 32
[t=102.5s, 0 KB] g=1, 2 evaluated, 1 expanded
[t=102.547s, 0 KB] New best heuristic value for ff: 31
[t=102.547s, 0 KB] g=20, 862 evaluated, 850 expanded, 36 reopened
[t=102.547s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 29
[t=102.547s, 0 KB] New best heuristic value for ff: 29
[t=102.547s, 0 KB] g=21, 864 evaluated, 852 expanded, 36 reopened
[t=102.547s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 27
[t=102.547s, 0 KB] New best heuristic value for ff: 27
[t=102.547s, 0 KB] g=22, 865 evaluated, 853 expanded, 36 reopened
[t=102.547s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 25
[t=102.547s, 0 KB] New best heuristic value for ff: 25
[t=102.547s, 0 KB] g=23, 866 evaluated, 854 expanded, 36 reopened
[t=102.547s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 23
[t=102.547s, 0 KB] New best heuristic value for ff: 23
[t=102.547s, 0 KB] g=24, 867 evaluated, 855 expanded, 36 reopened
[t=102.547s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 21
[t=102.547s, 0 KB] New best heuristic value for ff: 21
[t=102.547s, 0 KB] g=25, 868 evaluated, 856 expanded, 36 reopened
[t=102.547s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 19
[t=102.547s, 0 KB] New best heuristic value for ff: 19
[t=102.547s, 0 KB] g=26, 869 evaluated, 857 expanded, 36 reopened
[t=102.547s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 17
[t=102.547s, 0 KB] New best heuristic value for ff: 17
[t=102.547s, 0 KB] g=27, 870 evaluated, 858 expanded, 36 reopened
[t=102.547s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 15
[t=102.547s, 0 KB] New best heuristic value for ff: 15
[t=102.547s, 0 KB] g=28, 871 evaluated, 859 expanded, 36 reopened
[t=102.547s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 13
[t=102.547s, 0 KB] New best heuristic value for ff: 13
[t=102.547s, 0 KB] g=29, 872 evaluated, 860 expanded, 36 reopened
[t=102.547s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 11
[t=102.547s, 0 KB] g=30, 873 evaluated, 861 expanded, 36 reopened
[t=102.547s, 0 KB] New best heuristic value for ff: 11
[t=102.547s, 0 KB] g=31, 874 evaluated, 862 expanded, 36 reopened
[t=102.547s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 9
[t=102.547s, 0 KB] New best heuristic value for ff: 9
[t=102.547s, 0 KB] g=31, 877 evaluated, 865 expanded, 36 reopened
[t=102.547s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 8
[t=102.547s, 0 KB] g=33, 887 evaluated, 875 expanded, 36 reopened
[t=102.547s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 7
[t=102.547s, 0 KB] g=37, 901 evaluated, 889 expanded, 36 reopened
[t=103.594s, 0 KB] New best heuristic value for ff: 8
[t=103.594s, 0 KB] g=67, 21079 evaluated, 20964 expanded, 2053 reopened
[t=103.594s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 6
[t=103.594s, 0 KB] New best heuristic value for ff: 7
[t=103.594s, 0 KB] g=68, 21083 evaluated, 20968 expanded, 2053 reopened
[t=103.641s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 5
[t=103.641s, 0 KB] g=72, 22137 evaluated, 22014 expanded, 2097 reopened
[t=103.641s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 4
[t=103.641s, 0 KB] g=73, 22144 evaluated, 22021 expanded, 2097 reopened
[t=104.281s, 0 KB] New best heuristic value for ff: 6
[t=104.281s, 0 KB] g=65, 34903 evaluated, 34730 expanded, 4025 reopened
[t=299.922s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 3
[t=299.922s, 0 KB] g=113, 4042394 evaluated, 4026761 expanded, 1026975 reopened
[t=369.578s, 0 KB] New best heuristic value for ff: 5
[t=369.578s, 0 KB] g=103, 5459263 evaluated, 5439109 expanded, 1444960 reopened
[t=369.578s, 0 KB] New best heuristic value for ff: 4
[t=369.578s, 0 KB] g=104, 5459264 evaluated, 5439110 expanded, 1444960 reopened
[t=2104.03s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), pref = true): 2
[t=2104.03s, 0 KB] g=191, 48085080 evaluated, 47957006 expanded, 24991305 reopened
[t=2108.11s, 0 KB] New best heuristic value for ff: 3
[t=2108.11s, 0 KB] g=187, 48176885 evaluated, 48048213 expanded, 25039277 reopened
[t=2108.11s, 0 KB] New best heuristic value for ff: 2
[t=2108.11s, 0 KB] g=188, 48176886 evaluated, 48048214 expanded, 25039277 reopened
Peak memory: 0 KB
caught signal 15 -- exiting
