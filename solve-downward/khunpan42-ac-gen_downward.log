INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/bo198214/workspace/planner/downward/builds/release/bin/translate/translate.py /home/bo198214/workspace/slide_puzzle_gen/khunpan42-ac-gen-domain.pddl /home/bo198214/workspace/slide_puzzle_gen/khunpan42-ac-gen-problem.pddl --sas-file /home/bo198214/workspace/slide_puzzle_gen/khunpan42-ac-gen.sas
Parsing...
Parsing: [0.080s CPU, 0.106s wall-clock]
Normalizing task... [0.010s CPU, 0.019s wall-clock]
Instantiating...
Generating Datalog program... [0.020s CPU, 0.018s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.310s CPU, 0.308s wall-clock]
Preparing model... [0.160s CPU, 0.150s wall-clock]
Generated 7561 rules.
Computing model... [3.550s CPU, 3.549s wall-clock]
15589 relevant atoms
290140 auxiliary atoms
305729 final queue length
355559 total queue pushes
Completing instantiation... [1.550s CPU, 1.548s wall-clock]
Instantiating: [5.690s CPU, 5.684s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.740s CPU, 0.741s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.750s CPU, 0.746s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.060s CPU, 0.062s wall-clock]
Translating task: [0.720s CPU, 0.724s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
21 propositions removed
Detecting unreachable propositions: [0.340s CPU, 0.334s wall-clock]
Reordering and filtering variables...
21 of 21 variables necessary.
0 of 21 mutex groups necessary.
10200 of 10200 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.080s CPU, 0.086s wall-clock]
Translator variables: 21
Translator derived variables: 0
Translator facts: 231
Translator goal facts: 4
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 10200
Translator axioms: 0
Translator task size: 86986
Translator peak memory: 0 KB
Writing output... [0.130s CPU, 0.124s wall-clock]
Done! [7.830s CPU, 7.863s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /home/bo198214/workspace/slide_puzzle_gen/khunpan42-ac-gen.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/bo198214/workspace/planner/downward/builds/release/bin/downward --if-unit-cost --evaluator 'hlm=lmcount(lm_reasonable_orders_hps(lm_rhw()),pref=true)' --evaluator 'hff=ff()' --search 'iterated([lazy_greedy([hff,hlm],preferred=[hff,hlm]),lazy_wastar([hff,hlm],preferred=[hff,hlm],w=5),lazy_wastar([hff,hlm],preferred=[hff,hlm],w=3),lazy_wastar([hff,hlm],preferred=[hff,hlm],w=2),lazy_wastar([hff,hlm],preferred=[hff,hlm],w=1)],repeat_last=true,continue_on_fail=true)' --if-non-unit-cost --evaluator 'hlm1=lmcount(lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=true)' --evaluator 'hff1=ff(transform=adapt_costs(one))' --evaluator 'hlm2=lmcount(lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(plusone),pref=true)' --evaluator 'hff2=ff(transform=adapt_costs(plusone))' --search 'iterated([lazy_greedy([hff1,hlm1],preferred=[hff1,hlm1],cost_type=one,reopen_closed=false),lazy_greedy([hff2,hlm2],preferred=[hff2,hlm2],reopen_closed=false),lazy_wastar([hff2,hlm2],preferred=[hff2,hlm2],w=5),lazy_wastar([hff2,hlm2],preferred=[hff2,hlm2],w=3),lazy_wastar([hff2,hlm2],preferred=[hff2,hlm2],w=2),lazy_wastar([hff2,hlm2],preferred=[hff2,hlm2],w=1)],repeat_last=true,continue_on_fail=true)' --always --internal-plan-file /home/bo198214/workspace/slide_puzzle_gen/khunpan42-ac-gen_downward.txt < /home/bo198214/workspace/slide_puzzle_gen/khunpan42-ac-gen.sas
[t=0s, 0 KB] reading input...
[t=0.109375s, 0 KB] done reading input!
[t=0.109375s, 0 KB] Initializing landmark count heuristic...
[t=0.109375s, 0 KB] Generating landmark graph...
[t=0.109375s, 0 KB] Building a landmark graph with reasonable orders.
[t=0.109375s, 0 KB] Initializing Exploration...
[t=0.140625s, 0 KB] Generating landmarks using the RPG/SAS+ approach
Removed 0 reasonable or obedient reasonable orders
[t=0.1875s, 0 KB] Landmarks generation time: 0.078125s
[t=0.1875s, 0 KB] Discovered 12 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.1875s, 0 KB] 14 edges
[t=0.1875s, 0 KB] approx. reasonable orders
[t=0.1875s, 0 KB] approx. obedient reasonable orders
[t=0.1875s, 0 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.1875s, 0 KB] Landmarks generation time: 0.078125s
[t=0.1875s, 0 KB] Discovered 12 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.1875s, 0 KB] 14 edges
[t=0.1875s, 0 KB] Landmark graph generation time: 0.078125s
[t=0.1875s, 0 KB] Landmark graph contains 12 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.1875s, 0 KB] Landmark graph contains 14 orderings.
[t=0.1875s, 0 KB] Simplifying 36250 unary operators... done! [19708 unary operators]
[t=0.21875s, 0 KB] time to simplify: 0.03125s
[t=0.21875s, 0 KB] Initializing additive heuristic...
[t=0.21875s, 0 KB] Initializing FF heuristic...
[t=0.21875s, 0 KB] Initializing landmark count heuristic...
[t=0.21875s, 0 KB] Generating landmark graph...
[t=0.21875s, 0 KB] Building a landmark graph with reasonable orders.
[t=0.21875s, 0 KB] Initializing Exploration...
[t=0.234375s, 0 KB] Generating landmarks using the RPG/SAS+ approach
Removed 0 reasonable or obedient reasonable orders
[t=0.265625s, 0 KB] Landmarks generation time: 0.046875s
[t=0.265625s, 0 KB] Discovered 12 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.265625s, 0 KB] 14 edges
[t=0.265625s, 0 KB] approx. reasonable orders
[t=0.265625s, 0 KB] approx. obedient reasonable orders
[t=0.265625s, 0 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.265625s, 0 KB] Landmarks generation time: 0.046875s
[t=0.265625s, 0 KB] Discovered 12 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.265625s, 0 KB] 14 edges
[t=0.265625s, 0 KB] Landmark graph generation time: 0.046875s
[t=0.265625s, 0 KB] Landmark graph contains 12 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.265625s, 0 KB] Landmark graph contains 14 orderings.
[t=0.28125s, 0 KB] Simplifying 36250 unary operators... done! [19708 unary operators]
[t=0.3125s, 0 KB] time to simplify: 0.03125s
[t=0.3125s, 0 KB] Initializing additive heuristic...
[t=0.3125s, 0 KB] Initializing FF heuristic...
[t=0.3125s, 0 KB] Building successor generator...done!
[t=0.3125s, 0 KB] peak memory difference for successor generator creation: 0 KB
[t=0.3125s, 0 KB] time for successor generation creation: 0s
[t=0.3125s, 0 KB] Variables: 21
[t=0.3125s, 0 KB] FactPairs: 231
[t=0.3125s, 0 KB] Bytes per state: 12
[t=0.3125s, 0 KB] Building successor generator...done!
[t=0.3125s, 0 KB] peak memory difference for successor generator creation: 0 KB
[t=0.3125s, 0 KB] time for successor generation creation: 0s
[t=0.3125s, 0 KB] Variables: 21
[t=0.3125s, 0 KB] FactPairs: 231
[t=0.3125s, 0 KB] Bytes per state: 12
[t=0.3125s, 0 KB] Starting search: lazy_greedy(list(hff1, hlm1), preferred = list(hff1, hlm1), cost_type = one, reopen_closed = false)
[t=0.3125s, 0 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.3125s, 0 KB] 4 initial landmarks, 4 goal landmarks
[t=0.3125s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = true): 8
[t=0.3125s, 0 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.3125s, 0 KB] g=0, 1 evaluated, 0 expanded
[t=0.3125s, 0 KB] Initial heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = true): 8
[t=0.3125s, 0 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.3125s, 0 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.3125s, 0 KB] g=1, 2 evaluated, 1 expanded
[t=0.328125s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = true): 7
[t=0.328125s, 0 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.328125s, 0 KB] g=2, 6 evaluated, 5 expanded
[t=0.328125s, 0 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.328125s, 0 KB] g=3, 7 evaluated, 6 expanded
[t=0.328125s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = true): 6
[t=0.328125s, 0 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.328125s, 0 KB] g=6, 15 evaluated, 14 expanded
[t=0.328125s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = true): 4
[t=0.328125s, 0 KB] g=15, 37 evaluated, 36 expanded
[t=0.703125s, 0 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.703125s, 0 KB] g=6, 1159 evaluated, 1158 expanded
[t=4.15625s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = true): 3
[t=4.15625s, 0 KB] g=51, 13820 evaluated, 13819 expanded
[t=4.875s, 0 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=4.875s, 0 KB] g=70, 17317 evaluated, 17316 expanded
[t=4.875s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = true): 2
[t=4.875s, 0 KB] g=71, 17319 evaluated, 17318 expanded
[t=5.04688s, 0 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=5.04688s, 0 KB] g=72, 17866 evaluated, 17865 expanded
[t=5.04688s, 0 KB] Solution found!
[t=5.04688s, 0 KB] Actual search time: 4.73438s
move-count1-prev_th1-type3-n tv1 h1 v2 v3 v4 (1)
move-count1-prev_tv1-type1-n to1 h1 v1 v2 (1)
move-count1-prev_to1-type1-w to2 h1 h2 v1 (1)
move-count1-prev_to2-type3-n tv2 h4 v2 v3 v4 (1)
move-count1-prev_tv2-type1-w to3 h2 h3 v1 (1)
move-count1-prev_to3-type2-e th3 h2 h3 h4 v2 (1)
move-count1-prev_th3-type1-w to4 h3 h4 v1 (1)
move-count1-prev_to4-type1-n to3 h2 v1 v2 (1)
move-count1-prev_to3-type1-w to4 h2 h3 v1 (1)
move-count1-prev_to4-type2-s th3 h3 h4 v1 v2 (1)
move-count1-prev_th3-type1-e to3 h2 h3 v2 (1)
move-count1-prev_to3-type1-n to4 h2 v1 v2 (1)
move-count1-prev_to4-type1-e to3 h3 h4 v2 (1)
move-count1-prev_to3-type1-e to4 h2 h3 v2 (1)
move-count1-prev_to4-type1-e to2 h1 h2 v1 (1)
move-count0-prev_to2-type1-n to2 h2 v1 v2 (0)
move-count1-prev_to2-type2-w th3 h2 h3 h4 v1 (1)
move-count1-prev_th3-type1-s to1 h1 v1 v2 (1)
move-count1-prev_to1-type2-e th3 h2 h3 h4 v1 (1)
move-count1-prev_th3-type1-e to1 h1 h2 v1 (1)
move-count1-prev_to1-type3-s tv1 h1 v2 v3 v4 (1)
move-count0-prev_tv1-type3-s tv1 h1 v1 v2 v3 (0)
move-count1-prev_tv1-type4-w tsq h1 h2 h3 v3 v4 (1)
move-count1-prev_tsq-type1-n to4 h3 v2 v3 (1)
move-count1-prev_to4-type1-e to2 h2 h3 v2 (1)
move-count1-prev_to2-type1-n to4 h3 v3 v4 (1)
move-count1-prev_to4-type1-n to1 h2 v1 v2 (1)
move-count1-prev_to1-type2-w th3 h2 h3 h4 v1 (1)
move-count1-prev_th3-type1-s to3 h4 v1 v2 (1)
move-count1-prev_to3-type1-n to2 h3 v2 v3 (1)
move-count1-prev_to2-type3-s tv2 h4 v2 v3 v4 (1)
move-count1-prev_tv2-type1-e to4 h3 h4 v4 (1)
move-count1-prev_to4-type1-s to2 h3 v2 v3 (1)
move-count1-prev_to2-type4-e tsq h1 h2 h3 v3 v4 (1)
move-count1-prev_tsq-type3-n tv1 h1 v1 v2 v3 (1)
move-count0-prev_tv1-type3-n tv1 h1 v2 v3 v4 (0)
move-count1-prev_tv1-type2-w th3 h1 h2 h3 v1 (1)
move-count1-prev_th3-type1-w to1 h1 h2 v2 (1)
move-count1-prev_to1-type1-s to2 h3 v1 v2 (1)
move-count1-prev_to2-type4-s tsq h2 h3 v2 v3 v4 (1)
move-count1-prev_tsq-type1-w to4 h3 h4 v4 (1)
move-count0-prev_to4-type1-w to4 h2 h3 v4 (0)
move-count1-prev_to4-type2-s th2 h3 h4 v4 v5 (1)
move-count1-prev_th2-type2-e th1 h1 h2 h3 v5 (1)
move-count0-prev_th1-type2-e th1 h2 h3 h4 v5 (0)
move-count1-prev_th1-type1-n to4 h2 v4 v5 (1)
move-count1-prev_to4-type2-w th2 h2 h3 h4 v4 (1)
move-count1-prev_th2-type3-n tv2 h4 v2 v3 v4 (1)
move-count1-prev_tv2-type1-n to3 h4 v1 v2 (1)
move-count1-prev_to3-type1-e to2 h3 h4 v1 (1)
move-count1-prev_to2-type1-w to4 h1 h2 v5 (1)
move-count1-prev_to4-type2-w th1 h2 h3 h4 v5 (1)
move-count1-prev_th1-type1-w to2 h3 h4 v1 (1)
move-count1-prev_to2-type1-s to3 h4 v1 v2 (1)
move-count1-prev_to3-type3-n tv2 h4 v3 v4 v5 (1)
move-count1-prev_tv2-type4-e tsq h2 h3 h4 v2 v3 (1)
move-count1-prev_tsq-type1-e to1 h1 h2 v2 (1)
move-count0-prev_to1-type1-n to1 h2 v2 v3 (0)
move-count1-prev_to1-type2-n th3 h1 h2 v1 v2 (1)
move-count1-prev_th3-type1-w to2 h2 h3 v1 (1)
move-count1-prev_to2-type1-w to3 h3 h4 v1 (1)
move-count1-prev_to3-type1-w to2 h1 h2 v1 (1)
move-count1-prev_to2-type1-w to3 h2 h3 v1 (1)
move-count1-prev_to3-type4-s tsq h3 h4 v1 v2 v3 (1)
move-count1-prev_tsq-type3-s tv2 h4 v3 v4 v5 (1)
move-count1-prev_tv2-type2-e th1 h2 h3 h4 v5 (1)
move-count1-prev_th1-type1-e to4 h1 h2 v5 (1)
move-count1-prev_to4-type3-n tv1 h1 v3 v4 v5 (1)
move-count1-prev_tv1-type1-e to1 h2 h3 v3 (1)
move-count1-prev_to1-type2-n th3 h1 h2 v2 v3 (1)
move-count1-prev_th3-type1-n to3 h2 v1 v2 (1)
move-count0-prev_to3-type1-w to3 h1 h2 v2 (0)
move-count1-prev_to3-type4-w tsq h2 h3 h4 v1 v2 (1)
[t=5.04688s, 0 KB] Plan length: 73 step(s).
[t=5.04688s, 0 KB] Plan cost: 66
[t=5.04688s, 0 KB] Expanded 17866 state(s).
[t=5.04688s, 0 KB] Reopened 0 state(s).
[t=5.04688s, 0 KB] Evaluated 17867 state(s).
[t=5.04688s, 0 KB] Evaluations: 35734
[t=5.04688s, 0 KB] Generated 68044 state(s).
[t=5.04688s, 0 KB] Dead ends: 0 state(s).
[t=5.04688s, 0 KB] Number of registered states: 17867
[t=5.04688s, 0 KB] Int hash set load factor: 17867/32768 = 0.545258
[t=5.04688s, 0 KB] Int hash set resizes: 15
[t=5.04688s, 0 KB] Best solution cost so far: 66
[t=5.04688s, 0 KB] Solution found - keep searching
[t=5.04688s, 0 KB] Building successor generator...done!
[t=5.04688s, 0 KB] peak memory difference for successor generator creation: 0 KB
[t=5.04688s, 0 KB] time for successor generation creation: 0s
[t=5.04688s, 0 KB] Variables: 21
[t=5.04688s, 0 KB] FactPairs: 231
[t=5.04688s, 0 KB] Bytes per state: 12
[t=5.04688s, 0 KB] Starting search: lazy_greedy(list(hff2, hlm2), preferred = list(hff2, hlm2), reopen_closed = false)
[t=5.04688s, 0 KB] Conducting lazy best first search, (real) bound = 66
[t=5.04688s, 0 KB] 4 initial landmarks, 4 goal landmarks
[t=5.04688s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 10
[t=5.04688s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 18
[t=5.04688s, 0 KB] g=0, 1 evaluated, 0 expanded
[t=5.04688s, 0 KB] Initial heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 10
[t=5.04688s, 0 KB] Initial heuristic value for ff(transform = adapt_costs(plusone)): 18
[t=5.04688s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 16
[t=5.04688s, 0 KB] g=1, 2 evaluated, 1 expanded
[t=5.04688s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 15
[t=5.04688s, 0 KB] g=2, 3 evaluated, 2 expanded
[t=5.04688s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 8
[t=5.04688s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 12
[t=5.04688s, 0 KB] g=3, 6 evaluated, 5 expanded
[t=5.04688s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 10
[t=5.04688s, 0 KB] g=4, 7 evaluated, 6 expanded
[t=5.04688s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 7
[t=5.04688s, 0 KB] g=5, 8 evaluated, 7 expanded
[t=5.04688s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 9
[t=5.04688s, 0 KB] g=5, 10 evaluated, 9 expanded
[t=5.04688s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 8
[t=5.04688s, 0 KB] g=5, 11 evaluated, 10 expanded
[t=5.04688s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 7
[t=5.04688s, 0 KB] g=4, 19 evaluated, 18 expanded
[t=5.0625s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 6
[t=5.0625s, 0 KB] g=11, 55 evaluated, 54 expanded
[t=5.15625s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 6
[t=5.15625s, 0 KB] g=6, 455 evaluated, 454 expanded
[t=5.15625s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 5
[t=5.15625s, 0 KB] g=7, 456 evaluated, 455 expanded
[t=5.15625s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 4
[t=5.15625s, 0 KB] g=8, 457 evaluated, 456 expanded
[t=5.15625s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 4
[t=5.15625s, 0 KB] g=9, 460 evaluated, 459 expanded
[t=8.76562s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 3
[t=8.76562s, 0 KB] g=57, 14802 evaluated, 14801 expanded
[t=9.42188s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 2
[t=9.42188s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 3
[t=9.42188s, 0 KB] g=65, 17696 evaluated, 17695 expanded
[t=11.5938s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 2
[t=11.5938s, 0 KB] g=63, 26962 evaluated, 26961 expanded
[t=11.5938s, 0 KB] Solution found!
[t=11.5938s, 0 KB] Actual search time: 6.54688s
move-count1-prev_th1-type3-n tv1 h1 v2 v3 v4 (1)
move-count1-prev_tv1-type3-n tv2 h4 v2 v3 v4 (1)
move-count1-prev_tv2-type1-n to4 h4 v1 v2 (1)
move-count1-prev_to4-type1-n to1 h1 v1 v2 (1)
move-count1-prev_to1-type1-w to2 h1 h2 v1 (1)
move-count1-prev_to2-type1-e to3 h3 h4 v1 (1)
move-count1-prev_to3-type2-s th3 h2 h3 v1 v2 (1)
move-count1-prev_th3-type4-s tsq h2 h3 v2 v3 v4 (1)
move-count0-prev_tsq-type4-n tsq h2 h3 v2 v3 v4 (0)
move-count1-prev_tsq-type1-e to1 h1 h2 v2 (1)
move-count1-prev_to1-type1-w to4 h3 h4 v2 (1)
move-count1-prev_to4-type1-n to3 h4 v1 v2 (1)
move-count1-prev_to3-type2-e th3 h2 h3 h4 v1 (1)
move-count1-prev_th3-type1-e to2 h1 h2 v1 (1)
move-count1-prev_to2-type3-s tv1 h1 v2 v3 v4 (1)
move-count0-prev_tv1-type3-s tv1 h1 v1 v2 v3 (0)
move-count1-prev_tv1-type4-w tsq h1 h2 h3 v3 v4 (1)
move-count1-prev_tsq-type1-n to4 h3 v2 v3 (1)
move-count1-prev_to4-type1-e to1 h2 h3 v2 (1)
move-count1-prev_to1-type1-n to2 h2 v1 v2 (1)
move-count1-prev_to2-type1-n to4 h3 v3 v4 (1)
move-count1-prev_to4-type2-w th3 h2 h3 h4 v1 (1)
move-count1-prev_th3-type1-s to3 h4 v1 v2 (1)
move-count1-prev_to3-type1-n to1 h3 v2 v3 (1)
move-count1-prev_to1-type1-e to2 h2 h3 v2 (1)
move-count1-prev_to2-type3-s tv2 h4 v2 v3 v4 (1)
move-count1-prev_tv2-type1-e to4 h3 h4 v4 (1)
move-count1-prev_to4-type1-w to2 h2 h3 v2 (1)
move-count1-prev_to2-type1-s to1 h3 v2 v3 (1)
move-count1-prev_to1-type4-e tsq h1 h2 h3 v3 v4 (1)
move-count1-prev_tsq-type3-n tv1 h1 v1 v2 v3 (1)
move-count1-prev_tv1-type2-w th3 h1 h2 h3 v1 (1)
move-count1-prev_th3-type3-n tv1 h1 v2 v3 v4 (1)
move-count1-prev_tv1-type1-w to2 h1 h2 v2 (1)
move-count1-prev_to2-type1-s to1 h3 v1 v2 (1)
move-count1-prev_to1-type4-s tsq h2 h3 v2 v3 v4 (1)
move-count1-prev_tsq-type1-w to4 h3 h4 v4 (1)
move-count0-prev_to4-type1-w to4 h2 h3 v4 (0)
move-count1-prev_to4-type2-s th2 h3 h4 v4 v5 (1)
move-count1-prev_th2-type2-e th1 h1 h2 h3 v5 (1)
move-count0-prev_th1-type2-e th1 h2 h3 h4 v5 (0)
move-count1-prev_th1-type3-n tv1 h1 v3 v4 v5 (1)
move-count1-prev_tv1-type1-n to4 h2 v4 v5 (1)
move-count1-prev_to4-type2-w th2 h2 h3 h4 v4 (1)
move-count1-prev_th2-type3-n tv2 h4 v2 v3 v4 (1)
move-count1-prev_tv2-type1-n to3 h4 v1 v2 (1)
move-count1-prev_to3-type1-e to1 h3 h4 v1 (1)
move-count1-prev_to1-type3-s tv1 h1 v3 v4 v5 (1)
move-count1-prev_tv1-type1-w to4 h1 h2 v5 (1)
move-count1-prev_to4-type2-w th1 h2 h3 h4 v5 (1)
move-count1-prev_th1-type2-e th3 h1 h2 h3 v1 (1)
move-count0-prev_th3-type2-w th3 h1 h2 h3 v1 (0)
move-count1-prev_th3-type3-n tv2 h4 v3 v4 v5 (1)
move-count1-prev_tv2-type1-w to1 h3 h4 v1 (1)
move-count1-prev_to1-type1-s to3 h4 v1 v2 (1)
move-count1-prev_to3-type4-e tsq h2 h3 h4 v2 v3 (1)
move-count1-prev_tsq-type1-e to2 h1 h2 v2 (1)
move-count0-prev_to2-type1-n to2 h2 v2 v3 (0)
move-count1-prev_to2-type2-n th3 h1 h2 v1 v2 (1)
move-count1-prev_th3-type1-w to1 h2 h3 v1 (1)
move-count0-prev_to1-type1-w to1 h1 h2 v1 (0)
move-count1-prev_to1-type1-w to3 h3 h4 v1 (1)
move-count0-prev_to3-type1-w to3 h2 h3 v1 (0)
move-count1-prev_to3-type4-s tsq h3 h4 v1 v2 v3 (1)
move-count1-prev_tsq-type3-s tv2 h4 v3 v4 v5 (1)
move-count1-prev_tv2-type2-e th1 h2 h3 h4 v5 (1)
move-count1-prev_th1-type1-e to4 h1 h2 v5 (1)
move-count1-prev_to4-type3-n tv1 h1 v3 v4 v5 (1)
move-count1-prev_tv1-type1-e to2 h2 h3 v3 (1)
move-count1-prev_to2-type2-n th3 h1 h2 v2 v3 (1)
move-count1-prev_th3-type1-n to3 h2 v1 v2 (1)
move-count0-prev_to3-type1-w to3 h1 h2 v2 (0)
move-count1-prev_to3-type4-w tsq h2 h3 h4 v1 v2 (1)
[t=11.5938s, 0 KB] Plan length: 73 step(s).
[t=11.5938s, 0 KB] Plan cost: 64
[t=11.5938s, 0 KB] Expanded 26962 state(s).
[t=11.5938s, 0 KB] Reopened 0 state(s).
[t=11.5938s, 0 KB] Evaluated 26963 state(s).
[t=11.5938s, 0 KB] Evaluations: 53926
[t=11.5938s, 0 KB] Generated 100613 state(s).
[t=11.5938s, 0 KB] Dead ends: 0 state(s).
[t=11.5938s, 0 KB] Number of registered states: 26963
[t=11.5938s, 0 KB] Int hash set load factor: 26963/32768 = 0.822845
[t=11.5938s, 0 KB] Int hash set resizes: 15
[t=11.5938s, 0 KB] Best solution cost so far: 64
[t=11.5938s, 0 KB] Solution found - keep searching
[t=11.5938s, 0 KB] Building successor generator...done!
[t=11.5938s, 0 KB] peak memory difference for successor generator creation: 0 KB
[t=11.5938s, 0 KB] time for successor generation creation: 0s
[t=11.5938s, 0 KB] Variables: 21
[t=11.5938s, 0 KB] FactPairs: 231
[t=11.5938s, 0 KB] Bytes per state: 12
[t=11.5938s, 0 KB] Starting search: lazy_wastar(list(hff2, hlm2), preferred = list(hff2, hlm2), w = 5)
[t=11.5938s, 0 KB] Conducting lazy best first search, (real) bound = 64
[t=11.5938s, 0 KB] 4 initial landmarks, 4 goal landmarks
[t=11.5938s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 10
[t=11.5938s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 18
[t=11.5938s, 0 KB] g=0, 1 evaluated, 0 expanded
[t=11.5938s, 0 KB] Initial heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 10
[t=11.5938s, 0 KB] Initial heuristic value for ff(transform = adapt_costs(plusone)): 18
[t=11.5938s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 16
[t=11.5938s, 0 KB] g=1, 2 evaluated, 1 expanded
[t=11.5938s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 15
[t=11.5938s, 0 KB] g=2, 3 evaluated, 2 expanded
[t=11.5938s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 8
[t=11.5938s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 12
[t=11.5938s, 0 KB] g=3, 6 evaluated, 5 expanded
[t=11.5938s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 10
[t=11.5938s, 0 KB] g=4, 7 evaluated, 6 expanded
[t=11.5938s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 7
[t=11.5938s, 0 KB] g=5, 8 evaluated, 7 expanded
[t=11.5938s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 9
[t=11.5938s, 0 KB] g=5, 10 evaluated, 9 expanded
[t=11.5938s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 8
[t=11.5938s, 0 KB] g=5, 11 evaluated, 10 expanded
[t=11.5938s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 7
[t=11.5938s, 0 KB] g=4, 17 evaluated, 16 expanded
[t=11.6094s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 6
[t=11.6094s, 0 KB] g=7, 59 evaluated, 58 expanded
[t=11.6719s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 6
[t=11.6719s, 0 KB] g=6, 322 evaluated, 321 expanded, 19 reopened
[t=11.6719s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 5
[t=11.6719s, 0 KB] g=7, 323 evaluated, 322 expanded, 19 reopened
[t=11.6719s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 4
[t=11.6719s, 0 KB] g=8, 324 evaluated, 323 expanded, 19 reopened
[t=11.6719s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 4
[t=11.6719s, 0 KB] g=9, 327 evaluated, 326 expanded, 19 reopened
[t=24.3281s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 2
[t=24.3281s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 3
[t=24.3281s, 0 KB] g=48, 62730 evaluated, 62729 expanded, 21814 reopened
[t=26.4844s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 2
[t=26.4844s, 0 KB] g=47, 74481 evaluated, 74480 expanded, 25869 reopened
[t=26.4844s, 0 KB] Solution found!
[t=26.4844s, 0 KB] Actual search time: 14.8906s
move-count1-prev_th1-type3-n tv1 h1 v2 v3 v4 (1)
move-count1-prev_tv1-type3-n tv2 h4 v2 v3 v4 (1)
move-count1-prev_tv2-type1-n to4 h4 v1 v2 (1)
move-count1-prev_to4-type1-n to1 h1 v1 v2 (1)
move-count1-prev_to1-type1-w to2 h1 h2 v1 (1)
move-count1-prev_to2-type1-e to3 h3 h4 v1 (1)
move-count1-prev_to3-type2-s th3 h2 h3 v1 v2 (1)
move-count1-prev_th3-type1-e to1 h1 h2 v2 (1)
move-count0-prev_to1-type1-e to1 h2 h3 v2 (0)
move-count1-prev_to1-type1-n to2 h1 v1 v2 (1)
move-count0-prev_to2-type1-e to2 h1 h2 v2 (0)
move-count1-prev_to2-type3-s tv1 h1 v2 v3 v4 (1)
move-count0-prev_tv1-type3-s tv1 h1 v1 v2 v3 (0)
move-count1-prev_tv1-type4-w tsq h1 h2 h3 v3 v4 (1)
move-count1-prev_tsq-type1-n to1 h3 v2 v3 (1)
move-count0-prev_to1-type1-n to1 h3 v3 v4 (0)
move-count1-prev_to1-type1-e to2 h2 h3 v2 (1)
move-count0-prev_to2-type1-n to2 h3 v2 v3 (0)
move-count1-prev_to2-type1-w to4 h3 h4 v2 (1)
move-count0-prev_to4-type1-w to4 h2 h3 v2 (0)
move-count1-prev_to4-type3-s tv2 h4 v2 v3 v4 (1)
move-count1-prev_tv2-type1-e to1 h3 h4 v4 (1)
move-count1-prev_to1-type1-s to2 h3 v2 v3 (1)
move-count1-prev_to2-type4-e tsq h1 h2 h3 v3 v4 (1)
move-count1-prev_tsq-type3-n tv1 h1 v1 v2 v3 (1)
move-count0-prev_tv1-type3-n tv1 h1 v2 v3 v4 (0)
move-count1-prev_tv1-type2-w th3 h1 h2 h3 v1 (1)
move-count1-prev_th3-type1-w to4 h1 h2 v2 (1)
move-count1-prev_to4-type1-s to2 h3 v1 v2 (1)
move-count1-prev_to2-type4-s tsq h2 h3 v2 v3 v4 (1)
move-count1-prev_tsq-type1-w to1 h3 h4 v4 (1)
move-count0-prev_to1-type1-w to1 h2 h3 v4 (0)
move-count1-prev_to1-type2-s th2 h3 h4 v4 v5 (1)
move-count1-prev_th2-type2-e th1 h1 h2 h3 v5 (1)
move-count0-prev_th1-type2-e th1 h2 h3 h4 v5 (0)
move-count1-prev_th1-type1-n to1 h2 v4 v5 (1)
move-count0-prev_to1-type1-w to1 h1 h2 v5 (0)
move-count1-prev_to1-type2-w th2 h2 h3 h4 v4 (1)
move-count1-prev_th2-type3-n tv2 h4 v2 v3 v4 (1)
move-count1-prev_tv2-type2-w th1 h2 h3 h4 v5 (1)
move-count1-prev_th1-type3-n tv2 h4 v3 v4 v5 (1)
move-count1-prev_tv2-type4-e tsq h2 h3 h4 v2 v3 (1)
move-count1-prev_tsq-type1-e to4 h1 h2 v2 (1)
move-count0-prev_to4-type1-n to4 h2 v2 v3 (0)
move-count1-prev_to4-type2-n th3 h1 h2 v1 v2 (1)
move-count1-prev_th3-type1-w to2 h2 h3 v1 (1)
move-count1-prev_to2-type1-w to3 h3 h4 v1 (1)
move-count1-prev_to3-type1-w to2 h1 h2 v1 (1)
move-count1-prev_to2-type1-w to3 h2 h3 v1 (1)
move-count1-prev_to3-type4-s tsq h3 h4 v1 v2 v3 (1)
move-count1-prev_tsq-type3-s tv2 h4 v3 v4 v5 (1)
move-count1-prev_tv2-type2-e th1 h2 h3 h4 v5 (1)
move-count1-prev_th1-type1-e to1 h1 h2 v5 (1)
move-count1-prev_to1-type3-n tv1 h1 v3 v4 v5 (1)
move-count1-prev_tv1-type1-e to4 h2 h3 v3 (1)
move-count1-prev_to4-type2-n th3 h1 h2 v2 v3 (1)
move-count1-prev_th3-type1-n to3 h2 v1 v2 (1)
move-count0-prev_to3-type1-w to3 h1 h2 v2 (0)
move-count1-prev_to3-type4-w tsq h2 h3 h4 v1 v2 (1)
[t=26.4844s, 0 KB] Plan length: 59 step(s).
[t=26.4844s, 0 KB] Plan cost: 47
[t=26.4844s, 0 KB] Expanded 74481 state(s).
[t=26.4844s, 0 KB] Reopened 25869 state(s).
[t=26.4844s, 0 KB] Evaluated 74482 state(s).
[t=26.4844s, 0 KB] Evaluations: 123095
[t=26.4844s, 0 KB] Generated 279542 state(s).
[t=26.4844s, 0 KB] Dead ends: 0 state(s).
[t=26.4844s, 0 KB] Number of registered states: 48613
[t=26.4844s, 0 KB] Int hash set load factor: 48613/65536 = 0.741776
[t=26.4844s, 0 KB] Int hash set resizes: 16
[t=26.4844s, 0 KB] Best solution cost so far: 47
[t=26.4844s, 0 KB] Solution found - keep searching
[t=26.4844s, 0 KB] Building successor generator...done!
[t=26.4844s, 0 KB] peak memory difference for successor generator creation: 0 KB
[t=26.4844s, 0 KB] time for successor generation creation: 0s
[t=26.4844s, 0 KB] Variables: 21
[t=26.4844s, 0 KB] FactPairs: 231
[t=26.4844s, 0 KB] Bytes per state: 12
[t=26.4844s, 0 KB] Starting search: lazy_wastar(list(hff2, hlm2), preferred = list(hff2, hlm2), w = 3)
[t=26.4844s, 0 KB] Conducting lazy best first search, (real) bound = 47
[t=26.4844s, 0 KB] 4 initial landmarks, 4 goal landmarks
[t=26.4844s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 10
[t=26.4844s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 18
[t=26.4844s, 0 KB] g=0, 1 evaluated, 0 expanded
[t=26.4844s, 0 KB] Initial heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 10
[t=26.4844s, 0 KB] Initial heuristic value for ff(transform = adapt_costs(plusone)): 18
[t=26.4844s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 16
[t=26.4844s, 0 KB] g=1, 2 evaluated, 1 expanded
[t=26.4844s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 15
[t=26.4844s, 0 KB] g=2, 3 evaluated, 2 expanded
[t=26.4844s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 8
[t=26.4844s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 12
[t=26.4844s, 0 KB] g=3, 6 evaluated, 5 expanded
[t=26.4844s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 10
[t=26.4844s, 0 KB] g=4, 7 evaluated, 6 expanded
[t=26.4844s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 7
[t=26.4844s, 0 KB] g=5, 8 evaluated, 7 expanded
[t=26.4844s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 9
[t=26.4844s, 0 KB] g=5, 10 evaluated, 9 expanded
[t=26.4844s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 8
[t=26.4844s, 0 KB] g=5, 11 evaluated, 10 expanded
[t=26.4844s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 7
[t=26.4844s, 0 KB] g=4, 13 evaluated, 12 expanded
[t=26.5s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 6
[t=26.5s, 0 KB] g=7, 45 evaluated, 44 expanded
[t=26.5781s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 6
[t=26.5781s, 0 KB] g=6, 263 evaluated, 262 expanded, 18 reopened
[t=26.5781s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 5
[t=26.5781s, 0 KB] g=7, 264 evaluated, 263 expanded, 18 reopened
[t=26.5781s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 4
[t=26.5781s, 0 KB] g=8, 265 evaluated, 264 expanded, 18 reopened
[t=26.5781s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 4
[t=26.5781s, 0 KB] g=9, 268 evaluated, 267 expanded, 18 reopened
[t=43.2812s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 3
[t=43.2812s, 0 KB] g=43, 81720 evaluated, 81719 expanded, 28650 reopened
[t=54.1094s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 2
[t=54.1094s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 3
[t=54.1094s, 0 KB] g=44, 147863 evaluated, 147862 expanded, 59931 reopened
[t=54.2656s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 2
[t=54.2656s, 0 KB] g=44, 148516 evaluated, 148515 expanded, 60111 reopened
[t=54.2656s, 0 KB] Solution found!
[t=54.2656s, 0 KB] Actual search time: 27.7812s
move-count1-prev_th1-type3-n tv1 h1 v2 v3 v4 (1)
move-count1-prev_tv1-type3-n tv2 h4 v2 v3 v4 (1)
move-count1-prev_tv2-type1-n to4 h4 v1 v2 (1)
move-count1-prev_to4-type1-n to1 h1 v1 v2 (1)
move-count1-prev_to1-type1-w to2 h1 h2 v1 (1)
move-count1-prev_to2-type1-e to3 h3 h4 v1 (1)
move-count1-prev_to3-type2-s th3 h2 h3 v1 v2 (1)
move-count1-prev_th3-type1-e to1 h1 h2 v2 (1)
move-count0-prev_to1-type1-e to1 h2 h3 v2 (0)
move-count1-prev_to1-type1-n to2 h1 v1 v2 (1)
move-count0-prev_to2-type1-e to2 h1 h2 v2 (0)
move-count1-prev_to2-type3-s tv1 h1 v2 v3 v4 (1)
move-count0-prev_tv1-type3-s tv1 h1 v1 v2 v3 (0)
move-count1-prev_tv1-type4-w tsq h1 h2 h3 v3 v4 (1)
move-count1-prev_tsq-type1-n to1 h3 v2 v3 (1)
move-count0-prev_to1-type1-n to1 h3 v3 v4 (0)
move-count1-prev_to1-type1-w to4 h3 h4 v2 (1)
move-count1-prev_to4-type3-s tv2 h4 v2 v3 v4 (1)
move-count1-prev_tv2-type1-e to1 h3 h4 v4 (1)
move-count1-prev_to1-type4-e tsq h1 h2 h3 v3 v4 (1)
move-count1-prev_tsq-type3-n tv1 h1 v1 v2 v3 (1)
move-count1-prev_tv1-type2-w th3 h1 h2 h3 v1 (1)
move-count1-prev_th3-type3-n tv1 h1 v2 v3 v4 (1)
move-count1-prev_tv1-type1-w to2 h1 h2 v2 (1)
move-count1-prev_to2-type1-s to4 h3 v1 v2 (1)
move-count1-prev_to4-type4-s tsq h2 h3 v2 v3 v4 (1)
move-count1-prev_tsq-type1-w to1 h3 h4 v4 (1)
move-count0-prev_to1-type1-w to1 h2 h3 v4 (0)
move-count1-prev_to1-type2-s th2 h3 h4 v4 v5 (1)
move-count1-prev_th2-type2-e th1 h1 h2 h3 v5 (1)
move-count0-prev_th1-type2-e th1 h2 h3 h4 v5 (0)
move-count1-prev_th1-type1-n to1 h2 v4 v5 (1)
move-count0-prev_to1-type1-w to1 h1 h2 v5 (0)
move-count1-prev_to1-type2-w th1 h2 h3 h4 v5 (1)
move-count1-prev_th1-type2-w th2 h2 h3 h4 v4 (1)
move-count1-prev_th2-type3-n tv2 h4 v2 v3 v4 (1)
move-count0-prev_tv2-type3-n tv2 h4 v3 v4 v5 (0)
move-count1-prev_tv2-type4-e tsq h2 h3 h4 v2 v3 (1)
move-count1-prev_tsq-type1-e to2 h1 h2 v2 (1)
move-count0-prev_to2-type1-n to2 h2 v2 v3 (0)
move-count1-prev_to2-type2-n th3 h1 h2 v1 v2 (1)
move-count1-prev_th3-type1-w to4 h2 h3 v1 (1)
move-count1-prev_to4-type1-w to3 h3 h4 v1 (1)
move-count1-prev_to3-type1-w to4 h1 h2 v1 (1)
move-count1-prev_to4-type1-w to3 h2 h3 v1 (1)
move-count1-prev_to3-type4-s tsq h3 h4 v1 v2 v3 (1)
move-count1-prev_tsq-type3-s tv2 h4 v3 v4 v5 (1)
move-count1-prev_tv2-type2-e th1 h2 h3 h4 v5 (1)
move-count1-prev_th1-type1-e to1 h1 h2 v5 (1)
move-count1-prev_to1-type3-n tv1 h1 v3 v4 v5 (1)
move-count1-prev_tv1-type1-e to2 h2 h3 v3 (1)
move-count1-prev_to2-type2-n th3 h1 h2 v2 v3 (1)
move-count1-prev_th3-type1-n to3 h2 v1 v2 (1)
move-count0-prev_to3-type1-w to3 h1 h2 v2 (0)
move-count1-prev_to3-type4-w tsq h2 h3 h4 v1 v2 (1)
[t=54.2656s, 0 KB] Plan length: 55 step(s).
[t=54.2656s, 0 KB] Plan cost: 45
[t=54.2656s, 0 KB] Expanded 148516 state(s).
[t=54.2656s, 0 KB] Reopened 60111 state(s).
[t=54.2656s, 0 KB] Evaluated 148517 state(s).
[t=54.2656s, 0 KB] Evaluations: 236923
[t=54.2656s, 0 KB] Generated 538355 state(s).
[t=54.2656s, 0 KB] Dead ends: 0 state(s).
[t=54.2656s, 0 KB] Number of registered states: 88406
[t=54.2656s, 0 KB] Int hash set load factor: 88406/131072 = 0.674484
[t=54.2656s, 0 KB] Int hash set resizes: 17
[t=54.2656s, 0 KB] Best solution cost so far: 45
[t=54.2656s, 0 KB] Solution found - keep searching
[t=54.2656s, 0 KB] Building successor generator...done!
[t=54.2656s, 0 KB] peak memory difference for successor generator creation: 0 KB
[t=54.2656s, 0 KB] time for successor generation creation: 0s
[t=54.2656s, 0 KB] Variables: 21
[t=54.2656s, 0 KB] FactPairs: 231
[t=54.2656s, 0 KB] Bytes per state: 12
[t=54.2656s, 0 KB] Starting search: lazy_wastar(list(hff2, hlm2), preferred = list(hff2, hlm2), w = 2)
[t=54.2656s, 0 KB] Conducting lazy best first search, (real) bound = 45
[t=54.2656s, 0 KB] 4 initial landmarks, 4 goal landmarks
[t=54.2656s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 10
[t=54.2656s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 18
[t=54.2656s, 0 KB] g=0, 1 evaluated, 0 expanded
[t=54.2656s, 0 KB] Initial heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 10
[t=54.2656s, 0 KB] Initial heuristic value for ff(transform = adapt_costs(plusone)): 18
[t=54.2812s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 16
[t=54.2812s, 0 KB] g=1, 2 evaluated, 1 expanded
[t=54.2812s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 15
[t=54.2812s, 0 KB] g=2, 3 evaluated, 2 expanded
[t=54.2812s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 8
[t=54.2812s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 12
[t=54.2812s, 0 KB] g=3, 6 evaluated, 5 expanded
[t=54.2812s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 10
[t=54.2812s, 0 KB] g=4, 7 evaluated, 6 expanded
[t=54.2812s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 7
[t=54.2812s, 0 KB] g=5, 8 evaluated, 7 expanded
[t=54.2812s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 7
[t=54.2812s, 0 KB] g=4, 9 evaluated, 8 expanded
[t=54.2812s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 6
[t=54.2812s, 0 KB] g=7, 56 evaluated, 55 expanded, 2 reopened
[t=54.3125s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 6
[t=54.3125s, 0 KB] g=6, 179 evaluated, 178 expanded, 9 reopened
[t=54.3125s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 5
[t=54.3125s, 0 KB] g=7, 180 evaluated, 179 expanded, 9 reopened
[t=54.3125s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 4
[t=54.3125s, 0 KB] g=8, 181 evaluated, 180 expanded, 9 reopened
[t=54.3125s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 4
[t=54.3125s, 0 KB] g=9, 184 evaluated, 183 expanded, 9 reopened
[t=71.3594s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 3
[t=71.3594s, 0 KB] g=40, 84072 evaluated, 84071 expanded, 29438 reopened
[t=103.703s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 2
[t=103.703s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 3
[t=103.703s, 0 KB] g=43, 292667 evaluated, 292666 expanded, 133789 reopened
[t=139.281s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 2
[t=139.281s, 0 KB] g=41, 523177 evaluated, 523176 expanded, 243290 reopened
[t=139.281s, 0 KB] Solution found!
[t=139.281s, 0 KB] Actual search time: 85.0156s
move-count1-prev_th1-type3-n tv1 h1 v2 v3 v4 (1)
move-count1-prev_tv1-type3-n tv2 h4 v2 v3 v4 (1)
move-count1-prev_tv2-type1-n to4 h4 v1 v2 (1)
move-count1-prev_to4-type1-n to1 h1 v1 v2 (1)
move-count1-prev_to1-type1-w to2 h1 h2 v1 (1)
move-count1-prev_to2-type1-e to3 h3 h4 v1 (1)
move-count1-prev_to3-type2-s th3 h2 h3 v1 v2 (1)
move-count1-prev_th3-type1-e to1 h1 h2 v2 (1)
move-count0-prev_to1-type1-e to1 h2 h3 v2 (0)
move-count1-prev_to1-type1-n to2 h1 v1 v2 (1)
move-count0-prev_to2-type1-e to2 h1 h2 v2 (0)
move-count1-prev_to2-type3-s tv1 h1 v2 v3 v4 (1)
move-count0-prev_tv1-type3-s tv1 h1 v1 v2 v3 (0)
move-count1-prev_tv1-type4-w tsq h1 h2 h3 v3 v4 (1)
move-count1-prev_tsq-type1-n to1 h3 v2 v3 (1)
move-count0-prev_to1-type1-n to1 h3 v3 v4 (0)
move-count1-prev_to1-type1-w to4 h3 h4 v2 (1)
move-count1-prev_to4-type3-s tv2 h4 v2 v3 v4 (1)
move-count1-prev_tv2-type1-e to1 h3 h4 v4 (1)
move-count1-prev_to1-type4-e tsq h1 h2 h3 v3 v4 (1)
move-count1-prev_tsq-type3-n tv1 h1 v1 v2 v3 (1)
move-count0-prev_tv1-type3-n tv1 h1 v2 v3 v4 (0)
move-count1-prev_tv1-type2-w th3 h1 h2 h3 v1 (1)
move-count1-prev_th3-type1-w to2 h1 h2 v2 (1)
move-count1-prev_to2-type1-s to4 h3 v1 v2 (1)
move-count1-prev_to4-type4-s tsq h2 h3 v2 v3 v4 (1)
move-count1-prev_tsq-type1-w to1 h3 h4 v4 (1)
move-count0-prev_to1-type1-w to1 h2 h3 v4 (0)
move-count1-prev_to1-type2-s th2 h3 h4 v4 v5 (1)
move-count1-prev_th2-type2-e th1 h1 h2 h3 v5 (1)
move-count0-prev_th1-type2-e th1 h2 h3 h4 v5 (0)
move-count1-prev_th1-type1-n to1 h2 v4 v5 (1)
move-count0-prev_to1-type1-w to1 h1 h2 v5 (0)
move-count1-prev_to1-type2-w th1 h2 h3 h4 v5 (1)
move-count1-prev_th1-type2-w th2 h2 h3 h4 v4 (1)
move-count1-prev_th2-type3-n tv2 h4 v2 v3 v4 (1)
move-count0-prev_tv2-type3-n tv2 h4 v3 v4 v5 (0)
move-count1-prev_tv2-type4-e tsq h2 h3 h4 v2 v3 (1)
move-count1-prev_tsq-type1-e to2 h1 h2 v2 (1)
move-count0-prev_to2-type1-n to2 h2 v2 v3 (0)
move-count1-prev_to2-type2-n th3 h1 h2 v1 v2 (1)
move-count1-prev_th3-type1-w to4 h2 h3 v1 (1)
move-count0-prev_to4-type1-w to4 h1 h2 v1 (0)
move-count1-prev_to4-type1-w to3 h3 h4 v1 (1)
move-count0-prev_to3-type1-w to3 h2 h3 v1 (0)
move-count1-prev_to3-type4-s tsq h3 h4 v1 v2 v3 (1)
move-count1-prev_tsq-type3-s tv2 h4 v3 v4 v5 (1)
move-count1-prev_tv2-type2-e th1 h2 h3 h4 v5 (1)
move-count1-prev_th1-type1-e to1 h1 h2 v5 (1)
move-count1-prev_to1-type3-n tv1 h1 v3 v4 v5 (1)
move-count1-prev_tv1-type1-e to2 h2 h3 v3 (1)
move-count1-prev_to2-type2-n th3 h1 h2 v2 v3 (1)
move-count1-prev_th3-type1-n to3 h2 v1 v2 (1)
move-count0-prev_to3-type1-w to3 h1 h2 v2 (0)
move-count1-prev_to3-type4-w tsq h2 h3 h4 v1 v2 (1)
[t=139.281s, 0 KB] Plan length: 55 step(s).
[t=139.281s, 0 KB] Plan cost: 42
[t=139.281s, 0 KB] Expanded 523177 state(s).
[t=139.281s, 0 KB] Reopened 243290 state(s).
[t=139.281s, 0 KB] Evaluated 523178 state(s).
[t=139.281s, 0 KB] Evaluations: 803066
[t=139.281s, 0 KB] Generated 1876017 state(s).
[t=139.281s, 0 KB] Dead ends: 0 state(s).
[t=139.281s, 0 KB] Number of registered states: 279888
[t=139.281s, 0 KB] Int hash set load factor: 279888/524288 = 0.533844
[t=139.281s, 0 KB] Int hash set resizes: 19
[t=139.281s, 0 KB] Best solution cost so far: 42
[t=139.281s, 0 KB] Solution found - keep searching
[t=139.281s, 0 KB] Building successor generator...done!
[t=139.281s, 0 KB] peak memory difference for successor generator creation: 0 KB
[t=139.281s, 0 KB] time for successor generation creation: 0s
[t=139.281s, 0 KB] Variables: 21
[t=139.281s, 0 KB] FactPairs: 231
[t=139.281s, 0 KB] Bytes per state: 12
[t=139.281s, 0 KB] Starting search: lazy_wastar(list(hff2, hlm2), preferred = list(hff2, hlm2), w = 1)
[t=139.281s, 0 KB] Conducting lazy best first search, (real) bound = 42
[t=139.281s, 0 KB] 4 initial landmarks, 4 goal landmarks
[t=139.281s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 10
[t=139.281s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 18
[t=139.281s, 0 KB] g=0, 1 evaluated, 0 expanded
[t=139.281s, 0 KB] Initial heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 10
[t=139.281s, 0 KB] Initial heuristic value for ff(transform = adapt_costs(plusone)): 18
[t=139.281s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 16
[t=139.281s, 0 KB] g=1, 2 evaluated, 1 expanded
[t=139.281s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 15
[t=139.281s, 0 KB] g=2, 3 evaluated, 2 expanded
[t=139.281s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 9
[t=139.281s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 12
[t=139.281s, 0 KB] g=2, 6 evaluated, 5 expanded
[t=139.281s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 8
[t=139.281s, 0 KB] g=3, 9 evaluated, 8 expanded
[t=139.281s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 10
[t=139.281s, 0 KB] g=4, 11 evaluated, 10 expanded
[t=139.297s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 7
[t=139.297s, 0 KB] g=5, 32 evaluated, 31 expanded, 2 reopened
[t=139.297s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 7
[t=139.297s, 0 KB] g=4, 33 evaluated, 32 expanded, 2 reopened
[t=139.297s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 6
[t=139.297s, 0 KB] g=7, 68 evaluated, 67 expanded, 4 reopened
[t=139.328s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 6
[t=139.328s, 0 KB] g=6, 135 evaluated, 134 expanded, 8 reopened
[t=139.328s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 5
[t=139.328s, 0 KB] g=7, 136 evaluated, 135 expanded, 8 reopened
[t=139.328s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 4
[t=139.328s, 0 KB] g=8, 137 evaluated, 136 expanded, 8 reopened
[t=142.062s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 4
[t=142.062s, 0 KB] g=16, 13552 evaluated, 13551 expanded, 3543 reopened
[t=169.562s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 3
[t=169.562s, 0 KB] g=41, 157882 evaluated, 157881 expanded, 57666 reopened
[t=206.391s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 2
[t=206.391s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 3
[t=206.391s, 0 KB] g=40, 342636 evaluated, 342635 expanded, 122827 reopened
[t=232.547s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 2
[t=232.547s, 0 KB] g=41, 516806 evaluated, 516805 expanded, 196146 reopened
[t=270.234s, 0 KB] Completely explored state space -- no solution!
[t=270.234s, 0 KB] Actual search time: 130.953s
[t=270.234s, 0 KB] Expanded 740283 state(s).
[t=270.234s, 0 KB] Reopened 296648 state(s).
[t=270.234s, 0 KB] Evaluated 740283 state(s).
[t=270.234s, 0 KB] Evaluations: 1183918
[t=270.234s, 0 KB] Generated 2626072 state(s).
[t=270.234s, 0 KB] Dead ends: 0 state(s).
[t=270.234s, 0 KB] Number of registered states: 443635
[t=270.234s, 0 KB] Int hash set load factor: 443635/524288 = 0.846167
[t=270.234s, 0 KB] Int hash set resizes: 19
[t=270.234s, 0 KB] Best solution cost so far: 42
[t=270.234s, 0 KB] No solution found - keep searching
[t=270.234s, 0 KB] Actual search time: 269.922s
[t=270.234s, 0 KB] Cumulative statistics:
[t=270.234s, 0 KB] Expanded 1531285 state(s).
[t=270.234s, 0 KB] Reopened 625918 state(s).
[t=270.234s, 0 KB] Evaluated 1531290 state(s).
[t=270.234s, 0 KB] Evaluations: 2436662
[t=270.234s, 0 KB] Generated 5488643 state(s).
[t=270.234s, 0 KB] Dead ends: 0 state(s).
[t=270.234s, 0 KB] Search time: 269.922s
[t=270.234s, 0 KB] Total time: 270.234s
Solution found.
Peak memory: 0 KB
search exit code: 0

