$ ./solve-downward.sh khunpan01-100-gen
INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/bo198214/workspace/planner/downward/builds/release/bin/translate/translate.py /home/bo198214/workspace/slide_puzzle_gen/khunpan01-100-gen-domain.pddl /home/bo198214/workspace/slide_puzzle_gen/khunpan01-100-gen-problem.pddl --sas-file /home/bo198214/workspace/slide_puzzle_gen/khunpan01-100-gen.sas
Parsing...
Parsing: [0.100s CPU, 0.100s wall-clock]
Normalizing task... [0.010s CPU, 0.011s wall-clock]
Instantiating...
Generating Datalog program... [0.020s CPU, 0.013s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.220s CPU, 0.215s wall-clock]
Preparing model... [0.090s CPU, 0.104s wall-clock]
Generated 5041 rules.
Computing model... [2.910s CPU, 2.920s wall-clock]
10646 relevant atoms
197840 auxiliary atoms
208486 final queue length
240337 total queue pushes
Completing instantiation... [0.920s CPU, 0.922s wall-clock]
Instantiating: [4.250s CPU, 4.273s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.410s CPU, 0.405s wall-clock]
Checking invariant weight... [0.000s CPU, 0.001s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.410s CPU, 0.411s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.030s CPU, 0.035s wall-clock]
Translating task: [0.330s CPU, 0.320s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
21 propositions removed
Detecting unreachable propositions: [0.200s CPU, 0.208s wall-clock]
Reordering and filtering variables...
21 of 21 variables necessary.
0 of 21 mutex groups necessary.
5180 of 5180 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.050s CPU, 0.042s wall-clock]
Translator variables: 21
Translator derived variables: 0
Translator facts: 230
Translator goal facts: 4
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 5180
Translator axioms: 0
Translator task size: 43997
Translator peak memory: 0 KB
Writing output... [0.070s CPU, 0.065s wall-clock]
Done! [5.430s CPU, 5.471s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /home/bo198214/workspace/slide_puzzle_gen/khunpan01-100-gen.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/bo198214/workspace/planner/downward/builds/release/bin/downward --if-unit-cost --evaluator 'hlm=lmcount(lm_reasonable_orders_hps(lm_rhw()),pref=true)' --evaluator 'hff=ff()' --search 'iterated([lazy_greedy([hff,hlm],preferred=[hff,hlm]),lazy_wastar([hff,hlm],preferred=[hff,hlm],w=5),lazy_wastar([hff,hlm],preferred=[hff,hlm],w=3),lazy_wastar([hff,hlm],preferred=[hff,hlm],w=2),lazy_wastar([hff,hlm],preferred=[hff,hlm],w=1)],repeat_last=true,continue_on_fail=true)' --if-non-unit-cost --evaluator 'hlm1=lmcount(lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=true)' --evaluator 'hff1=ff(transform=adapt_costs(one))' --evaluator 'hlm2=lmcount(lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(plusone),pref=true)' --evaluator 'hff2=ff(transform=adapt_costs(plusone))' --search 'iterated([lazy_greedy([hff1,hlm1],preferred=[hff1,hlm1],cost_type=one,reopen_closed=false),lazy_greedy([hff2,hlm2],preferred=[hff2,hlm2],reopen_closed=false),lazy_wastar([hff2,hlm2],preferred=[hff2,hlm2],w=5),lazy_wastar([hff2,hlm2],preferred=[hff2,hlm2],w=3),lazy_wastar([hff2,hlm2],preferred=[hff2,hlm2],w=2),lazy_wastar([hff2,hlm2],preferred=[hff2,hlm2],w=1)],repeat_last=true,continue_on_fail=true)' --always --internal-plan-file /home/bo198214/workspace/slide_puzzle_gen/khunpan01-100-gen_downward.txt < /home/bo198214/workspace/slide_puzzle_gen/khunpan01-100-gen.sas
[t=0s, 0 KB] reading input...
[t=0.03125s, 0 KB] done reading input!
[t=0.03125s, 0 KB] Initializing landmark count heuristic...
[t=0.03125s, 0 KB] Generating landmark graph...
[t=0.03125s, 0 KB] Building a landmark graph with reasonable orders.
[t=0.03125s, 0 KB] Initializing Exploration...
[t=0.03125s, 0 KB] Generating landmarks using the RPG/SAS+ approach
Removed 0 reasonable or obedient reasonable orders
[t=0.0625s, 0 KB] Landmarks generation time: 0.03125s
[t=0.0625s, 0 KB] Discovered 12 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0625s, 0 KB] 14 edges
[t=0.0625s, 0 KB] approx. reasonable orders
[t=0.0625s, 0 KB] approx. obedient reasonable orders
[t=0.0625s, 0 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0625s, 0 KB] Landmarks generation time: 0.03125s
[t=0.0625s, 0 KB] Discovered 12 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0625s, 0 KB] 14 edges
[t=0.0625s, 0 KB] Landmark graph generation time: 0.03125s
[t=0.0625s, 0 KB] Landmark graph contains 12 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0625s, 0 KB] Landmark graph contains 14 orderings.
[t=0.0625s, 0 KB] Simplifying 18102 unary operators... done! [18102 unary operators]
[t=0.109375s, 0 KB] time to simplify: 0.046875s
[t=0.109375s, 0 KB] Initializing additive heuristic...
[t=0.109375s, 0 KB] Initializing FF heuristic...
[t=0.109375s, 0 KB] Initializing landmark count heuristic...
[t=0.109375s, 0 KB] Generating landmark graph...
[t=0.109375s, 0 KB] Building a landmark graph with reasonable orders.
[t=0.109375s, 0 KB] Initializing Exploration...
[t=0.125s, 0 KB] Generating landmarks using the RPG/SAS+ approach
Removed 0 reasonable or obedient reasonable orders
[t=0.140625s, 0 KB] Landmarks generation time: 0.03125s
[t=0.140625s, 0 KB] Discovered 12 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.140625s, 0 KB] 14 edges
[t=0.140625s, 0 KB] approx. reasonable orders
[t=0.140625s, 0 KB] approx. obedient reasonable orders
[t=0.140625s, 0 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.140625s, 0 KB] Landmarks generation time: 0.03125s
[t=0.140625s, 0 KB] Discovered 12 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.140625s, 0 KB] 14 edges
[t=0.140625s, 0 KB] Landmark graph generation time: 0.03125s
[t=0.140625s, 0 KB] Landmark graph contains 12 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.140625s, 0 KB] Landmark graph contains 14 orderings.
[t=0.140625s, 0 KB] Simplifying 18102 unary operators... done! [18102 unary operators]
[t=0.1875s, 0 KB] time to simplify: 0.046875s
[t=0.1875s, 0 KB] Initializing additive heuristic...
[t=0.1875s, 0 KB] Initializing FF heuristic...
[t=0.1875s, 0 KB] Building successor generator...done!
[t=0.1875s, 0 KB] peak memory difference for successor generator creation: 0 KB
[t=0.1875s, 0 KB] time for successor generation creation: 0s
[t=0.1875s, 0 KB] Variables: 21
[t=0.1875s, 0 KB] FactPairs: 230
[t=0.1875s, 0 KB] Bytes per state: 12
[t=0.1875s, 0 KB] Building successor generator...done!
[t=0.1875s, 0 KB] peak memory difference for successor generator creation: 0 KB
[t=0.1875s, 0 KB] time for successor generation creation: 0s
[t=0.1875s, 0 KB] Variables: 21
[t=0.1875s, 0 KB] FactPairs: 230
[t=0.1875s, 0 KB] Bytes per state: 12
[t=0.1875s, 0 KB] Starting search: lazy_greedy(list(hff1, hlm1), preferred = list(hff1, hlm1), cost_type = one, reopen_closed = false)
[t=0.1875s, 0 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.1875s, 0 KB] 4 initial landmarks, 4 goal landmarks
[t=0.1875s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = true): 8
[t=0.1875s, 0 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.1875s, 0 KB] g=0, 1 evaluated, 0 expanded
[t=0.1875s, 0 KB] Initial heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = true): 8
[t=0.1875s, 0 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.1875s, 0 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.1875s, 0 KB] g=1, 2 evaluated, 1 expanded
[t=0.1875s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = true): 7
[t=0.1875s, 0 KB] g=2, 4 evaluated, 3 expanded
[t=0.1875s, 0 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.1875s, 0 KB] g=3, 8 evaluated, 7 expanded
[t=0.1875s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = true): 6
[t=0.1875s, 0 KB] g=4, 16 evaluated, 15 expanded
[t=0.21875s, 0 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.21875s, 0 KB] g=5, 121 evaluated, 120 expanded
[t=4.29688s, 0 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=4.29688s, 0 KB] g=18, 13942 evaluated, 13941 expanded
[t=43.4531s, 0 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=43.4531s, 0 KB] g=110, 144833 evaluated, 144832 expanded
[t=93.1719s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = true): 4
[t=93.1719s, 0 KB] g=164, 310081 evaluated, 310080 expanded
[t=93.1875s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = true): 3
[t=93.1875s, 0 KB] g=176, 310138 evaluated, 310137 expanded
[t=93.1875s, 0 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=93.1875s, 0 KB] g=189, 310183 evaluated, 310182 expanded
[t=93.4531s, 0 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=93.4531s, 0 KB] g=195, 311066 evaluated, 311065 expanded
[t=93.4531s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = true): 2
[t=93.4531s, 0 KB] g=196, 311067 evaluated, 311066 expanded
[t=113.516s, 0 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=113.516s, 0 KB] g=223, 413207 evaluated, 413206 expanded
[t=113.516s, 0 KB] Solution found!
[t=113.516s, 0 KB] Actual search time: 113.328s
move-cto1-type_3-n tv3 h1 v1 v2 v3 (1)
move-ctv3-type_2-e th h2 h3 h4 v3 (1)
move-cth-type_1-n to1 h2 v2 v3 (1)
move-cto1-type_1-n to3 h2 v1 v2 (1)
move-cto3-type_3-s tv3 h1 v1 v2 v3 (1)
move-ctv3-type_1-w to1 h1 h2 v3 (1)
move-cto1-type_2-w th h2 h3 h4 v3 (1)
move-cth-type_1-s to3 h2 v1 v2 (1)
move-cto3-type_3-n tv4 h4 v1 v2 v3 (1)
move-ctv4-type_1-e to4 h3 h4 v1 (1)
move-cto4-type_1-e to3 h2 h3 v1 (1)
move-cto3-type_3-e tv3 h1 h2 v1 v2 (1)
move-ctv3-type_1-s to1 h1 v2 v3 (1)
move-dto1-type_1-s to1 h1 v1 v2 (0)
move-cto1-type_2-w th h1 h2 h3 v3 (1)
move-cth-type_1-n to2 h3 v2 v3 (1)
move-cto2-type_1-n to1 h1 v1 v2 (1)
move-cto1-type_1-n to3 h3 v1 v2 (1)
move-cto3-type_1-w to4 h3 h4 v1 (1)
move-cto4-type_3-s tv4 h4 v1 v2 v3 (1)
move-ctv4-type_1-e to2 h3 h4 v3 (1)
move-cto2-type_2-e th h1 h2 h3 v3 (1)
move-cth-type_1-n to1 h1 v2 v3 (1)
move-cto1-type_3-w tv3 h1 h2 v1 v2 (1)
move-ctv3-type_1-w to4 h2 h3 v1 (1)
move-cto4-type_1-s to3 h3 v1 v2 (1)
move-cto3-type_2-s th h2 h3 v2 v3 (1)
move-cth-type_1-e to1 h1 h2 v3 (1)
move-cto1-type_3-n tv3 h1 v1 v2 v3 (1)
move-ctv3-type_1-w to4 h1 h2 v1 (1)
move-cto4-type_1-w to2 h3 h4 v3 (1)
move-cto2-type_3-n tv4 h4 v1 v2 v3 (1)
move-ctv4-type_1-e to3 h3 h4 v1 (1)
move-cto3-type_2-s th h2 h3 v1 v2 (1)
move-cth-type_1-s to1 h2 v2 v3 (1)
move-dto1-type_1-e to1 h2 h3 v2 (0)
move-cto1-type_3-e tv3 h1 h2 v2 v3 (1)
move-ctv3-type_1-n to4 h1 v1 v2 (1)
move-cto4-type_2-w th h1 h2 h3 v1 (1)
move-cth-type_1-n to4 h1 v2 v3 (1)
move-cto4-type_1-w to3 h3 h4 v1 (1)
move-cto3-type_3-s tv4 h4 v1 v2 v3 (1)
move-ctv4-type_1-e to2 h3 h4 v3 (1)
move-cto2-type_1-n to1 h3 v2 v3 (1)
move-cto1-type_1-s to4 h1 v2 v3 (1)
move-cto4-type_1-n to3 h3 v1 v2 (1)
move-cto3-type_2-e th h1 h2 h3 v1 (1)
move-cth-type_1-s to4 h1 v1 v2 (1)
move-cto4-type_3-w tv3 h1 h2 v2 v3 (1)
move-ctv3-type_1-w to1 h2 h3 v3 (1)
move-cto1-type_1-n to3 h3 v2 v3 (1)
move-cto3-type_2-n th h2 h3 v1 v2 (1)
move-cth-type_1-e to4 h1 h2 v1 (1)
move-cto4-type_3-s tv3 h1 v1 v2 v3 (1)
move-ctv3-type_1-w to1 h1 h2 v3 (1)
move-cto1-type_1-w to3 h2 h3 v3 (1)
move-cto3-type_1-e to4 h2 h3 v1 (1)
move-cto4-type_1-w to2 h3 h4 v3 (1)
move-cto2-type_3-n tv4 h4 v1 v2 v3 (1)
move-ctv4-type_1-e to4 h3 h4 v1 (1)
move-cto4-type_2-s th h2 h3 v1 v2 (1)
move-cth-type_1-s to3 h2 v2 v3 (1)
move-dto3-type_1-e to3 h2 h3 v2 (0)
move-cto3-type_1-e to1 h1 h2 v3 (1)
move-cto1-type_3-n tv3 h1 v1 v2 v3 (1)
move-ctv3-type_2-w th h1 h2 h3 v1 (1)
move-cth-type_1-w to4 h3 h4 v1 (1)
move-cto4-type_3-s tv4 h4 v1 v2 v3 (1)
move-ctv4-type_1-e to2 h3 h4 v3 (1)
move-cto2-type_1-e to1 h2 h3 v3 (1)
move-cto1-type_3-e tv3 h1 h2 v2 v3 (1)
move-ctv3-type_3-s tv1 h1 v3 v4 v5 (1)
move-dtv1-type_3-s tv1 h1 v2 v3 v4 (0)
move-ctv1-type_4-w tsq h1 h2 h3 v4 v5 (1)
move-ctsq-type_1-n to1 h3 v3 v4 (1)
move-cto1-type_1-n to3 h3 v2 v3 (1)
move-cto3-type_1-n to1 h3 v4 v5 (1)
move-cto1-type_1-n to4 h3 v1 v2 (1)
move-cto4-type_1-n to3 h3 v3 v4 (1)
move-cto3-type_1-w to2 h3 h4 v3 (1)
move-cto2-type_3-s tv2 h4 v3 v4 v5 (1)
move-ctv2-type_1-e to1 h3 h4 v5 (1)
move-cto1-type_1-s to4 h3 v1 v2 (1)
move-cto4-type_1-s to2 h3 v2 v3 (1)
move-cto2-type_1-s to3 h3 v3 v4 (1)
move-cto3-type_4-e tsq h1 h2 h3 v4 v5 (1)
move-ctsq-type_3-n tv1 h1 v2 v3 v4 (1)
move-dtv1-type_3-n tv1 h1 v3 v4 v5 (0)
move-ctv1-type_3-w tv3 h1 h2 v2 v3 (1)
move-ctv3-type_1-w to3 h2 h3 v3 (1)
move-cto3-type_1-n to2 h3 v2 v3 (1)
move-cto2-type_1-n to4 h3 v1 v2 (1)
move-dto4-type_1-w to4 h2 h3 v2 (0)
move-cto4-type_3-w tv4 h3 h4 v1 v2 (1)
move-ctv4-type_3-s tv2 h4 v2 v3 v4 (1)
move-dtv2-type_3-s tv2 h4 v1 v2 v3 (0)
move-ctv2-type_1-e to2 h3 h4 v3 (1)
move-cto2-type_1-e to3 h2 h3 v3 (1)
move-cto3-type_1-n to4 h2 v2 v3 (1)
move-cto4-type_1-n to2 h4 v3 v4 (1)
move-cto2-type_1-e to3 h3 h4 v3 (1)
move-cto3-type_3-n tv4 h3 v1 v2 v3 (1)
move-ctv4-type_2-e th h1 h2 h3 v1 (1)
move-cth-type_3-s tv3 h1 v1 v2 v3 (1)
move-ctv3-type_1-w to4 h1 h2 v3 (1)
move-cto4-type_3-w tv4 h2 h3 v2 v3 (1)
move-ctv4-type_1-w to3 h3 h4 v3 (1)
move-cto3-type_3-n tv2 h4 v1 v2 v3 (1)
move-ctv2-type_2-e th h2 h3 h4 v1 (1)
move-cth-type_3-s tv4 h2 v1 v2 v3 (1)
move-ctv4-type_1-e to4 h1 h2 v3 (1)
move-cto4-type_1-s to3 h3 v2 v3 (1)
move-cto3-type_1-e to4 h2 h3 v3 (1)
move-cto4-type_3-n tv3 h1 v1 v2 v3 (1)
move-ctv3-type_3-n tv4 h2 v1 v2 v3 (1)
move-ctv4-type_2-w th h2 h3 h4 v1 (1)
move-dth-type_2-w th h1 h2 h3 v1 (0)
move-cth-type_1-s to3 h3 v1 v2 (1)
move-cto3-type_1-s to4 h3 v2 v3 (1)
move-cto4-type_1-e to3 h3 h4 v1 (1)
move-cto3-type_1-s to4 h3 v1 v2 (1)
move-cto4-type_3-e tv4 h2 h3 v2 v3 (1)
move-ctv4-type_3-e tv3 h1 h2 v2 v3 (1)
move-ctv3-type_3-s tv1 h1 v3 v4 v5 (1)
move-dtv1-type_3-s tv1 h1 v2 v3 v4 (0)
move-ctv1-type_4-w tsq h1 h2 h3 v4 v5 (1)
move-ctsq-type_3-n tv4 h3 v2 v3 v4 (1)
move-dtv4-type_3-n tv4 h3 v3 v4 v5 (0)
move-ctv4-type_1-n to4 h3 v1 v2 (1)
move-dto4-type_1-n to4 h3 v2 v3 (0)
move-cto4-type_1-w to3 h3 h4 v1 (1)
move-dto3-type_1-n to3 h3 v1 v2 (0)
move-cto3-type_3-s tv2 h4 v1 v2 v3 (1)
move-ctv2-type_1-e to4 h3 h4 v3 (1)
move-cto4-type_3-s tv4 h3 v3 v4 v5 (1)
move-ctv4-type_1-s to3 h3 v1 v2 (1)
move-cto3-type_1-w to1 h3 h4 v5 (1)
move-cto1-type_1-n to2 h4 v4 v5 (1)
move-cto2-type_1-n to4 h4 v3 v4 (1)
move-cto4-type_3-n tv2 h4 v1 v2 v3 (1)
move-ctv2-type_1-e to3 h3 h4 v1 (1)
move-cto3-type_3-s tv4 h3 v2 v3 v4 (1)
move-ctv4-type_1-s to1 h3 v4 v5 (1)
move-cto1-type_3-s tv4 h3 v1 v2 v3 (1)
move-ctv4-type_1-s to1 h3 v3 v4 (1)
move-cto1-type_4-e tsq h1 h2 h3 v4 v5 (1)
move-ctsq-type_3-n tv1 h1 v2 v3 v4 (1)
move-dtv1-type_3-n tv1 h1 v3 v4 v5 (0)
move-ctv1-type_3-w tv3 h1 h2 v2 v3 (1)
move-ctv3-type_1-w to1 h2 h3 v3 (1)
move-dto1-type_1-s to1 h2 v2 v3 (0)
move-cto1-type_4-s tsq h2 h3 v3 v4 v5 (1)
move-ctsq-type_1-w to2 h3 h4 v5 (1)
move-cto2-type_1-n to4 h4 v4 v5 (1)
move-cto4-type_3-n tv2 h4 v2 v3 v4 (1)
move-ctv2-type_1-w to2 h2 h3 v5 (1)
move-cto2-type_1-w to4 h3 h4 v5 (1)
move-cto4-type_3-n tv2 h4 v3 v4 v5 (1)
move-ctv2-type_1-n to3 h4 v1 v2 (1)
move-dto3-type_1-n to3 h4 v2 v3 (0)
move-cto3-type_3-e tv4 h3 h4 v1 v2 (1)
move-ctv4-type_1-e to1 h2 h3 v2 (1)
move-dto1-type_1-s to1 h3 v1 v2 (0)
move-cto1-type_4-s tsq h2 h3 v2 v3 v4 (1)
move-ctsq-type_1-s to2 h2 v4 v5 (1)
move-dto2-type_1-e to2 h2 h3 v4 (0)
move-cto2-type_3-e tv1 h1 h2 v4 v5 (1)
move-ctv1-type_3-n tv3 h1 v2 v3 v4 (1)
move-dtv3-type_3-n tv3 h1 v3 v4 v5 (0)
move-ctv3-type_4-w tsq h1 h2 h3 v2 v3 (1)
move-ctsq-type_1-n to1 h3 v1 v2 (1)
move-cto1-type_1-w to3 h3 h4 v3 (1)
move-cto3-type_3-n tv4 h4 v1 v2 v3 (1)
move-ctv4-type_2-e th h1 h2 h3 v1 (1)
move-dth-type_2-e th h2 h3 h4 v1 (0)
move-cth-type_4-s tsq h1 h2 v1 v2 v3 (1)
move-ctsq-type_1-w to3 h2 h3 v3 (1)
move-cto3-type_1-s to2 h3 v3 v4 (1)
move-cto2-type_1-s to4 h3 v4 v5 (1)
move-cto4-type_1-w to3 h1 h2 v3 (1)
move-cto3-type_1-w to2 h2 h3 v3 (1)
move-cto2-type_1-s to4 h3 v3 v4 (1)
move-cto4-type_3-e tv1 h2 h3 v4 v5 (1)
move-ctv1-type_3-e tv3 h1 h2 v4 v5 (1)
move-ctv3-type_1-n to3 h1 v3 v4 (1)
move-cto3-type_1-w to2 h1 h2 v3 (1)
move-cto2-type_3-s tv3 h2 v3 v4 v5 (1)
move-ctv3-type_1-n to3 h1 v4 v5 (1)
move-cto3-type_1-n to2 h1 v3 v4 (1)
move-cto2-type_3-n tv3 h2 v3 v4 v5 (1)
move-ctv3-type_4-n tsq h1 h2 v1 v2 v3 (1)
move-ctsq-type_2-w th h2 h3 h4 v1 (1)
move-dth-type_2-w th h1 h2 h3 v1 (0)
move-cth-type_1-s to1 h3 v1 v2 (1)
move-cto1-type_1-s to4 h3 v2 v3 (1)
move-cto4-type_1-e to1 h3 h4 v1 (1)
move-cto1-type_1-s to4 h3 v1 v2 (1)
move-cto4-type_4-e tsq h1 h2 h3 v2 v3 (1)
move-ctsq-type_1-s to2 h1 v3 v4 (1)
move-cto2-type_1-s to3 h1 v4 v5 (1)
move-cto3-type_1-s to2 h1 v2 v3 (1)
move-cto2-type_1-s to3 h1 v3 v4 (1)
move-cto3-type_3-w tv3 h1 h2 v4 v5 (1)
move-ctv3-type_3-w tv1 h2 h3 v4 v5 (1)
move-ctv1-type_3-w tv2 h3 h4 v4 v5 (1)
move-ctv2-type_3-n tv4 h4 v2 v3 v4 (1)
move-dtv4-type_3-n tv4 h4 v3 v4 v5 (0)
move-ctv4-type_4-e tsq h2 h3 h4 v2 v3 (1)
move-ctsq-type_1-e to2 h1 h2 v2 (1)
move-dto2-type_1-n to2 h2 v2 v3 (0)
move-cto2-type_2-n th h1 h2 v1 v2 (1)
move-cth-type_1-w to4 h2 h3 v1 (1)
move-cto4-type_1-w to1 h3 h4 v1 (1)
move-cto1-type_1-w to4 h1 h2 v1 (1)
move-cto4-type_1-w to1 h2 h3 v1 (1)
move-cto1-type_4-s tsq h3 h4 v1 v2 v3 (1)
move-ctsq-type_1-e to2 h2 h3 v3 (1)
move-cto2-type_1-e to3 h1 h2 v3 (1)
move-cto3-type_1-e to2 h3 h4 v3 (1)
move-cto2-type_1-e to3 h2 h3 v3 (1)
move-cto3-type_2-n th h1 h2 v2 v3 (1)
move-cth-type_1-n to4 h1 v1 v2 (1)
move-cto4-type_1-w to1 h1 h2 v1 (1)
move-cto1-type_4-w tsq h2 h3 h4 v1 v2 (1)
[t=113.516s, 0 KB] Plan length: 224 step(s).
[t=113.516s, 0 KB] Plan cost: 202
[t=113.516s, 0 KB] Expanded 413207 state(s).
[t=113.516s, 0 KB] Reopened 0 state(s).
[t=113.516s, 0 KB] Evaluated 413208 state(s).
[t=113.516s, 0 KB] Evaluations: 826416
[t=113.516s, 0 KB] Generated 1486573 state(s).
[t=113.516s, 0 KB] Dead ends: 0 state(s).
[t=113.516s, 0 KB] Number of registered states: 413208
[t=113.516s, 0 KB] Int hash set load factor: 413208/524288 = 0.788132
[t=113.516s, 0 KB] Int hash set resizes: 19
[t=113.516s, 0 KB] Best solution cost so far: 202
[t=113.516s, 0 KB] Solution found - keep searching
[t=113.531s, 0 KB] Building successor generator...done!
[t=113.531s, 0 KB] peak memory difference for successor generator creation: 0 KB
[t=113.531s, 0 KB] time for successor generation creation: 0s
[t=113.531s, 0 KB] Variables: 21
[t=113.531s, 0 KB] FactPairs: 230
[t=113.531s, 0 KB] Bytes per state: 12
[t=113.531s, 0 KB] Starting search: lazy_greedy(list(hff2, hlm2), preferred = list(hff2, hlm2), reopen_closed = false)
[t=113.531s, 0 KB] Conducting lazy best first search, (real) bound = 202
[t=113.531s, 0 KB] 4 initial landmarks, 4 goal landmarks
[t=113.531s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 11
[t=113.531s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 21
[t=113.531s, 0 KB] g=0, 1 evaluated, 0 expanded
[t=113.531s, 0 KB] Initial heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 11
[t=113.531s, 0 KB] Initial heuristic value for ff(transform = adapt_costs(plusone)): 21
[t=113.531s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 19
[t=113.531s, 0 KB] g=1, 2 evaluated, 1 expanded
[t=113.531s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 9
[t=113.531s, 0 KB] g=2, 4 evaluated, 3 expanded
[t=113.531s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 18
[t=113.531s, 0 KB] g=2, 6 evaluated, 5 expanded
[t=113.531s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 15
[t=113.531s, 0 KB] g=3, 9 evaluated, 8 expanded
[t=113.531s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 14
[t=113.531s, 0 KB] g=4, 10 evaluated, 9 expanded
[t=113.531s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 8
[t=113.531s, 0 KB] g=5, 14 evaluated, 13 expanded
[t=113.531s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 7
[t=113.531s, 0 KB] g=6, 20 evaluated, 19 expanded
[t=113.594s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 12
[t=113.594s, 0 KB] g=9, 242 evaluated, 241 expanded
[t=113.594s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 11
[t=113.594s, 0 KB] g=10, 243 evaluated, 242 expanded
[t=113.609s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 9
[t=113.609s, 0 KB] g=12, 259 evaluated, 258 expanded
[t=154.547s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 8
[t=154.547s, 0 KB] g=72, 139930 evaluated, 139929 expanded
[t=154.547s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 7
[t=154.547s, 0 KB] g=73, 139931 evaluated, 139930 expanded
[t=195.672s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 6
[t=195.672s, 0 KB] g=95, 279213 evaluated, 279212 expanded
[t=195.812s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 5
[t=195.812s, 0 KB] g=100, 279812 evaluated, 279811 expanded
[t=195.828s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 4
[t=195.828s, 0 KB] g=100, 279844 evaluated, 279843 expanded
[t=195.828s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 6
[t=195.828s, 0 KB] g=101, 279845 evaluated, 279844 expanded
[t=196.828s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 5
[t=196.828s, 0 KB] g=112, 284261 evaluated, 284260 expanded
[t=196.984s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 4
[t=196.984s, 0 KB] g=116, 284991 evaluated, 284990 expanded
[t=196.984s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 2
[t=196.984s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 3
[t=196.984s, 0 KB] g=117, 284992 evaluated, 284991 expanded
[t=304.766s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 2
[t=304.766s, 0 KB] g=158, 822359 evaluated, 822358 expanded
[t=304.766s, 0 KB] Solution found!
[t=304.766s, 0 KB] Actual search time: 191.234s
move-cto1-type_3-n tv3 h1 v1 v2 v3 (1)
move-ctv3-type_1-w to3 h1 h2 v1 (1)
move-cto3-type_1-w to4 h2 h3 v1 (1)
move-cto4-type_2-e th h2 h3 h4 v3 (1)
move-cth-type_1-s to2 h3 v1 v2 (1)
move-cto2-type_1-e to1 h2 h3 v2 (1)
move-cto1-type_2-w th h2 h3 h4 v3 (1)
move-cth-type_3-n tv4 h4 v1 v2 v3 (1)
move-ctv4-type_1-e to2 h3 h4 v1 (1)
move-cto2-type_1-e to4 h2 h3 v1 (1)
move-cto4-type_1-w to1 h2 h3 v2 (1)
move-cto1-type_1-e to3 h1 h2 v1 (1)
move-cto3-type_3-s tv3 h1 v1 v2 v3 (1)
move-ctv3-type_2-w th h1 h2 h3 v3 (1)
move-cth-type_3-w tv4 h3 h4 v2 v3 (1)
move-ctv4-type_1-n to2 h4 v1 v2 (1)
move-cto2-type_1-e to4 h3 h4 v1 (1)
move-cto4-type_3-s tv4 h3 v1 v2 v3 (1)
move-ctv4-type_2-e th h1 h2 h3 v3 (1)
move-dth-type_2-e th h2 h3 h4 v3 (0)
move-cth-type_3-n tv3 h1 v1 v2 v3 (1)
move-ctv3-type_1-n to1 h2 v2 v3 (1)
move-cto1-type_1-n to3 h2 v1 v2 (1)
move-cto3-type_3-s tv3 h1 v1 v2 v3 (1)
move-ctv3-type_1-w to1 h1 h2 v3 (1)
move-cto1-type_2-w th h2 h3 h4 v3 (1)
move-dth-type_2-e th h2 h3 h4 v3 (0)
move-cth-type_1-n to3 h2 v2 v3 (1)
move-cto3-type_3-w tv4 h2 h3 v1 v2 (1)
move-ctv4-type_1-w to2 h3 h4 v2 (1)
move-dto2-type_1-s to2 h3 v1 v2 (0)
move-cto2-type_2-s th h3 h4 v2 v3 (1)
move-cth-type_1-e to3 h2 h3 v3 (1)
move-cto3-type_3-n tv4 h2 v1 v2 v3 (1)
move-ctv4-type_1-e to3 h3 h4 v3 (1)
move-cto3-type_3-s tv4 h2 v1 v2 v3 (1)
move-ctv4-type_4-s tsq h2 h3 v3 v4 v5 (1)
move-dtsq-type_4-n tsq h2 h3 v3 v4 v5 (0)
move-ctsq-type_1-e to1 h1 h2 v3 (1)
move-dto1-type_1-e to1 h2 h3 v3 (0)
move-cto1-type_3-n tv4 h2 v1 v2 v3 (1)
move-ctv4-type_3-n tv3 h1 v1 v2 v3 (1)
move-ctv3-type_1-w to2 h2 h3 v1 (1)
move-cto2-type_1-w to4 h3 h4 v1 (1)
move-cto4-type_1-w to2 h1 h2 v1 (1)
move-cto2-type_3-s tv4 h2 v1 v2 v3 (1)
move-dtv4-type_3-n tv4 h2 v1 v2 v3 (0)
move-ctv4-type_1-w to4 h2 h3 v1 (1)
move-cto4-type_2-s th h3 h4 v1 v2 (1)
move-cth-type_1-s to3 h4 v2 v3 (1)
move-cto3-type_3-s tv2 h4 v3 v4 v5 (1)
move-ctv2-type_1-w to3 h3 h4 v2 (1)
move-cto3-type_3-s tv2 h4 v2 v3 v4 (1)
move-ctv2-type_4-e tsq h2 h3 h4 v4 v5 (1)
move-ctsq-type_3-n tv4 h2 v2 v3 v4 (1)
move-ctv4-type_1-n to4 h2 v1 v2 (1)
move-cto4-type_3-n tv4 h2 v3 v4 v5 (1)
move-ctv4-type_1-n to4 h2 v2 v3 (1)
move-cto4-type_1-w to3 h2 h3 v2 (1)
move-cto3-type_1-e to2 h1 h2 v1 (1)
move-cto2-type_3-s tv3 h1 v1 v2 v3 (1)
move-ctv3-type_1-w to4 h1 h2 v3 (1)
move-cto4-type_1-n to3 h2 v2 v3 (1)
move-cto3-type_1-n to2 h2 v1 v2 (1)
move-cto2-type_2-w th h2 h3 h4 v1 (1)
move-cth-type_3-s tv2 h4 v1 v2 v3 (1)
move-ctv2-type_1-e to1 h3 h4 v3 (1)
move-cto1-type_1-e to3 h2 h3 v3 (1)
move-cto3-type_1-e to2 h2 h3 v2 (1)
move-cto2-type_3-s tv4 h2 v3 v4 v5 (1)
move-dtv4-type_3-s tv4 h2 v2 v3 v4 (0)
move-ctv4-type_4-w tsq h2 h3 h4 v4 v5 (1)
move-ctsq-type_1-n to1 h4 v3 v4 (1)
move-cto1-type_1-e to3 h3 h4 v3 (1)
move-cto3-type_1-n to2 h3 v2 v3 (1)
move-cto2-type_1-n to1 h4 v4 v5 (1)
move-cto1-type_1-n to3 h4 v3 v4 (1)
move-cto3-type_1-e to2 h3 h4 v3 (1)
move-cto2-type_3-e tv4 h2 h3 v2 v3 (1)
move-ctv4-type_1-e to4 h1 h2 v3 (1)
move-cto4-type_3-n tv3 h1 v1 v2 v3 (1)
move-ctv3-type_2-w th h1 h2 h3 v1 (1)
move-cth-type_1-s to4 h2 v2 v3 (1)
move-cto4-type_3-s tv4 h3 v1 v2 v3 (1)
move-ctv4-type_4-s tsq h2 h3 v3 v4 v5 (1)
move-ctsq-type_1-w to1 h3 h4 v5 (1)
move-cto1-type_1-n to3 h4 v4 v5 (1)
move-cto3-type_1-w to1 h2 h3 v5 (1)
move-cto1-type_1-n to2 h4 v3 v4 (1)
move-cto2-type_3-n tv2 h4 v1 v2 v3 (1)
move-ctv2-type_1-e to1 h2 h3 v5 (1)
move-cto1-type_3-s tv2 h4 v1 v2 v3 (1)
move-dtv2-type_3-n tv2 h4 v1 v2 v3 (0)
move-ctv2-type_1-w to1 h2 h3 v5 (1)
move-cto1-type_1-w to3 h3 h4 v5 (1)
move-cto3-type_1-n to2 h4 v4 v5 (1)
move-cto2-type_3-n tv2 h4 v2 v3 v4 (1)
move-ctv2-type_3-e tv4 h3 h4 v1 v2 (1)
move-ctv4-type_2-e th h1 h2 h3 v1 (1)
move-cth-type_1-e to4 h2 h3 v2 (1)
move-cto4-type_2-w th h1 h2 h3 v1 (1)
move-cth-type_1-s to4 h3 v1 v2 (1)
move-cto4-type_4-s tsq h2 h3 v2 v3 v4 (1)
move-ctsq-type_1-s to1 h2 v4 v5 (1)
move-dto1-type_1-e to1 h2 h3 v4 (0)
move-cto1-type_3-e tv1 h1 h2 v4 v5 (1)
move-ctv1-type_3-n tv3 h1 v2 v3 v4 (1)
move-dtv3-type_3-n tv3 h1 v3 v4 v5 (0)
move-ctv3-type_4-w tsq h1 h2 h3 v2 v3 (1)
move-ctsq-type_1-n to4 h3 v1 v2 (1)
move-cto4-type_1-s to1 h3 v3 v4 (1)
move-cto1-type_1-s to3 h3 v4 v5 (1)
move-cto3-type_1-w to2 h3 h4 v5 (1)
move-cto2-type_3-n tv2 h4 v3 v4 v5 (1)
move-ctv2-type_3-n tv4 h4 v1 v2 v3 (1)
move-ctv4-type_2-e th h1 h2 h3 v1 (1)
move-dth-type_2-e th h2 h3 h4 v1 (0)
move-cth-type_4-s tsq h1 h2 v1 v2 v3 (1)
move-ctsq-type_1-w to1 h2 h3 v3 (1)
move-cto1-type_1-s to3 h3 v3 v4 (1)
move-cto3-type_1-s to2 h3 v4 v5 (1)
move-cto2-type_1-w to1 h1 h2 v3 (1)
move-cto1-type_1-w to3 h2 h3 v3 (1)
move-cto3-type_1-s to2 h3 v3 v4 (1)
move-cto2-type_3-e tv1 h2 h3 v4 v5 (1)
move-ctv1-type_3-e tv3 h1 h2 v4 v5 (1)
move-ctv3-type_1-n to1 h1 v3 v4 (1)
move-cto1-type_1-w to3 h1 h2 v3 (1)
move-cto3-type_1-w to2 h2 h3 v3 (1)
move-cto2-type_1-n to4 h3 v2 v3 (1)
move-cto4-type_1-n to1 h1 v4 v5 (1)
move-cto1-type_1-s to4 h3 v2 v3 (1)
move-cto4-type_1-n to3 h1 v3 v4 (1)
move-cto3-type_1-e to2 h2 h3 v3 (1)
move-cto2-type_4-n tsq h1 h2 v1 v2 v3 (1)
move-ctsq-type_2-w th h2 h3 h4 v1 (1)
move-dth-type_2-w th h1 h2 h3 v1 (0)
move-cth-type_1-s to4 h3 v1 v2 (1)
move-dto4-type_1-e to4 h3 h4 v1 (0)
move-cto4-type_1-s to2 h3 v2 v3 (1)
move-dto2-type_1-s to2 h3 v1 v2 (0)
move-cto2-type_4-e tsq h1 h2 h3 v2 v3 (1)
move-ctsq-type_1-s to3 h1 v3 v4 (1)
move-dto3-type_1-s to3 h1 v2 v3 (0)
move-cto3-type_1-s to1 h1 v4 v5 (1)
move-dto1-type_1-s to1 h1 v3 v4 (0)
move-cto1-type_3-w tv3 h1 h2 v4 v5 (1)
move-ctv3-type_3-w tv1 h2 h3 v4 v5 (1)
move-ctv1-type_3-w tv2 h3 h4 v4 v5 (1)
move-ctv2-type_3-n tv4 h4 v2 v3 v4 (1)
move-ctv4-type_1-n to4 h4 v1 v2 (1)
move-cto4-type_1-e to2 h3 h4 v1 (1)
move-cto2-type_3-n tv4 h4 v3 v4 v5 (1)
move-ctv4-type_1-n to4 h4 v2 v3 (1)
move-cto4-type_2-e th h1 h2 h3 v1 (1)
move-cth-type_1-n to2 h4 v1 v2 (1)
move-cto2-type_2-w th h1 h2 h3 v1 (1)
move-dth-type_2-e th h1 h2 h3 v1 (0)
move-cth-type_1-s to3 h1 v1 v2 (1)
move-cto3-type_2-e th h2 h3 h4 v1 (1)
move-cth-type_1-s to1 h1 v2 v3 (1)
move-cto1-type_1-e to3 h1 h2 v1 (1)
move-cto3-type_1-s to1 h1 v1 v2 (1)
move-cto1-type_4-w tsq h1 h2 h3 v2 v3 (1)
move-ctsq-type_1-w to2 h3 h4 v2 (1)
move-dto2-type_1-n to2 h3 v2 v3 (0)
move-cto2-type_2-n th h3 h4 v1 v2 (1)
move-cth-type_1-e to3 h2 h3 v1 (1)
move-dto3-type_1-e to3 h3 h4 v1 (0)
move-cto3-type_1-e to1 h1 h2 v1 (1)
move-dto1-type_1-e to1 h2 h3 v1 (0)
move-cto1-type_4-s tsq h1 h2 v1 v2 v3 (1)
move-ctsq-type_1-w to2 h2 h3 v3 (1)
move-cto2-type_1-w to4 h3 h4 v3 (1)
move-cto4-type_1-w to2 h1 h2 v3 (1)
move-cto2-type_1-w to4 h2 h3 v3 (1)
move-cto4-type_2-n th h3 h4 v2 v3 (1)
move-cth-type_1-n to1 h3 v1 v2 (1)
move-dto1-type_1-e to1 h3 h4 v2 (0)
move-cto1-type_4-e tsq h1 h2 h3 v1 v2 (1)
[t=304.766s, 0 KB] Plan length: 180 step(s).
[t=304.766s, 0 KB] Plan cost: 159
[t=304.766s, 0 KB] Expanded 822359 state(s).
[t=304.766s, 0 KB] Reopened 0 state(s).
[t=304.766s, 0 KB] Evaluated 822360 state(s).
[t=304.766s, 0 KB] Evaluations: 1644720
[t=304.766s, 0 KB] Generated 2993645 state(s).
[t=304.766s, 0 KB] Dead ends: 0 state(s).
[t=304.766s, 0 KB] Number of registered states: 822360
[t=304.766s, 0 KB] Int hash set load factor: 822360/1048576 = 0.784264
[t=304.766s, 0 KB] Int hash set resizes: 20
[t=304.766s, 0 KB] Best solution cost so far: 159
[t=304.766s, 0 KB] Solution found - keep searching
[t=304.781s, 0 KB] Building successor generator...done!
[t=304.781s, 0 KB] peak memory difference for successor generator creation: 0 KB
[t=304.781s, 0 KB] time for successor generation creation: 0s
[t=304.781s, 0 KB] Variables: 21
[t=304.781s, 0 KB] FactPairs: 230
[t=304.781s, 0 KB] Bytes per state: 12
[t=304.781s, 0 KB] Starting search: lazy_wastar(list(hff2, hlm2), preferred = list(hff2, hlm2), w = 5)
[t=304.781s, 0 KB] Conducting lazy best first search, (real) bound = 159
[t=304.781s, 0 KB] 4 initial landmarks, 4 goal landmarks
[t=304.781s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 11
[t=304.781s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 21
[t=304.781s, 0 KB] g=0, 1 evaluated, 0 expanded
[t=304.781s, 0 KB] Initial heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 11
[t=304.781s, 0 KB] Initial heuristic value for ff(transform = adapt_costs(plusone)): 21
[t=304.781s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 19
[t=304.781s, 0 KB] g=1, 2 evaluated, 1 expanded
[t=304.781s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 9
[t=304.781s, 0 KB] g=2, 4 evaluated, 3 expanded
[t=304.781s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 18
[t=304.781s, 0 KB] g=2, 6 evaluated, 5 expanded
[t=304.781s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 15
[t=304.781s, 0 KB] g=3, 9 evaluated, 8 expanded
[t=304.781s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 14
[t=304.781s, 0 KB] g=4, 10 evaluated, 9 expanded
[t=304.797s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 8
[t=304.797s, 0 KB] g=5, 14 evaluated, 13 expanded
[t=304.797s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 7
[t=304.797s, 0 KB] g=6, 20 evaluated, 19 expanded
[t=304.906s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 12
[t=304.906s, 0 KB] g=6, 492 evaluated, 491 expanded, 117 reopened
[t=304.906s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 11
[t=304.906s, 0 KB] g=7, 493 evaluated, 492 expanded, 117 reopened
[t=304.906s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 9
[t=304.906s, 0 KB] g=9, 502 evaluated, 501 expanded, 117 reopened
[t=367.531s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 8
[t=367.531s, 0 KB] g=53, 345015 evaluated, 345014 expanded, 143818 reopened
[t=367.531s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 7
[t=367.531s, 0 KB] g=54, 345016 evaluated, 345015 expanded, 143818 reopened
[t=993.938s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 6
[t=993.938s, 0 KB] g=50, 4026348 evaluated, 4026347 expanded, 1808717 reopened
[t=994.031s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 4
[t=994.031s, 0 KB] g=55, 4026842 evaluated, 4026841 expanded, 1808913 reopened
[t=994.031s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 6
[t=994.031s, 0 KB] g=56, 4026843 evaluated, 4026842 expanded, 1808913 reopened
[t=994.453s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 5
[t=994.453s, 0 KB] g=66, 4029620 evaluated, 4029619 expanded, 1810057 reopened
[t=994.734s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 3
[t=994.734s, 0 KB] g=70, 4031045 evaluated, 4031044 expanded, 1810439 reopened
[t=994.875s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 4
[t=994.875s, 0 KB] g=70, 4031676 evaluated, 4031675 expanded, 1810584 reopened
[t=994.875s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 2
[t=994.875s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 3
[t=994.875s, 0 KB] g=71, 4031677 evaluated, 4031676 expanded, 1810584 reopened
[t=3131.67s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 2
[t=3131.67s, 0 KB] g=88, 18911971 evaluated, 18911970 expanded, 9602848 reopened
[t=3131.67s, 0 KB] Solution found!
[t=3131.67s, 0 KB] Actual search time: 2826.89s
move-cto1-type_2-e th h2 h3 h4 v3 (1)
move-cth-type_1-n to1 h2 v2 v3 (1)
move-dto1-type_1-w to1 h1 h2 v3 (0)
move-cto1-type_1-n to3 h2 v1 v2 (1)
move-dto3-type_1-n to3 h2 v2 v3 (0)
move-cto3-type_3-e tv3 h1 h2 v1 v2 (1)
move-ctv3-type_1-s to1 h1 v2 v3 (1)
move-dto1-type_1-s to1 h1 v1 v2 (0)
move-cto1-type_1-w to3 h1 h2 v3 (1)
move-dto3-type_1-s to3 h1 v2 v3 (0)
move-cto3-type_2-w th h2 h3 h4 v3 (1)
move-dth-type_2-w th h1 h2 h3 v3 (0)
move-cth-type_1-n to2 h3 v2 v3 (1)
move-dto2-type_1-e to2 h3 h4 v3 (0)
move-cto2-type_1-n to4 h3 v1 v2 (1)
move-dto4-type_1-n to4 h3 v2 v3 (0)
move-cto4-type_3-e tv3 h2 h3 v1 v2 (1)
move-ctv3-type_1-e to3 h1 h2 v2 (1)
move-dto3-type_1-s to3 h2 v1 v2 (0)
move-cto3-type_2-s th h1 h2 v2 v3 (1)
move-cth-type_1-w to4 h2 h3 v3 (1)
move-dto4-type_1-w to4 h1 h2 v3 (0)
move-cto4-type_1-w to2 h3 h4 v3 (1)
move-dto2-type_1-w to2 h2 h3 v3 (0)
move-cto2-type_3-n tv3 h3 v1 v2 v3 (1)
move-ctv3-type_3-n tv4 h4 v1 v2 v3 (1)
move-ctv4-type_1-e to3 h2 h3 v1 (1)
move-dto3-type_1-e to3 h3 h4 v1 (0)
move-cto3-type_1-e to1 h1 h2 v1 (1)
move-dto1-type_1-e to1 h2 h3 v1 (0)
move-cto1-type_2-s th h1 h2 v1 v2 (1)
move-cth-type_1-s to2 h2 v2 v3 (1)
move-dto2-type_1-w to2 h1 h2 v2 (0)
move-cto2-type_3-w tv3 h2 h3 v2 v3 (1)
move-ctv3-type_3-w tv4 h3 h4 v2 v3 (1)
move-ctv4-type_3-s tv2 h4 v3 v4 v5 (1)
move-dtv2-type_3-s tv2 h4 v2 v3 v4 (0)
move-ctv2-type_4-e tsq h2 h3 h4 v4 v5 (1)
move-ctsq-type_3-e tv1 h1 h2 v4 v5 (1)
move-ctv1-type_1-n to4 h1 v3 v4 (1)
move-dto4-type_1-n to4 h1 v4 v5 (0)
move-cto4-type_1-n to2 h1 v2 v3 (1)
move-dto2-type_1-n to2 h1 v3 v4 (0)
move-cto2-type_3-w tv3 h1 h2 v2 v3 (1)
move-ctv3-type_3-s tv1 h2 v3 v4 v5 (1)
move-dtv1-type_3-s tv1 h2 v2 v3 v4 (0)
move-ctv1-type_4-w tsq h2 h3 h4 v4 v5 (1)
move-ctsq-type_3-n tv2 h4 v2 v3 v4 (1)
move-dtv2-type_3-n tv2 h4 v3 v4 v5 (0)
move-ctv2-type_3-e tv4 h3 h4 v2 v3 (1)
move-ctv4-type_1-n to1 h3 v1 v2 (1)
move-dto1-type_1-n to1 h3 v2 v3 (0)
move-cto1-type_1-w to3 h3 h4 v1 (1)
move-dto3-type_1-n to3 h3 v1 v2 (0)
move-cto3-type_2-e th h1 h2 h3 v1 (1)
move-dth-type_2-e th h2 h3 h4 v1 (0)
move-cth-type_3-s tv3 h1 v1 v2 v3 (1)
move-ctv3-type_3-s tv1 h2 v1 v2 v3 (1)
move-ctv1-type_1-w to1 h2 h3 v3 (1)
move-dto1-type_1-w to1 h1 h2 v3 (0)
move-cto1-type_4-s tsq h2 h3 v3 v4 v5 (1)
move-ctsq-type_1-e to4 h1 h2 v5 (1)
move-dto4-type_1-e to4 h2 h3 v5 (0)
move-cto4-type_1-n to2 h1 v4 v5 (1)
move-dto2-type_1-e to2 h1 h2 v5 (0)
move-cto2-type_1-n to1 h1 v3 v4 (1)
move-cto1-type_3-n tv3 h1 v1 v2 v3 (1)
move-ctv3-type_1-n to1 h1 v4 v5 (1)
move-cto1-type_3-n tv3 h1 v2 v3 v4 (1)
move-ctv3-type_3-w tv1 h1 h2 v1 v2 (1)
move-ctv1-type_1-w to3 h2 h3 v2 (1)
move-dto3-type_1-s to3 h2 v1 v2 (0)
move-cto3-type_4-s tsq h2 h3 v2 v3 v4 (1)
move-ctsq-type_1-s to4 h3 v4 v5 (1)
move-dto4-type_1-w to4 h2 h3 v4 (0)
move-cto4-type_3-w tv2 h3 h4 v4 v5 (1)
move-ctv2-type_3-n tv4 h4 v2 v3 v4 (1)
move-dtv4-type_3-n tv4 h4 v3 v4 v5 (0)
move-ctv4-type_4-e tsq h2 h3 h4 v2 v3 (1)
move-ctsq-type_1-s to4 h2 v3 v4 (1)
move-cto4-type_1-n to3 h2 v1 v2 (1)
move-cto3-type_1-s to2 h2 v4 v5 (1)
move-cto2-type_1-e to1 h1 h2 v5 (1)
move-cto1-type_3-n tv3 h1 v3 v4 v5 (1)
move-ctv3-type_3-n tv1 h1 v1 v2 v3 (1)
move-ctv1-type_2-w th h2 h3 h4 v1 (1)
move-dth-type_2-w th h1 h2 h3 v1 (0)
move-cth-type_4-s tsq h3 h4 v1 v2 v3 (1)
move-ctsq-type_1-e to4 h2 h3 v3 (1)
move-dto4-type_1-e to4 h3 h4 v3 (0)
move-cto4-type_1-s to2 h2 v3 v4 (1)
move-dto2-type_1-e to2 h2 h3 v3 (0)
move-cto2-type_1-s to1 h2 v4 v5 (1)
move-dto1-type_1-s to1 h2 v3 v4 (0)
move-cto1-type_3-w tv2 h2 h3 v4 v5 (1)
move-ctv2-type_3-w tv4 h3 h4 v4 v5 (1)
move-ctv4-type_1-n to4 h4 v3 v4 (1)
move-dto4-type_1-n to4 h4 v4 v5 (0)
move-cto4-type_1-e to2 h3 h4 v3 (1)
move-dto2-type_1-n to2 h4 v3 v4 (0)
move-cto2-type_4-n tsq h3 h4 v1 v2 v3 (1)
move-ctsq-type_2-e th h1 h2 h3 v1 (1)
move-dth-type_2-e th h2 h3 h4 v1 (0)
move-cth-type_1-s to3 h2 v1 v2 (1)
move-dto3-type_1-w to3 h1 h2 v1 (0)
move-cto3-type_1-s to1 h2 v2 v3 (1)
move-dto1-type_1-s to1 h2 v1 v2 (0)
move-cto1-type_4-w tsq h2 h3 h4 v2 v3 (1)
move-ctsq-type_1-s to2 h4 v3 v4 (1)
move-dto2-type_1-s to2 h4 v2 v3 (0)
move-cto2-type_1-s to4 h4 v4 v5 (1)
move-dto4-type_1-s to4 h4 v3 v4 (0)
move-cto4-type_3-e tv4 h3 h4 v4 v5 (1)
move-ctv4-type_3-e tv2 h2 h3 v4 v5 (1)
move-ctv2-type_3-e tv3 h1 h2 v4 v5 (1)
move-ctv3-type_3-n tv1 h1 v2 v3 v4 (1)
move-dtv1-type_3-n tv1 h1 v3 v4 v5 (0)
move-ctv1-type_4-w tsq h1 h2 h3 v2 v3 (1)
move-ctsq-type_1-w to2 h3 h4 v2 (1)
move-dto2-type_1-n to2 h3 v2 v3 (0)
move-cto2-type_2-n th h3 h4 v1 v2 (1)
move-cth-type_1-e to1 h2 h3 v1 (1)
move-dto1-type_1-e to1 h3 h4 v1 (0)
move-cto1-type_1-e to3 h1 h2 v1 (1)
move-dto3-type_1-e to3 h2 h3 v1 (0)
move-cto3-type_4-s tsq h1 h2 v1 v2 v3 (1)
move-ctsq-type_1-w to2 h2 h3 v3 (1)
move-dto2-type_1-w to2 h1 h2 v3 (0)
move-cto2-type_1-w to4 h3 h4 v3 (1)
move-dto4-type_1-w to4 h2 h3 v3 (0)
move-cto4-type_2-n th h3 h4 v2 v3 (1)
move-cth-type_1-n to3 h3 v1 v2 (1)
move-dto3-type_1-e to3 h3 h4 v2 (0)
move-cto3-type_4-e tsq h1 h2 h3 v1 v2 (1)
[t=3131.67s, 0 KB] Plan length: 134 step(s).
[t=3131.67s, 0 KB] Plan cost: 89
[t=3131.67s, 0 KB] Expanded 18911971 state(s).
[t=3131.69s, 0 KB] Reopened 9602848 state(s).
[t=3131.69s, 0 KB] Evaluated 18911972 state(s).
[t=3131.69s, 0 KB] Evaluations: 28221096
[t=3131.69s, 0 KB] Generated 68757696 state(s).
[t=3131.69s, 0 KB] Dead ends: 0 state(s).
[t=3131.69s, 0 KB] Number of registered states: 9309124
[t=3131.69s, 0 KB] Int hash set load factor: 9309124/16777216 = 0.554867
[t=3131.69s, 0 KB] Int hash set resizes: 24
[t=3131.69s, 0 KB] Best solution cost so far: 89
[t=3131.69s, 0 KB] Solution found - keep searching
[t=3132.08s, 0 KB] Building successor generator...done!
[t=3132.08s, 0 KB] peak memory difference for successor generator creation: 0 KB
[t=3132.08s, 0 KB] time for successor generation creation: 0s
[t=3132.08s, 0 KB] Variables: 21
[t=3132.08s, 0 KB] FactPairs: 230
[t=3132.08s, 0 KB] Bytes per state: 12
[t=3132.08s, 0 KB] Starting search: lazy_wastar(list(hff2, hlm2), preferred = list(hff2, hlm2), w = 3)
[t=3132.08s, 0 KB] Conducting lazy best first search, (real) bound = 89
[t=3132.08s, 0 KB] 4 initial landmarks, 4 goal landmarks
[t=3132.08s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 11
[t=3132.08s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 21
[t=3132.08s, 0 KB] g=0, 1 evaluated, 0 expanded
[t=3132.08s, 0 KB] Initial heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 11
[t=3132.08s, 0 KB] Initial heuristic value for ff(transform = adapt_costs(plusone)): 21
[t=3132.08s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 19
[t=3132.08s, 0 KB] g=1, 2 evaluated, 1 expanded
[t=3132.08s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 9
[t=3132.08s, 0 KB] g=2, 4 evaluated, 3 expanded
[t=3132.08s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 18
[t=3132.08s, 0 KB] g=2, 6 evaluated, 5 expanded
[t=3132.08s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 15
[t=3132.08s, 0 KB] g=3, 9 evaluated, 8 expanded
[t=3132.08s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 14
[t=3132.08s, 0 KB] g=4, 10 evaluated, 9 expanded
[t=3132.08s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 8
[t=3132.08s, 0 KB] g=5, 14 evaluated, 13 expanded
[t=3132.08s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 7
[t=3132.08s, 0 KB] g=6, 20 evaluated, 19 expanded
[t=3132.14s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 12
[t=3132.14s, 0 KB] g=6, 294 evaluated, 293 expanded, 53 reopened
[t=3132.14s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 11
[t=3132.14s, 0 KB] g=7, 295 evaluated, 294 expanded, 53 reopened
[t=3132.14s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 9
[t=3132.14s, 0 KB] g=9, 304 evaluated, 303 expanded, 53 reopened
[t=3215.41s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 8
[t=3215.42s, 0 KB] g=52, 440370 evaluated, 440369 expanded, 172631 reopened
[t=3215.42s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 7
[t=3215.42s, 0 KB] g=53, 440371 evaluated, 440370 expanded, 172631 reopened
[t=3684.2s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 6
[t=3684.2s, 0 KB] g=50, 3157481 evaluated, 3157480 expanded, 1379790 reopened
[t=3684.28s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 5
[t=3684.28s, 0 KB] g=55, 3157948 evaluated, 3157947 expanded, 1379973 reopened
[t=3705.47s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 4
[t=3705.47s, 0 KB] g=74, 3288218 evaluated, 3288217 expanded, 1442376 reopened
[t=3794s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 6
[t=3794s, 0 KB] g=57, 3820047 evaluated, 3820046 expanded, 1689710 reopened
[t=3794.47s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 4
[t=3794.47s, 0 KB] g=62, 3822286 evaluated, 3822285 expanded, 1690298 reopened
[t=3800s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 2
[t=3800s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 3
[t=3800s, 0 KB] g=74, 3853643 evaluated, 3853642 expanded, 1703142 reopened
[t=6800.47s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 2
[t=6800.47s, 0 KB] g=88, 24046368 evaluated, 24046367 expanded, 12190882 reopened
[t=7977.95s, 0 KB] Solution found!
[t=7977.95s, 0 KB] Actual search time: 4845.88s
move-cto1-type_2-e th h2 h3 h4 v3 (1)
move-cth-type_1-n to1 h2 v2 v3 (1)
move-dto1-type_1-w to1 h1 h2 v3 (0)
move-cto1-type_1-n to3 h2 v1 v2 (1)
move-dto3-type_1-n to3 h2 v2 v3 (0)
move-cto3-type_3-e tv3 h1 h2 v1 v2 (1)
move-ctv3-type_1-s to1 h1 v2 v3 (1)
move-dto1-type_1-s to1 h1 v1 v2 (0)
move-cto1-type_1-w to3 h1 h2 v3 (1)
move-dto3-type_1-s to3 h1 v2 v3 (0)
move-cto3-type_2-w th h2 h3 h4 v3 (1)
move-dth-type_2-w th h1 h2 h3 v3 (0)
move-cth-type_1-n to2 h3 v2 v3 (1)
move-dto2-type_1-e to2 h3 h4 v3 (0)
move-cto2-type_1-n to4 h3 v1 v2 (1)
move-dto4-type_1-n to4 h3 v2 v3 (0)
move-cto4-type_3-e tv3 h2 h3 v1 v2 (1)
move-ctv3-type_1-e to3 h1 h2 v2 (1)
move-dto3-type_1-s to3 h2 v1 v2 (0)
move-cto3-type_2-s th h1 h2 v2 v3 (1)
move-cth-type_1-w to4 h2 h3 v3 (1)
move-dto4-type_1-w to4 h1 h2 v3 (0)
move-cto4-type_1-w to2 h3 h4 v3 (1)
move-dto2-type_1-w to2 h2 h3 v3 (0)
move-cto2-type_3-n tv4 h4 v1 v2 v3 (1)
move-ctv4-type_3-n tv3 h3 v1 v2 v3 (1)
move-ctv3-type_1-e to3 h2 h3 v1 (1)
move-dto3-type_1-e to3 h3 h4 v1 (0)
move-cto3-type_1-e to1 h1 h2 v1 (1)
move-dto1-type_1-e to1 h2 h3 v1 (0)
move-cto1-type_2-s th h1 h2 v1 v2 (1)
move-cth-type_1-s to2 h2 v2 v3 (1)
move-dto2-type_1-w to2 h1 h2 v2 (0)
move-cto2-type_3-w tv3 h2 h3 v2 v3 (1)
move-ctv3-type_3-w tv4 h3 h4 v2 v3 (1)
move-ctv4-type_3-s tv2 h4 v3 v4 v5 (1)
move-dtv2-type_3-s tv2 h4 v2 v3 v4 (0)
move-ctv2-type_4-e tsq h2 h3 h4 v4 v5 (1)
move-ctsq-type_3-e tv1 h1 h2 v4 v5 (1)
move-ctv1-type_1-n to4 h1 v3 v4 (1)
move-dto4-type_1-n to4 h1 v4 v5 (0)
move-cto4-type_1-n to2 h1 v2 v3 (1)
move-dto2-type_1-n to2 h1 v3 v4 (0)
move-cto2-type_3-w tv3 h1 h2 v2 v3 (1)
move-ctv3-type_3-s tv1 h2 v3 v4 v5 (1)
move-dtv1-type_3-s tv1 h2 v2 v3 v4 (0)
move-ctv1-type_4-w tsq h2 h3 h4 v4 v5 (1)
move-ctsq-type_3-n tv2 h4 v2 v3 v4 (1)
move-dtv2-type_3-n tv2 h4 v3 v4 v5 (0)
move-ctv2-type_3-e tv4 h3 h4 v2 v3 (1)
move-ctv4-type_1-n to1 h3 v1 v2 (1)
move-dto1-type_1-n to1 h3 v2 v3 (0)
move-cto1-type_1-w to3 h3 h4 v1 (1)
move-dto3-type_1-n to3 h3 v1 v2 (0)
move-cto3-type_2-e th h1 h2 h3 v1 (1)
move-dth-type_2-e th h2 h3 h4 v1 (0)
move-cth-type_3-s tv3 h1 v1 v2 v3 (1)
move-ctv3-type_3-s tv1 h2 v1 v2 v3 (1)
move-ctv1-type_1-w to1 h2 h3 v3 (1)
move-dto1-type_1-w to1 h1 h2 v3 (0)
move-cto1-type_4-s tsq h2 h3 v3 v4 v5 (1)
move-ctsq-type_1-e to4 h1 h2 v5 (1)
move-dto4-type_1-e to4 h2 h3 v5 (0)
move-cto4-type_1-n to2 h1 v4 v5 (1)
move-dto2-type_1-e to2 h1 h2 v5 (0)
move-cto2-type_1-n to1 h1 v3 v4 (1)
move-dto1-type_1-n to1 h1 v4 v5 (0)
move-cto1-type_3-n tv3 h1 v1 v2 v3 (1)
move-dtv3-type_3-n tv3 h1 v2 v3 v4 (0)
move-ctv3-type_3-w tv1 h1 h2 v1 v2 (1)
move-ctv1-type_1-w to3 h2 h3 v2 (1)
move-dto3-type_1-s to3 h2 v1 v2 (0)
move-cto3-type_4-s tsq h2 h3 v2 v3 v4 (1)
move-ctsq-type_1-s to4 h3 v4 v5 (1)
move-dto4-type_1-w to4 h2 h3 v4 (0)
move-cto4-type_3-w tv2 h3 h4 v4 v5 (1)
move-ctv2-type_3-n tv4 h4 v2 v3 v4 (1)
move-dtv4-type_3-n tv4 h4 v3 v4 v5 (0)
move-ctv4-type_4-e tsq h2 h3 h4 v2 v3 (1)
move-ctsq-type_1-s to4 h2 v3 v4 (1)
move-cto4-type_1-s to2 h2 v4 v5 (1)
move-cto2-type_1-e to1 h1 h2 v5 (1)
move-cto1-type_3-n tv3 h1 v3 v4 v5 (1)
move-ctv3-type_3-n tv1 h1 v1 v2 v3 (1)
move-ctv1-type_1-w to3 h1 h2 v1 (1)
move-cto3-type_1-s to4 h2 v2 v3 (1)
move-dto4-type_1-s to4 h2 v1 v2 (0)
move-cto4-type_4-w tsq h2 h3 h4 v2 v3 (1)
move-ctsq-type_3-s tv4 h4 v3 v4 v5 (1)
move-dtv4-type_3-s tv4 h4 v2 v3 v4 (0)
move-ctv4-type_3-e tv2 h3 h4 v4 v5 (1)
move-ctv2-type_1-e to2 h2 h3 v4 (1)
move-cto2-type_1-e to1 h2 h3 v5 (1)
move-cto1-type_3-e tv3 h1 h2 v4 v5 (1)
move-ctv3-type_3-n tv1 h1 v2 v3 v4 (1)
move-dtv1-type_3-n tv1 h1 v3 v4 v5 (0)
move-ctv1-type_4-w tsq h1 h2 h3 v2 v3 (1)
move-ctsq-type_3-w tv4 h3 h4 v2 v3 (1)
move-ctv4-type_3-s tv2 h4 v3 v4 v5 (1)
move-ctv2-type_1-e to1 h3 h4 v5 (1)
move-cto1-type_1-n to2 h3 v4 v5 (1)
move-cto2-type_3-n tv4 h3 v2 v3 v4 (1)
move-ctv4-type_2-n th h3 h4 v1 v2 (1)
move-cth-type_1-e to4 h2 h3 v1 (1)
move-dto4-type_1-e to4 h3 h4 v1 (0)
move-cto4-type_1-e to3 h1 h2 v1 (1)
move-dto3-type_1-e to3 h2 h3 v1 (0)
move-cto3-type_4-s tsq h1 h2 v1 v2 v3 (1)
move-ctsq-type_3-s tv3 h2 v3 v4 v5 (1)
move-ctv3-type_1-w to2 h2 h3 v5 (1)
move-cto2-type_1-w to1 h3 h4 v5 (1)
move-cto1-type_3-n tv2 h4 v3 v4 v5 (1)
move-ctv2-type_3-s tv1 h1 v3 v4 v5 (1)
move-ctv1-type_1-w to2 h1 h2 v5 (1)
move-cto2-type_1-w to1 h2 h3 v5 (1)
move-cto1-type_3-n tv4 h3 v3 v4 v5 (1)
move-ctv4-type_2-n th h3 h4 v2 v3 (1)
move-cth-type_1-n to3 h3 v1 v2 (1)
move-dto3-type_1-e to3 h3 h4 v2 (0)
move-cto3-type_4-e tsq h1 h2 h3 v1 v2 (1)
[t=7977.95s, 0 KB] Plan length: 120 step(s).
[t=7977.95s, 0 KB] Plan cost: 85
[t=7977.95s, 0 KB] Expanded 32726881 state(s).
[t=7977.95s, 0 KB] Reopened 16969665 state(s).
[t=7977.95s, 0 KB] Evaluated 32726882 state(s).
[t=7977.95s, 0 KB] Evaluations: 48484099
[t=7977.95s, 0 KB] Generated 118221702 state(s).
[t=7977.95s, 0 KB] Dead ends: 0 state(s).
[t=7977.95s, 0 KB] Number of registered states: 15757217
[t=7977.95s, 0 KB] Int hash set load factor: 15757217/33554432 = 0.469602
[t=7977.95s, 0 KB] Int hash set resizes: 25
[t=7977.95s, 0 KB] Best solution cost so far: 85
[t=7977.95s, 0 KB] Solution found - keep searching
[t=7978.61s, 0 KB] Building successor generator...done!
[t=7978.61s, 0 KB] peak memory difference for successor generator creation: 0 KB
[t=7978.61s, 0 KB] time for successor generation creation: 0s
[t=7978.61s, 0 KB] Variables: 21
[t=7978.61s, 0 KB] FactPairs: 230
[t=7978.61s, 0 KB] Bytes per state: 12
[t=7978.61s, 0 KB] Starting search: lazy_wastar(list(hff2, hlm2), preferred = list(hff2, hlm2), w = 2)
[t=7978.61s, 0 KB] Conducting lazy best first search, (real) bound = 85
[t=7978.61s, 0 KB] 4 initial landmarks, 4 goal landmarks
[t=7978.61s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 11
[t=7978.61s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 21
[t=7978.61s, 0 KB] g=0, 1 evaluated, 0 expanded
[t=7978.61s, 0 KB] Initial heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 11
[t=7978.61s, 0 KB] Initial heuristic value for ff(transform = adapt_costs(plusone)): 21
[t=7978.61s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 19
[t=7978.61s, 0 KB] g=1, 2 evaluated, 1 expanded
[t=7978.61s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 9
[t=7978.61s, 0 KB] g=2, 4 evaluated, 3 expanded
[t=7978.61s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 18
[t=7978.61s, 0 KB] g=2, 6 evaluated, 5 expanded
[t=7978.61s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 15
[t=7978.61s, 0 KB] g=3, 9 evaluated, 8 expanded
[t=7978.61s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 14
[t=7978.61s, 0 KB] g=4, 10 evaluated, 9 expanded
[t=7978.61s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 8
[t=7978.61s, 0 KB] g=5, 14 evaluated, 13 expanded
[t=7978.61s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 7
[t=7978.61s, 0 KB] g=5, 22 evaluated, 21 expanded
[t=7978.69s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 12
[t=7978.69s, 0 KB] g=6, 287 evaluated, 286 expanded, 34 reopened
[t=7978.69s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 11
[t=7978.69s, 0 KB] g=7, 288 evaluated, 287 expanded, 34 reopened
[t=7978.69s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 9
[t=7978.69s, 0 KB] g=9, 299 evaluated, 298 expanded, 34 reopened
[t=8072.08s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 8
[t=8072.08s, 0 KB] g=50, 478996 evaluated, 478995 expanded, 177129 reopened
[t=8072.08s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 7
[t=8072.08s, 0 KB] g=51, 478997 evaluated, 478996 expanded, 177129 reopened
[t=8646.28s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 6
[t=8646.28s, 0 KB] g=58, 3772102 evaluated, 3772101 expanded, 1621424 reopened
[t=8646.5s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 5
[t=8646.5s, 0 KB] g=60, 3773009 evaluated, 3773008 expanded, 1621617 reopened
[t=8646.52s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 4
[t=8646.52s, 0 KB] g=64, 3773073 evaluated, 3773072 expanded, 1621629 reopened
[t=8856.31s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 6
[t=8856.31s, 0 KB] g=57, 5027568 evaluated, 5027567 expanded, 2205854 reopened
[t=8872.53s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 4
[t=8872.53s, 0 KB] g=62, 5137230 evaluated, 5137229 expanded, 2264155 reopened
[t=9245.47s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 2
[t=9245.47s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 3
[t=9245.47s, 0 KB] g=74, 7370910 evaluated, 7370909 expanded, 3306983 reopened
[t=13873.4s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 2
[t=13873.4s, 0 KB] g=82, 38304978 evaluated, 38304977 expanded, 19152856 reopened
[t=13873.4s, 0 KB] Solution found!
[t=13873.4s, 0 KB] Actual search time: 5894.81s
move-cto1-type_2-e th h2 h3 h4 v3 (1)
move-cth-type_1-n to1 h2 v2 v3 (1)
move-dto1-type_1-w to1 h1 h2 v3 (0)
move-cto1-type_1-n to3 h2 v1 v2 (1)
move-dto3-type_1-n to3 h2 v2 v3 (0)
move-cto3-type_3-e tv3 h1 h2 v1 v2 (1)
move-ctv3-type_1-s to1 h1 v2 v3 (1)
move-dto1-type_1-s to1 h1 v1 v2 (0)
move-cto1-type_1-w to3 h1 h2 v3 (1)
move-dto3-type_1-s to3 h1 v2 v3 (0)
move-cto3-type_2-w th h2 h3 h4 v3 (1)
move-dth-type_2-w th h1 h2 h3 v3 (0)
move-cth-type_1-n to2 h3 v2 v3 (1)
move-dto2-type_1-e to2 h3 h4 v3 (0)
move-cto2-type_1-n to4 h3 v1 v2 (1)
move-dto4-type_1-n to4 h3 v2 v3 (0)
move-cto4-type_3-e tv3 h2 h3 v1 v2 (1)
move-ctv3-type_1-e to3 h1 h2 v2 (1)
move-dto3-type_1-s to3 h2 v1 v2 (0)
move-cto3-type_2-s th h1 h2 v2 v3 (1)
move-cth-type_1-w to4 h2 h3 v3 (1)
move-dto4-type_1-w to4 h1 h2 v3 (0)
move-cto4-type_1-w to2 h3 h4 v3 (1)
move-dto2-type_1-w to2 h2 h3 v3 (0)
move-cto2-type_3-n tv3 h3 v1 v2 v3 (1)
move-ctv3-type_3-n tv4 h4 v1 v2 v3 (1)
move-ctv4-type_1-e to3 h2 h3 v1 (1)
move-dto3-type_1-e to3 h3 h4 v1 (0)
move-cto3-type_1-e to1 h1 h2 v1 (1)
move-dto1-type_1-e to1 h2 h3 v1 (0)
move-cto1-type_2-s th h1 h2 v1 v2 (1)
move-cth-type_1-s to2 h2 v2 v3 (1)
move-dto2-type_1-w to2 h1 h2 v2 (0)
move-cto2-type_3-w tv3 h2 h3 v2 v3 (1)
move-ctv3-type_3-w tv4 h3 h4 v2 v3 (1)
move-ctv4-type_3-s tv2 h4 v3 v4 v5 (1)
move-dtv2-type_3-s tv2 h4 v2 v3 v4 (0)
move-ctv2-type_4-e tsq h2 h3 h4 v4 v5 (1)
move-ctsq-type_3-e tv1 h1 h2 v4 v5 (1)
move-ctv1-type_1-n to4 h1 v3 v4 (1)
move-dto4-type_1-n to4 h1 v4 v5 (0)
move-cto4-type_1-n to2 h1 v2 v3 (1)
move-dto2-type_1-n to2 h1 v3 v4 (0)
move-cto2-type_3-w tv3 h1 h2 v2 v3 (1)
move-ctv3-type_3-s tv1 h2 v3 v4 v5 (1)
move-dtv1-type_3-s tv1 h2 v2 v3 v4 (0)
move-ctv1-type_4-w tsq h2 h3 h4 v4 v5 (1)
move-ctsq-type_3-n tv2 h4 v2 v3 v4 (1)
move-dtv2-type_3-n tv2 h4 v3 v4 v5 (0)
move-ctv2-type_3-e tv4 h3 h4 v2 v3 (1)
move-ctv4-type_1-n to1 h3 v1 v2 (1)
move-dto1-type_1-n to1 h3 v2 v3 (0)
move-cto1-type_1-w to3 h3 h4 v1 (1)
move-dto3-type_1-n to3 h3 v1 v2 (0)
move-cto3-type_2-e th h1 h2 h3 v1 (1)
move-dth-type_2-e th h2 h3 h4 v1 (0)
move-cth-type_3-s tv3 h1 v1 v2 v3 (1)
move-ctv3-type_3-s tv1 h2 v1 v2 v3 (1)
move-ctv1-type_1-w to1 h2 h3 v3 (1)
move-dto1-type_1-w to1 h1 h2 v3 (0)
move-cto1-type_4-s tsq h2 h3 v3 v4 v5 (1)
move-ctsq-type_1-e to4 h1 h2 v5 (1)
move-dto4-type_1-e to4 h2 h3 v5 (0)
move-cto4-type_1-n to2 h1 v4 v5 (1)
move-dto2-type_1-e to2 h1 h2 v5 (0)
move-cto2-type_1-n to1 h1 v3 v4 (1)
move-dto1-type_1-n to1 h1 v4 v5 (0)
move-cto1-type_3-n tv3 h1 v1 v2 v3 (1)
move-dtv3-type_3-n tv3 h1 v2 v3 v4 (0)
move-ctv3-type_3-w tv1 h1 h2 v1 v2 (1)
move-ctv1-type_1-w to3 h2 h3 v2 (1)
move-dto3-type_1-s to3 h2 v1 v2 (0)
move-cto3-type_4-s tsq h2 h3 v2 v3 v4 (1)
move-ctsq-type_1-s to4 h3 v4 v5 (1)
move-dto4-type_1-w to4 h2 h3 v4 (0)
move-cto4-type_3-w tv2 h3 h4 v4 v5 (1)
move-ctv2-type_3-n tv4 h4 v2 v3 v4 (1)
move-dtv4-type_3-n tv4 h4 v3 v4 v5 (0)
move-ctv4-type_4-e tsq h2 h3 h4 v2 v3 (1)
move-ctsq-type_1-s to4 h2 v3 v4 (1)
move-cto4-type_1-s to2 h2 v4 v5 (1)
move-cto2-type_1-e to1 h1 h2 v5 (1)
move-cto1-type_3-n tv3 h1 v3 v4 v5 (1)
move-ctv3-type_3-n tv1 h1 v1 v2 v3 (1)
move-ctv1-type_1-w to3 h1 h2 v1 (1)
move-cto3-type_1-s to4 h2 v2 v3 (1)
move-dto4-type_1-s to4 h2 v1 v2 (0)
move-cto4-type_4-w tsq h2 h3 h4 v2 v3 (1)
move-ctsq-type_3-s tv4 h4 v3 v4 v5 (1)
move-dtv4-type_3-s tv4 h4 v2 v3 v4 (0)
move-ctv4-type_3-e tv2 h3 h4 v4 v5 (1)
move-ctv2-type_1-e to2 h2 h3 v4 (1)
move-cto2-type_1-e to1 h2 h3 v5 (1)
move-cto1-type_3-e tv3 h1 h2 v4 v5 (1)
move-ctv3-type_3-n tv1 h1 v2 v3 v4 (1)
move-dtv1-type_3-n tv1 h1 v3 v4 v5 (0)
move-ctv1-type_4-w tsq h1 h2 h3 v2 v3 (1)
move-ctsq-type_1-s to2 h3 v3 v4 (1)
move-cto2-type_1-s to1 h3 v4 v5 (1)
move-cto1-type_1-s to2 h3 v2 v3 (1)
move-cto2-type_1-s to1 h3 v3 v4 (1)
move-cto1-type_3-w tv2 h3 h4 v4 v5 (1)
move-ctv2-type_3-n tv4 h4 v2 v3 v4 (1)
move-dtv4-type_3-n tv4 h4 v3 v4 v5 (0)
move-ctv4-type_1-e to2 h3 h4 v2 (1)
move-dto2-type_1-n to2 h4 v2 v3 (0)
move-cto2-type_2-n th h3 h4 v1 v2 (1)
move-cth-type_1-e to4 h2 h3 v1 (1)
move-dto4-type_1-e to4 h3 h4 v1 (0)
move-cto4-type_1-e to3 h1 h2 v1 (1)
move-dto3-type_1-e to3 h2 h3 v1 (0)
move-cto3-type_4-s tsq h1 h2 v1 v2 v3 (1)
move-ctsq-type_1-w to1 h2 h3 v3 (1)
move-cto1-type_1-w to2 h3 h4 v3 (1)
move-cto2-type_1-w to1 h1 h2 v3 (1)
move-cto1-type_1-w to2 h2 h3 v3 (1)
move-cto2-type_2-n th h3 h4 v2 v3 (1)
move-cth-type_1-n to3 h3 v1 v2 (1)
move-dto3-type_1-e to3 h3 h4 v2 (0)
move-cto3-type_4-e tsq h1 h2 h3 v1 v2 (1)
[t=13873.4s, 0 KB] Plan length: 120 step(s).
[t=13873.4s, 0 KB] Plan cost: 83
[t=13873.4s, 0 KB] Expanded 38304978 state(s).
[t=13873.4s, 0 KB] Reopened 19152856 state(s).
[t=13873.4s, 0 KB] Evaluated 38304979 state(s).
[t=13873.4s, 0 KB] Evaluations: 57457102
[t=13873.4s, 0 KB] Generated 137789833 state(s).
[t=13873.4s, 0 KB] Dead ends: 0 state(s).
[t=13873.4s, 0 KB] Number of registered states: 19152123
[t=13873.4s, 0 KB] Int hash set load factor: 19152123/33554432 = 0.570778
[t=13873.4s, 0 KB] Int hash set resizes: 25
[t=13873.4s, 0 KB] Best solution cost so far: 83
[t=13873.4s, 0 KB] Solution found - keep searching
[t=13874.1s, 0 KB] Building successor generator...done!
[t=13874.1s, 0 KB] peak memory difference for successor generator creation: 0 KB
[t=13874.1s, 0 KB] time for successor generation creation: 0s
[t=13874.1s, 0 KB] Variables: 21
[t=13874.1s, 0 KB] FactPairs: 230
[t=13874.1s, 0 KB] Bytes per state: 12
[t=13874.1s, 0 KB] Starting search: lazy_wastar(list(hff2, hlm2), preferred = list(hff2, hlm2), w = 1)
[t=13874.1s, 0 KB] Conducting lazy best first search, (real) bound = 83
[t=13874.1s, 0 KB] 4 initial landmarks, 4 goal landmarks
[t=13874.1s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 11
[t=13874.1s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 21
[t=13874.1s, 0 KB] g=0, 1 evaluated, 0 expanded
[t=13874.1s, 0 KB] Initial heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 11
[t=13874.1s, 0 KB] Initial heuristic value for ff(transform = adapt_costs(plusone)): 21
[t=13874.1s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 19
[t=13874.1s, 0 KB] g=1, 2 evaluated, 1 expanded
[t=13874.1s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 9
[t=13874.1s, 0 KB] g=2, 4 evaluated, 3 expanded
[t=13874.1s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 18
[t=13874.1s, 0 KB] g=2, 6 evaluated, 5 expanded
[t=13874.1s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 17
[t=13874.1s, 0 KB] g=2, 10 evaluated, 9 expanded
[t=13874.1s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 15
[t=13874.1s, 0 KB] g=3, 14 evaluated, 13 expanded
[t=13874.1s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 14
[t=13874.1s, 0 KB] g=4, 15 evaluated, 14 expanded
[t=13874.1s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 8
[t=13874.1s, 0 KB] g=5, 23 evaluated, 22 expanded
[t=13874.1s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 7
[t=13874.1s, 0 KB] g=5, 41 evaluated, 40 expanded
[t=13874.1s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 11
[t=13874.1s, 0 KB] g=5, 156 evaluated, 155 expanded, 8 reopened
[t=13874.1s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 9
[t=13874.1s, 0 KB] g=8, 186 evaluated, 185 expanded, 9 reopened
[t=13969.4s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 8
[t=13969.4s, 0 KB] g=44, 456571 evaluated, 456570 expanded, 147810 reopened
[t=13969.4s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 7
[t=13969.4s, 0 KB] g=45, 456573 evaluated, 456572 expanded, 147810 reopened
[t=14461s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 6
[t=14461s, 0 KB] g=50, 3054079 evaluated, 3054078 expanded, 1159821 reopened
[t=14461.1s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 5
[t=14461.1s, 0 KB] g=55, 3054258 evaluated, 3054257 expanded, 1159893 reopened
[t=14839.2s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 4
[t=14839.2s, 0 KB] g=61, 5047056 evaluated, 5047055 expanded, 1933511 reopened
[t=14892.6s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 6
[t=14892.6s, 0 KB] g=55, 5297526 evaluated, 5297525 expanded, 2012702 reopened
[t=14958.8s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 4
[t=14958.8s, 0 KB] g=57, 5633822 evaluated, 5633821 expanded, 2133350 reopened
[t=15993.2s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 2
[t=15993.2s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 3
[t=15993.2s, 0 KB] g=66, 11177540 evaluated, 11177539 expanded, 4349835 reopened
[t=21250.3s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 2
[t=21250.3s, 0 KB] g=82, 44808273 evaluated, 44808272 expanded, 20599727 reopened
[t=21469s, 0 KB] Solution found!
[t=21469s, 0 KB] Actual search time: 7594.94s
move-cto1-type_2-w th h1 h2 h3 v3 (1)
move-cth-type_1-n to2 h3 v2 v3 (1)
move-dto2-type_1-e to2 h3 h4 v3 (0)
move-cto2-type_1-n to4 h3 v1 v2 (1)
move-dto4-type_1-n to4 h3 v2 v3 (0)
move-cto4-type_3-w tv4 h3 h4 v1 v2 (1)
move-ctv4-type_1-s to2 h4 v2 v3 (1)
move-dto2-type_1-s to2 h4 v1 v2 (0)
move-cto2-type_1-e to4 h3 h4 v3 (1)
move-dto4-type_1-s to4 h4 v2 v3 (0)
move-cto4-type_2-e th h1 h2 h3 v3 (1)
move-dth-type_2-e th h2 h3 h4 v3 (0)
move-cth-type_1-n to1 h2 v2 v3 (1)
move-dto1-type_1-w to1 h1 h2 v3 (0)
move-cto1-type_1-n to3 h2 v1 v2 (1)
move-dto3-type_1-n to3 h2 v2 v3 (0)
move-cto3-type_3-w tv4 h2 h3 v1 v2 (1)
move-ctv4-type_1-w to4 h3 h4 v2 (1)
move-dto4-type_1-s to4 h3 v1 v2 (0)
move-cto4-type_2-s th h3 h4 v2 v3 (1)
move-cth-type_1-e to3 h2 h3 v3 (1)
move-dto3-type_1-e to3 h3 h4 v3 (0)
move-cto3-type_1-e to1 h1 h2 v3 (1)
move-dto1-type_1-e to1 h2 h3 v3 (0)
move-cto1-type_3-n tv4 h2 v1 v2 v3 (1)
move-ctv4-type_3-n tv3 h1 v1 v2 v3 (1)
move-ctv3-type_1-w to4 h2 h3 v1 (1)
move-dto4-type_1-w to4 h1 h2 v1 (0)
move-cto4-type_1-w to2 h3 h4 v1 (1)
move-dto2-type_1-w to2 h2 h3 v1 (0)
move-cto2-type_2-s th h3 h4 v1 v2 (1)
move-cth-type_1-s to1 h3 v2 v3 (1)
move-dto1-type_1-e to1 h3 h4 v2 (0)
move-cto1-type_3-e tv4 h2 h3 v2 v3 (1)
move-ctv4-type_3-e tv3 h1 h2 v2 v3 (1)
move-ctv3-type_3-s tv1 h1 v3 v4 v5 (1)
move-dtv1-type_3-s tv1 h1 v2 v3 v4 (0)
move-ctv1-type_4-w tsq h1 h2 h3 v4 v5 (1)
move-ctsq-type_3-w tv2 h3 h4 v4 v5 (1)
move-ctv2-type_1-n to3 h4 v3 v4 (1)
move-dto3-type_1-n to3 h4 v4 v5 (0)
move-cto3-type_1-n to1 h4 v2 v3 (1)
move-dto1-type_1-n to1 h4 v3 v4 (0)
move-cto1-type_3-e tv4 h3 h4 v2 v3 (1)
move-ctv4-type_3-s tv2 h3 v3 v4 v5 (1)
move-dtv2-type_3-s tv2 h3 v2 v3 v4 (0)
move-ctv2-type_4-e tsq h1 h2 h3 v4 v5 (1)
move-ctsq-type_3-n tv1 h1 v2 v3 v4 (1)
move-dtv1-type_3-n tv1 h1 v3 v4 v5 (0)
move-ctv1-type_3-w tv3 h1 h2 v2 v3 (1)
move-ctv3-type_1-n to2 h2 v1 v2 (1)
move-dto2-type_1-n to2 h2 v2 v3 (0)
move-cto2-type_1-e to4 h1 h2 v1 (1)
move-dto4-type_1-n to4 h2 v1 v2 (0)
move-cto4-type_2-w th h2 h3 h4 v1 (1)
move-dth-type_2-w th h1 h2 h3 v1 (0)
move-cth-type_3-s tv4 h4 v1 v2 v3 (1)
move-ctv4-type_3-s tv2 h3 v1 v2 v3 (1)
move-ctv2-type_1-e to2 h2 h3 v3 (1)
move-dto2-type_1-e to2 h3 h4 v3 (0)
move-cto2-type_4-s tsq h2 h3 v3 v4 v5 (1)
move-ctsq-type_1-w to3 h3 h4 v5 (1)
move-dto3-type_1-w to3 h2 h3 v5 (0)
move-cto3-type_1-n to1 h4 v4 v5 (1)
move-dto1-type_1-w to1 h3 h4 v5 (0)
move-cto1-type_1-n to2 h4 v3 v4 (1)
move-dto2-type_1-n to2 h4 v4 v5 (0)
move-cto2-type_3-n tv4 h4 v1 v2 v3 (1)
move-dtv4-type_3-n tv4 h4 v2 v3 v4 (0)
move-ctv4-type_3-e tv2 h3 h4 v1 v2 (1)
move-ctv2-type_1-e to4 h2 h3 v2 (1)
move-dto4-type_1-s to4 h3 v1 v2 (0)
move-cto4-type_4-s tsq h2 h3 v2 v3 v4 (1)
move-ctsq-type_1-s to3 h2 v4 v5 (1)
move-dto3-type_1-e to3 h2 h3 v4 (0)
move-cto3-type_3-e tv1 h1 h2 v4 v5 (1)
move-ctv1-type_3-n tv3 h1 v2 v3 v4 (1)
move-dtv3-type_3-n tv3 h1 v3 v4 v5 (0)
move-ctv3-type_4-w tsq h1 h2 h3 v2 v3 (1)
move-ctsq-type_1-s to3 h3 v3 v4 (1)
move-cto3-type_1-s to1 h3 v4 v5 (1)
move-cto1-type_1-w to2 h3 h4 v5 (1)
move-cto2-type_3-n tv4 h4 v3 v4 v5 (1)
move-ctv4-type_3-n tv2 h4 v1 v2 v3 (1)
move-ctv2-type_1-e to4 h3 h4 v1 (1)
move-cto4-type_1-s to3 h3 v2 v3 (1)
move-dto3-type_1-s to3 h3 v1 v2 (0)
move-cto3-type_4-e tsq h1 h2 h3 v2 v3 (1)
move-ctsq-type_3-s tv3 h1 v3 v4 v5 (1)
move-dtv3-type_3-s tv3 h1 v2 v3 v4 (0)
move-ctv3-type_3-w tv1 h1 h2 v4 v5 (1)
move-ctv1-type_1-w to2 h2 h3 v5 (1)
move-cto2-type_1-w to1 h2 h3 v4 (1)
move-cto1-type_3-w tv4 h3 h4 v4 v5 (1)
move-ctv4-type_3-n tv2 h4 v2 v3 v4 (1)
move-dtv2-type_3-n tv2 h4 v3 v4 v5 (0)
move-ctv2-type_4-e tsq h2 h3 h4 v2 v3 (1)
move-ctsq-type_1-s to1 h2 v3 v4 (1)
move-dto1-type_1-s to1 h2 v2 v3 (0)
move-cto1-type_1-s to2 h2 v4 v5 (1)
move-dto2-type_1-s to2 h2 v3 v4 (0)
move-cto2-type_3-e tv1 h1 h2 v4 v5 (1)
move-ctv1-type_3-n tv3 h1 v2 v3 v4 (1)
move-dtv3-type_3-n tv3 h1 v3 v4 v5 (0)
move-ctv3-type_1-w to1 h1 h2 v2 (1)
move-dto1-type_1-n to1 h1 v2 v3 (0)
move-cto1-type_2-n th h1 h2 v1 v2 (1)
move-cth-type_1-w to3 h2 h3 v1 (1)
move-dto3-type_1-w to3 h1 h2 v1 (0)
move-cto3-type_1-w to4 h3 h4 v1 (1)
move-dto4-type_1-w to4 h2 h3 v1 (0)
move-cto4-type_4-s tsq h3 h4 v1 v2 v3 (1)
move-ctsq-type_1-e to2 h2 h3 v3 (1)
move-cto2-type_1-e to1 h1 h2 v3 (1)
move-cto1-type_1-e to2 h3 h4 v3 (1)
move-cto2-type_1-e to1 h2 h3 v3 (1)
move-cto1-type_2-n th h1 h2 v2 v3 (1)
move-cth-type_1-n to4 h2 v1 v2 (1)
move-dto4-type_1-w to4 h1 h2 v2 (0)
move-cto4-type_4-w tsq h2 h3 h4 v1 v2 (1)
[t=21469s, 0 KB] Plan length: 120 step(s).
[t=21469s, 0 KB] Plan cost: 81
[t=21469s, 0 KB] Expanded 46856347 state(s).
[t=21469s, 0 KB] Reopened 21864346 state(s).
[t=21469s, 0 KB] Evaluated 46856348 state(s).
[t=21469s, 0 KB] Evaluations: 71848350
[t=21469s, 0 KB] Generated 167307497 state(s).
[t=21469s, 0 KB] Dead ends: 0 state(s).
[t=21469s, 0 KB] Number of registered states: 24992002
[t=21469s, 0 KB] Int hash set load factor: 24992002/67108864 = 0.37241
[t=21469s, 0 KB] Int hash set resizes: 26
[t=21469s, 0 KB] Best solution cost so far: 81
[t=21469s, 0 KB] Solution found - keep searching
[t=21469.6s, 0 KB] Building successor generator...done!
[t=21469.6s, 0 KB] peak memory difference for successor generator creation: 0 KB
[t=21469.6s, 0 KB] time for successor generation creation: 0s
[t=21469.6s, 0 KB] Variables: 21
[t=21469.6s, 0 KB] FactPairs: 230
[t=21469.6s, 0 KB] Bytes per state: 12
[t=21469.6s, 0 KB] Starting search: lazy_wastar(list(hff2, hlm2), preferred = list(hff2, hlm2), w = 1)
[t=21469.6s, 0 KB] Conducting lazy best first search, (real) bound = 81
[t=21469.6s, 0 KB] 4 initial landmarks, 4 goal landmarks
[t=21469.6s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 11
[t=21469.6s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 21
[t=21469.6s, 0 KB] g=0, 1 evaluated, 0 expanded
[t=21469.6s, 0 KB] Initial heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 11
[t=21469.6s, 0 KB] Initial heuristic value for ff(transform = adapt_costs(plusone)): 21
[t=21469.6s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 19
[t=21469.6s, 0 KB] g=1, 2 evaluated, 1 expanded
[t=21469.6s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 9
[t=21469.6s, 0 KB] g=2, 4 evaluated, 3 expanded
[t=21469.6s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 18
[t=21469.6s, 0 KB] g=2, 6 evaluated, 5 expanded
[t=21469.6s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 17
[t=21469.6s, 0 KB] g=2, 10 evaluated, 9 expanded
[t=21469.6s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 15
[t=21469.6s, 0 KB] g=3, 14 evaluated, 13 expanded
[t=21469.6s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 14
[t=21469.6s, 0 KB] g=4, 15 evaluated, 14 expanded
[t=21469.6s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 8
[t=21469.6s, 0 KB] g=5, 23 evaluated, 22 expanded
[t=21469.6s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 7
[t=21469.6s, 0 KB] g=5, 41 evaluated, 40 expanded
[t=21469.7s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 11
[t=21469.7s, 0 KB] g=5, 156 evaluated, 155 expanded, 8 reopened
[t=21469.7s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 9
[t=21469.7s, 0 KB] g=8, 186 evaluated, 185 expanded, 9 reopened
[t=21564.8s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 8
[t=21564.8s, 0 KB] g=44, 456571 evaluated, 456570 expanded, 147810 reopened
[t=21564.8s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 7
[t=21564.8s, 0 KB] g=45, 456573 evaluated, 456572 expanded, 147810 reopened
[t=22056.5s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 6
[t=22056.5s, 0 KB] g=50, 3054079 evaluated, 3054078 expanded, 1159821 reopened
[t=22056.5s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 5
[t=22056.5s, 0 KB] g=55, 3054258 evaluated, 3054257 expanded, 1159893 reopened
[t=22434.6s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 4
[t=22434.6s, 0 KB] g=61, 5047056 evaluated, 5047055 expanded, 1933511 reopened
[t=22488s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 6
[t=22488s, 0 KB] g=55, 5297526 evaluated, 5297525 expanded, 2012702 reopened
[t=22554.3s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 4
[t=22554.3s, 0 KB] g=57, 5633822 evaluated, 5633821 expanded, 2133350 reopened
[t=23588.4s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 2
[t=23588.4s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 3
[t=23588.4s, 0 KB] g=66, 11177540 evaluated, 11177539 expanded, 4349835 reopened
[t=28937.2s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 2
[t=28937.2s, 0 KB] g=80, 46269531 evaluated, 46269530 expanded, 21724584 reopened
[t=28937.2s, 0 KB] Solution found!
[t=28937.2s, 0 KB] Actual search time: 7467.62s
move-cto1-type_2-w th h1 h2 h3 v3 (1)
move-cth-type_1-n to2 h3 v2 v3 (1)
move-dto2-type_1-e to2 h3 h4 v3 (0)
move-cto2-type_1-n to4 h3 v1 v2 (1)
move-dto4-type_1-n to4 h3 v2 v3 (0)
move-cto4-type_3-w tv4 h3 h4 v1 v2 (1)
move-ctv4-type_1-s to2 h4 v2 v3 (1)
move-dto2-type_1-s to2 h4 v1 v2 (0)
move-cto2-type_1-e to4 h3 h4 v3 (1)
move-dto4-type_1-s to4 h4 v2 v3 (0)
move-cto4-type_2-e th h1 h2 h3 v3 (1)
move-dth-type_2-e th h2 h3 h4 v3 (0)
move-cth-type_1-n to1 h2 v2 v3 (1)
move-dto1-type_1-w to1 h1 h2 v3 (0)
move-cto1-type_1-n to3 h2 v1 v2 (1)
move-dto3-type_1-n to3 h2 v2 v3 (0)
move-cto3-type_3-w tv4 h2 h3 v1 v2 (1)
move-ctv4-type_1-w to4 h3 h4 v2 (1)
move-dto4-type_1-s to4 h3 v1 v2 (0)
move-cto4-type_2-s th h3 h4 v2 v3 (1)
move-cth-type_1-e to3 h2 h3 v3 (1)
move-dto3-type_1-e to3 h3 h4 v3 (0)
move-cto3-type_1-e to1 h1 h2 v3 (1)
move-dto1-type_1-e to1 h2 h3 v3 (0)
move-cto1-type_3-n tv4 h2 v1 v2 v3 (1)
move-ctv4-type_3-n tv3 h1 v1 v2 v3 (1)
move-ctv3-type_1-w to4 h2 h3 v1 (1)
move-dto4-type_1-w to4 h1 h2 v1 (0)
move-cto4-type_1-w to2 h3 h4 v1 (1)
move-dto2-type_1-w to2 h2 h3 v1 (0)
move-cto2-type_2-s th h3 h4 v1 v2 (1)
move-cth-type_1-s to1 h3 v2 v3 (1)
move-dto1-type_1-e to1 h3 h4 v2 (0)
move-cto1-type_3-e tv4 h2 h3 v2 v3 (1)
move-ctv4-type_3-e tv3 h1 h2 v2 v3 (1)
move-ctv3-type_3-s tv1 h1 v3 v4 v5 (1)
move-dtv1-type_3-s tv1 h1 v2 v3 v4 (0)
move-ctv1-type_4-w tsq h1 h2 h3 v4 v5 (1)
move-ctsq-type_3-w tv2 h3 h4 v4 v5 (1)
move-ctv2-type_1-n to3 h4 v3 v4 (1)
move-dto3-type_1-n to3 h4 v4 v5 (0)
move-cto3-type_1-n to1 h4 v2 v3 (1)
move-dto1-type_1-n to1 h4 v3 v4 (0)
move-cto1-type_3-e tv4 h3 h4 v2 v3 (1)
move-ctv4-type_3-s tv2 h3 v3 v4 v5 (1)
move-dtv2-type_3-s tv2 h3 v2 v3 v4 (0)
move-ctv2-type_4-e tsq h1 h2 h3 v4 v5 (1)
move-ctsq-type_3-n tv1 h1 v2 v3 v4 (1)
move-dtv1-type_3-n tv1 h1 v3 v4 v5 (0)
move-ctv1-type_3-w tv3 h1 h2 v2 v3 (1)
move-ctv3-type_1-n to2 h2 v1 v2 (1)
move-dto2-type_1-n to2 h2 v2 v3 (0)
move-cto2-type_1-e to4 h1 h2 v1 (1)
move-dto4-type_1-n to4 h2 v1 v2 (0)
move-cto4-type_2-w th h2 h3 h4 v1 (1)
move-dth-type_2-w th h1 h2 h3 v1 (0)
move-cth-type_3-s tv4 h4 v1 v2 v3 (1)
move-ctv4-type_3-s tv2 h3 v1 v2 v3 (1)
move-ctv2-type_1-e to2 h2 h3 v3 (1)
move-dto2-type_1-e to2 h3 h4 v3 (0)
move-cto2-type_4-s tsq h2 h3 v3 v4 v5 (1)
move-ctsq-type_1-w to3 h3 h4 v5 (1)
move-dto3-type_1-w to3 h2 h3 v5 (0)
move-cto3-type_1-n to1 h4 v4 v5 (1)
move-dto1-type_1-w to1 h3 h4 v5 (0)
move-cto1-type_1-n to2 h4 v3 v4 (1)
move-dto2-type_1-n to2 h4 v4 v5 (0)
move-cto2-type_3-n tv4 h4 v1 v2 v3 (1)
move-dtv4-type_3-n tv4 h4 v2 v3 v4 (0)
move-ctv4-type_3-e tv2 h3 h4 v1 v2 (1)
move-ctv2-type_1-e to4 h2 h3 v2 (1)
move-dto4-type_1-s to4 h3 v1 v2 (0)
move-cto4-type_4-s tsq h2 h3 v2 v3 v4 (1)
move-ctsq-type_1-s to3 h2 v4 v5 (1)
move-dto3-type_1-e to3 h2 h3 v4 (0)
move-cto3-type_3-e tv1 h1 h2 v4 v5 (1)
move-ctv1-type_3-n tv3 h1 v2 v3 v4 (1)
move-dtv3-type_3-n tv3 h1 v3 v4 v5 (0)
move-ctv3-type_4-w tsq h1 h2 h3 v2 v3 (1)
move-ctsq-type_1-s to3 h3 v3 v4 (1)
move-cto3-type_1-s to1 h3 v4 v5 (1)
move-cto1-type_1-w to2 h3 h4 v5 (1)
move-cto2-type_3-n tv4 h4 v3 v4 v5 (1)
move-ctv4-type_3-n tv2 h4 v1 v2 v3 (1)
move-ctv2-type_1-e to4 h3 h4 v1 (1)
move-cto4-type_1-s to3 h3 v2 v3 (1)
move-dto3-type_1-s to3 h3 v1 v2 (0)
move-cto3-type_4-e tsq h1 h2 h3 v2 v3 (1)
move-ctsq-type_3-s tv3 h1 v3 v4 v5 (1)
move-dtv3-type_3-s tv3 h1 v2 v3 v4 (0)
move-ctv3-type_3-w tv1 h1 h2 v4 v5 (1)
move-ctv1-type_1-w to2 h2 h3 v5 (1)
move-cto2-type_1-w to1 h2 h3 v4 (1)
move-cto1-type_3-w tv4 h3 h4 v4 v5 (1)
move-ctv4-type_3-n tv2 h4 v2 v3 v4 (1)
move-dtv2-type_3-n tv2 h4 v3 v4 v5 (0)
move-ctv2-type_4-e tsq h2 h3 h4 v2 v3 (1)
move-ctsq-type_1-s to1 h2 v3 v4 (1)
move-dto1-type_1-s to1 h2 v2 v3 (0)
move-cto1-type_1-s to2 h2 v4 v5 (1)
move-dto2-type_1-s to2 h2 v3 v4 (0)
move-cto2-type_3-e tv1 h1 h2 v4 v5 (1)
move-ctv1-type_3-n tv3 h1 v2 v3 v4 (1)
move-dtv3-type_3-n tv3 h1 v3 v4 v5 (0)
move-ctv3-type_1-w to1 h1 h2 v2 (1)
move-dto1-type_1-n to1 h1 v2 v3 (0)
move-cto1-type_2-n th h1 h2 v1 v2 (1)
move-cth-type_1-w to3 h2 h3 v1 (1)
move-dto3-type_1-w to3 h1 h2 v1 (0)
move-cto3-type_1-w to4 h3 h4 v1 (1)
move-dto4-type_1-w to4 h2 h3 v1 (0)
move-cto4-type_4-s tsq h3 h4 v1 v2 v3 (1)
move-ctsq-type_1-e to2 h2 h3 v3 (1)
move-dto2-type_1-e to2 h3 h4 v3 (0)
move-cto2-type_3-s tv4 h3 v3 v4 v5 (1)
move-dtv4-type_3-n tv4 h3 v3 v4 v5 (0)
move-ctv4-type_1-e to1 h1 h2 v3 (1)
move-dto1-type_1-e to1 h2 h3 v3 (0)
move-cto1-type_2-n th h1 h2 v2 v3 (1)
move-cth-type_1-n to4 h2 v1 v2 (1)
move-dto4-type_1-w to4 h1 h2 v2 (0)
move-cto4-type_4-w tsq h2 h3 h4 v1 v2 (1)
[t=28937.3s, 0 KB] Plan length: 122 step(s).
[t=28937.3s, 0 KB] Plan cost: 80
[t=28937.3s, 0 KB] Expanded 46269715 state(s).
[t=28937.3s, 0 KB] Reopened 21724689 state(s).
[t=28937.3s, 0 KB] Evaluated 46269716 state(s).
[t=28937.3s, 0 KB] Evaluations: 70814743
[t=28937.3s, 0 KB] Generated 165204602 state(s).
[t=28937.3s, 0 KB] Dead ends: 0 state(s).
[t=28937.3s, 0 KB] Number of registered states: 24545027
[t=28937.3s, 0 KB] Int hash set load factor: 24545027/67108864 = 0.365749
[t=28937.3s, 0 KB] Int hash set resizes: 26
[t=28937.3s, 0 KB] Best solution cost so far: 80
[t=28937.3s, 0 KB] Solution found - keep searching
[t=28937.8s, 0 KB] Building successor generator...done!
[t=28937.8s, 0 KB] peak memory difference for successor generator creation: 0 KB
[t=28937.8s, 0 KB] time for successor generation creation: 0s
[t=28937.8s, 0 KB] Variables: 21
[t=28937.8s, 0 KB] FactPairs: 230
[t=28937.8s, 0 KB] Bytes per state: 12
[t=28937.8s, 0 KB] Starting search: lazy_wastar(list(hff2, hlm2), preferred = list(hff2, hlm2), w = 1)
[t=28937.8s, 0 KB] Conducting lazy best first search, (real) bound = 80
[t=28937.8s, 0 KB] 4 initial landmarks, 4 goal landmarks
[t=28937.8s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 11
[t=28937.8s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 21
[t=28937.8s, 0 KB] g=0, 1 evaluated, 0 expanded
[t=28937.8s, 0 KB] Initial heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 11
[t=28937.8s, 0 KB] Initial heuristic value for ff(transform = adapt_costs(plusone)): 21
[t=28937.8s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 19
[t=28937.8s, 0 KB] g=1, 2 evaluated, 1 expanded
[t=28937.8s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 9
[t=28937.8s, 0 KB] g=2, 4 evaluated, 3 expanded
[t=28937.8s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 18
[t=28937.8s, 0 KB] g=2, 6 evaluated, 5 expanded
[t=28937.8s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 17
[t=28937.8s, 0 KB] g=2, 10 evaluated, 9 expanded
[t=28937.8s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 15
[t=28937.8s, 0 KB] g=3, 14 evaluated, 13 expanded
[t=28937.8s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 14
[t=28937.8s, 0 KB] g=4, 15 evaluated, 14 expanded
[t=28937.8s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 8
[t=28937.8s, 0 KB] g=5, 23 evaluated, 22 expanded
[t=28937.9s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 7
[t=28937.9s, 0 KB] g=5, 41 evaluated, 40 expanded
[t=28937.9s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 11
[t=28937.9s, 0 KB] g=5, 156 evaluated, 155 expanded, 8 reopened
[t=28937.9s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 9
[t=28937.9s, 0 KB] g=8, 186 evaluated, 185 expanded, 9 reopened
[t=29033.1s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 8
[t=29033.1s, 0 KB] g=44, 456571 evaluated, 456570 expanded, 147810 reopened
[t=29033.1s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 7
[t=29033.1s, 0 KB] g=45, 456573 evaluated, 456572 expanded, 147810 reopened
[t=29524.4s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 6
[t=29524.4s, 0 KB] g=50, 3054079 evaluated, 3054078 expanded, 1159821 reopened
[t=29524.5s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 5
[t=29524.5s, 0 KB] g=55, 3054258 evaluated, 3054257 expanded, 1159893 reopened
[t=29903.5s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 4
[t=29903.5s, 0 KB] g=61, 5047056 evaluated, 5047055 expanded, 1933511 reopened
[t=29957.1s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 6
[t=29957.1s, 0 KB] g=55, 5297526 evaluated, 5297525 expanded, 2012702 reopened
[t=30023.7s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 4
[t=30023.7s, 0 KB] g=57, 5633822 evaluated, 5633821 expanded, 2133350 reopened
[t=31061.1s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 2
[t=31061.1s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 3
[t=31061.1s, 0 KB] g=66, 11177540 evaluated, 11177539 expanded, 4349835 reopened
[t=36348.4s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 2
[t=36348.4s, 0 KB] g=79, 45894069 evaluated, 45894068 expanded, 21617514 reopened
[t=36348.4s, 0 KB] Solution found!
[t=36348.4s, 0 KB] Actual search time: 7410.61s
move-cto1-type_2-w th h1 h2 h3 v3 (1)
move-cth-type_1-n to2 h3 v2 v3 (1)
move-dto2-type_1-e to2 h3 h4 v3 (0)
move-cto2-type_1-n to4 h3 v1 v2 (1)
move-dto4-type_1-n to4 h3 v2 v3 (0)
move-cto4-type_3-w tv4 h3 h4 v1 v2 (1)
move-ctv4-type_1-s to2 h4 v2 v3 (1)
move-dto2-type_1-s to2 h4 v1 v2 (0)
move-cto2-type_1-e to4 h3 h4 v3 (1)
move-dto4-type_1-s to4 h4 v2 v3 (0)
move-cto4-type_2-e th h1 h2 h3 v3 (1)
move-dth-type_2-e th h2 h3 h4 v3 (0)
move-cth-type_1-n to1 h2 v2 v3 (1)
move-dto1-type_1-w to1 h1 h2 v3 (0)
move-cto1-type_1-n to3 h2 v1 v2 (1)
move-dto3-type_1-n to3 h2 v2 v3 (0)
move-cto3-type_3-w tv4 h2 h3 v1 v2 (1)
move-ctv4-type_1-w to4 h3 h4 v2 (1)
move-dto4-type_1-s to4 h3 v1 v2 (0)
move-cto4-type_2-s th h3 h4 v2 v3 (1)
move-cth-type_1-e to3 h2 h3 v3 (1)
move-dto3-type_1-e to3 h3 h4 v3 (0)
move-cto3-type_1-e to1 h1 h2 v3 (1)
move-dto1-type_1-e to1 h2 h3 v3 (0)
move-cto1-type_3-n tv4 h2 v1 v2 v3 (1)
move-ctv4-type_3-n tv3 h1 v1 v2 v3 (1)
move-ctv3-type_1-w to4 h2 h3 v1 (1)
move-dto4-type_1-w to4 h1 h2 v1 (0)
move-cto4-type_1-w to2 h3 h4 v1 (1)
move-dto2-type_1-w to2 h2 h3 v1 (0)
move-cto2-type_2-s th h3 h4 v1 v2 (1)
move-cth-type_1-s to1 h3 v2 v3 (1)
move-dto1-type_1-e to1 h3 h4 v2 (0)
move-cto1-type_3-e tv4 h2 h3 v2 v3 (1)
move-ctv4-type_3-e tv3 h1 h2 v2 v3 (1)
move-ctv3-type_3-s tv1 h1 v3 v4 v5 (1)
move-dtv1-type_3-s tv1 h1 v2 v3 v4 (0)
move-ctv1-type_4-w tsq h1 h2 h3 v4 v5 (1)
move-ctsq-type_3-w tv2 h3 h4 v4 v5 (1)
move-ctv2-type_1-n to3 h4 v3 v4 (1)
move-dto3-type_1-n to3 h4 v4 v5 (0)
move-cto3-type_1-n to1 h4 v2 v3 (1)
move-dto1-type_1-n to1 h4 v3 v4 (0)
move-cto1-type_3-e tv4 h3 h4 v2 v3 (1)
move-ctv4-type_3-s tv2 h3 v3 v4 v5 (1)
move-dtv2-type_3-s tv2 h3 v2 v3 v4 (0)
move-ctv2-type_4-e tsq h1 h2 h3 v4 v5 (1)
move-ctsq-type_3-n tv1 h1 v2 v3 v4 (1)
move-dtv1-type_3-n tv1 h1 v3 v4 v5 (0)
move-ctv1-type_3-w tv3 h1 h2 v2 v3 (1)
move-ctv3-type_1-n to2 h2 v1 v2 (1)
move-dto2-type_1-n to2 h2 v2 v3 (0)
move-cto2-type_1-e to4 h1 h2 v1 (1)
move-dto4-type_1-n to4 h2 v1 v2 (0)
move-cto4-type_2-w th h2 h3 h4 v1 (1)
move-dth-type_2-w th h1 h2 h3 v1 (0)
move-cth-type_3-s tv4 h4 v1 v2 v3 (1)
move-ctv4-type_3-s tv2 h3 v1 v2 v3 (1)
move-ctv2-type_1-e to2 h2 h3 v3 (1)
move-dto2-type_1-e to2 h3 h4 v3 (0)
move-cto2-type_4-s tsq h2 h3 v3 v4 v5 (1)
move-ctsq-type_1-w to3 h3 h4 v5 (1)
move-dto3-type_1-w to3 h2 h3 v5 (0)
move-cto3-type_1-n to1 h4 v4 v5 (1)
move-dto1-type_1-w to1 h3 h4 v5 (0)
move-cto1-type_1-n to2 h4 v3 v4 (1)
move-dto2-type_1-n to2 h4 v4 v5 (0)
move-cto2-type_3-n tv4 h4 v1 v2 v3 (1)
move-dtv4-type_3-n tv4 h4 v2 v3 v4 (0)
move-ctv4-type_3-e tv2 h3 h4 v1 v2 (1)
move-ctv2-type_1-e to4 h2 h3 v2 (1)
move-dto4-type_1-s to4 h3 v1 v2 (0)
move-cto4-type_4-s tsq h2 h3 v2 v3 v4 (1)
move-ctsq-type_1-s to3 h2 v4 v5 (1)
move-dto3-type_1-e to3 h2 h3 v4 (0)
move-cto3-type_3-e tv1 h1 h2 v4 v5 (1)
move-ctv1-type_3-n tv3 h1 v2 v3 v4 (1)
move-dtv3-type_3-n tv3 h1 v3 v4 v5 (0)
move-ctv3-type_4-w tsq h1 h2 h3 v2 v3 (1)
move-ctsq-type_1-s to3 h3 v3 v4 (1)
move-cto3-type_1-s to1 h3 v4 v5 (1)
move-cto1-type_1-w to2 h3 h4 v5 (1)
move-cto2-type_3-n tv4 h4 v3 v4 v5 (1)
move-ctv4-type_3-n tv2 h4 v1 v2 v3 (1)
move-ctv2-type_1-e to4 h3 h4 v1 (1)
move-cto4-type_1-s to3 h3 v2 v3 (1)
move-dto3-type_1-s to3 h3 v1 v2 (0)
move-cto3-type_4-e tsq h1 h2 h3 v2 v3 (1)
move-ctsq-type_3-s tv3 h1 v3 v4 v5 (1)
move-dtv3-type_3-s tv3 h1 v2 v3 v4 (0)
move-ctv3-type_3-w tv1 h1 h2 v4 v5 (1)
move-ctv1-type_1-w to2 h2 h3 v5 (1)
move-cto2-type_1-w to1 h2 h3 v4 (1)
move-cto1-type_3-w tv4 h3 h4 v4 v5 (1)
move-ctv4-type_3-n tv2 h4 v2 v3 v4 (1)
move-dtv2-type_3-n tv2 h4 v3 v4 v5 (0)
move-ctv2-type_4-e tsq h2 h3 h4 v2 v3 (1)
move-ctsq-type_1-s to1 h2 v3 v4 (1)
move-dto1-type_1-s to1 h2 v2 v3 (0)
move-cto1-type_1-s to2 h2 v4 v5 (1)
move-dto2-type_1-s to2 h2 v3 v4 (0)
move-cto2-type_3-e tv1 h1 h2 v4 v5 (1)
move-ctv1-type_3-n tv3 h1 v2 v3 v4 (1)
move-dtv3-type_3-n tv3 h1 v3 v4 v5 (0)
move-ctv3-type_1-w to1 h1 h2 v2 (1)
move-dto1-type_1-n to1 h1 v2 v3 (0)
move-cto1-type_2-n th h1 h2 v1 v2 (1)
move-cth-type_1-w to3 h2 h3 v1 (1)
move-dto3-type_1-w to3 h1 h2 v1 (0)
move-cto3-type_1-w to4 h3 h4 v1 (1)
move-dto4-type_1-w to4 h2 h3 v1 (0)
move-cto4-type_4-s tsq h3 h4 v1 v2 v3 (1)
move-ctsq-type_1-e to2 h2 h3 v3 (1)
move-dto2-type_1-e to2 h3 h4 v3 (0)
move-cto2-type_1-e to1 h1 h2 v3 (1)
move-dto1-type_1-e to1 h2 h3 v3 (0)
move-cto1-type_2-n th h1 h2 v2 v3 (1)
move-cth-type_1-n to4 h2 v1 v2 (1)
move-dto4-type_1-w to4 h1 h2 v2 (0)
move-cto4-type_4-w tsq h2 h3 h4 v1 v2 (1)
[t=36348.5s, 0 KB] Plan length: 120 step(s).
[t=36348.5s, 0 KB] Plan cost: 79
[t=36348.5s, 0 KB] Expanded 45894098 state(s).
[t=36348.5s, 0 KB] Reopened 21617530 state(s).
[t=36348.5s, 0 KB] Evaluated 45894099 state(s).
[t=36348.5s, 0 KB] Evaluations: 70170668
[t=36348.5s, 0 KB] Generated 163855597 state(s).
[t=36348.5s, 0 KB] Dead ends: 0 state(s).
[t=36348.5s, 0 KB] Number of registered states: 24276569
[t=36348.5s, 0 KB] Int hash set load factor: 24276569/67108864 = 0.361749
[t=36348.5s, 0 KB] Int hash set resizes: 26
[t=36348.5s, 0 KB] Best solution cost so far: 79
[t=36348.5s, 0 KB] Solution found - keep searching
[t=36349s, 0 KB] Building successor generator...done!
[t=36349s, 0 KB] peak memory difference for successor generator creation: 0 KB
[t=36349s, 0 KB] time for successor generation creation: 0s
[t=36349s, 0 KB] Variables: 21
[t=36349s, 0 KB] FactPairs: 230
[t=36349s, 0 KB] Bytes per state: 12
[t=36349s, 0 KB] Starting search: lazy_wastar(list(hff2, hlm2), preferred = list(hff2, hlm2), w = 1)
[t=36349s, 0 KB] Conducting lazy best first search, (real) bound = 79
[t=36349s, 0 KB] 4 initial landmarks, 4 goal landmarks
[t=36349s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 21
[t=36349s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 11
[t=36349s, 0 KB] g=0, 1 evaluated, 0 expanded
[t=36349s, 0 KB] Initial heuristic value for ff(transform = adapt_costs(plusone)): 21
[t=36349s, 0 KB] Initial heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 11
[t=36349s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 19
[t=36349s, 0 KB] g=1, 2 evaluated, 1 expanded
[t=36349s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 9
[t=36349s, 0 KB] g=2, 4 evaluated, 3 expanded
[t=36349s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 18
[t=36349s, 0 KB] g=2, 6 evaluated, 5 expanded
[t=36349s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 17
[t=36349s, 0 KB] g=2, 10 evaluated, 9 expanded
[t=36349s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 15
[t=36349s, 0 KB] g=3, 14 evaluated, 13 expanded
[t=36349s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 14
[t=36349s, 0 KB] g=4, 15 evaluated, 14 expanded
[t=36349s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 8
[t=36349s, 0 KB] g=5, 23 evaluated, 22 expanded
[t=36349s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 7
[t=36349s, 0 KB] g=5, 41 evaluated, 40 expanded
[t=36349s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 11
[t=36349s, 0 KB] g=5, 156 evaluated, 155 expanded, 8 reopened
[t=36349s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 9
[t=36349s, 0 KB] g=8, 186 evaluated, 185 expanded, 9 reopened
[t=36444s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 8
[t=36444s, 0 KB] g=44, 456571 evaluated, 456570 expanded, 147810 reopened
[t=36444s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 7
[t=36444s, 0 KB] g=45, 456573 evaluated, 456572 expanded, 147810 reopened
[t=36935.2s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 6
[t=36935.2s, 0 KB] g=50, 3054079 evaluated, 3054078 expanded, 1159821 reopened
[t=36935.2s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 5
[t=36935.2s, 0 KB] g=55, 3054258 evaluated, 3054257 expanded, 1159893 reopened
[t=37313.8s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 4
[t=37313.8s, 0 KB] g=61, 5047056 evaluated, 5047055 expanded, 1933511 reopened
[t=37367.7s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 6
[t=37367.7s, 0 KB] g=55, 5297526 evaluated, 5297525 expanded, 2012702 reopened
[t=37434s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 4
[t=37434s, 0 KB] g=57, 5633822 evaluated, 5633821 expanded, 2133350 reopened
[t=38478.4s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 3
[t=38478.4s, 0 KB] New best heuristic value for lmcount(lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(plusone), pref = true): 2
[t=38478.4s, 0 KB] g=66, 11177540 evaluated, 11177539 expanded, 4349835 reopened
[t=43669.8s, 0 KB] New best heuristic value for ff(transform = adapt_costs(plusone)): 2
[t=43669.8s, 0 KB] g=78, 45442175 evaluated, 45442174 expanded, 21482186 reopened
[t=45754.3s, 0 KB] Completely explored state space -- no solution!
[t=45754.3s, 0 KB] Actual search time: 9405.34s
[t=45754.3s, 0 KB] Expanded 62453423 state(s).
[t=45754.3s, 0 KB] Reopened 31865297 state(s).
[t=45754.3s, 0 KB] Evaluated 62453423 state(s).
[t=45754.3s, 0 KB] Evaluations: 93041549
[t=45754.3s, 0 KB] Generated 222243145 state(s).
[t=45754.3s, 0 KB] Dead ends: 0 state(s).
[t=45754.3s, 0 KB] Number of registered states: 30588126
[t=45754.3s, 0 KB] Int hash set load factor: 30588126/67108864 = 0.455799
[t=45754.3s, 0 KB] Int hash set resizes: 26
[t=45754.3s, 0 KB] Best solution cost so far: 79
[t=45754.3s, 0 KB] No solution found - keep searching
[t=45754.4s, 0 KB] Actual search time: 45754.2s
[t=45754.4s, 0 KB] Cumulative statistics:
[t=45754.4s, 0 KB] Expanded 292652979 state(s).
[t=45754.4s, 0 KB] Reopened 142797231 state(s).
[t=45754.4s, 0 KB] Evaluated 292652987 state(s).
[t=45754.4s, 0 KB] Evaluations: 442508743
[t=45754.4s, 0 KB] Generated 1047860290 state(s).
[t=45754.4s, 0 KB] Dead ends: 0 state(s).
[t=45754.4s, 0 KB] Search time: 45754.2s
[t=45754.4s, 0 KB] Total time: 45754.4s
Solution found.
Peak memory: 0 KB
search exit code: 0